{
  "resolvedId": "C:/Users/.Freelancer/ONLINE/src/pages/CollaborateDetail/CollaborateDetail.jsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import React, { useEffect, useMemo, useState } from \"react\";\nimport { IoIosArrowBack, IoMdClose } from \"react-icons/io\";\nimport {\n  MdKeyboardArrowRight,\n  MdKeyboardDoubleArrowRight,\n} from \"react-icons/md\";\nimport { RiArrowDropDownLine } from \"react-icons/ri\";\nimport { Link, useParams } from \"react-router-dom\";\nimport \"swiper/css\";\nimport \"swiper/css/navigation\";\nimport \"swiper/css/pagination\";\nimport { Navigation, Pagination } from \"swiper/modules\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { sampleProducts } from \"../CategoryDetail/CategoryDetail\";\nimport \"./CollaborateDetail.css\";\n\n// Brand details data\nconst brandsData = {\n  \"Harry Nuriev\": {\n    image:\n      \"https://boutique.louvre.fr/files/contents/400564/697889-5b1c2d67-xl/harry-nuriev-2.jpg\",\n    bio: \"Harry Nuriev là một nhà thiết kế nội thất và kiến trúc sư người Nga, người sáng lập Crosby Studios. Anh nổi tiếng với phong cách thiết kế độc đáo kết hợp giữa nghệ thuật đương đại và chức năng thực tiễn.\",\n    achievements:\n      \"Nuriev đã tạo ra nhiều không gian triển lãm và cửa hàng bán lẻ độc đáo trên khắp thế giới. Các tác phẩm của anh đã được trưng bày tại Design Miami và nhiều triển lãm quốc tế khác.\",\n    influence:\n      \"Phong cách thiết kế của Nuriev đã tạo ra một làn sóng mới trong thiết kế nội thất đương đại, với việc sử dụng màu sắc đơn sắc và các hình khối hình học táo bạo.\",\n    stats: {\n      works: 145,\n      exhibitions: 42,\n      awards: 15,\n    },\n  },\n  \"Philippe Apeloig\": {\n    image:\n      \"https://boutique.louvre.fr/files/contents/400549/695234-89885e78-xl/philippe-apeloig.jpg\",\n    bio: \"Philippe Apeloig là một nhà thiết kế đồ họa người Pháp nổi tiếng thế giới. Ông được biết đến với phong cách typography độc đáo và thiết kế poster sáng tạo cho các tổ chức văn hóa.\",\n    achievements:\n      \"Apeloig đã thiết kế nhiều logo và nhận diện thương hiệu cho các tổ chức văn hóa lớn như Bảo tàng Louvre, Musée d'Orsay và Théâtre du Châtelet.\",\n    influence:\n      \"Công việc của ông đã góp phần định hình nên diện mạo của thiết kế đồ họa đương đại Pháp và truyền cảm hứng cho nhiều thế hệ nhà thiết kế.\",\n    stats: {\n      works: 278,\n      exhibitions: 56,\n      awards: 23,\n    },\n  },\n  Barbapapa: {\n    image:\n      \"https://boutique.louvre.fr/files/contents/400573/697532-920cc925-xl/barbapapa-2.jpg\",\n    bio: \"Barbapapa là một series nhân vật hoạt hình nổi tiếng được tạo ra bởi Annette Tison và Talus Taylor vào năm 1970. Các nhân vật có khả năng thay đổi hình dạng đã trở thành biểu tượng văn hóa.\",\n    achievements:\n      \"Series đã được dịch ra hơn 30 ngôn ngữ và phát sóng tại nhiều quốc gia. Thương hiệu đã phát triển thành nhiều sản phẩm từ sách đến đồ chơi và thời trang.\",\n    influence:\n      \"Barbapapa đã ảnh hưởng đến văn hóa đại chúng và thiết kế nhân vật hoạt hình, đặc biệt trong việc kết hợp giáo dục với giải trí.\",\n    stats: {\n      works: 156,\n      exhibitions: 34,\n      awards: 12,\n    },\n  },\n  \"Jean-Michel Othoniel\": {\n    image:\n      \"https://boutique.louvre.fr/files/contents/400578/695362-10bf7f9a-xl/jean-michel-othoniel-2.jpg\",\n    bio: \"Jean-Michel Othoniel là một nghệ sĩ đương đại người Pháp, nổi tiếng với các tác phẩm điêu khắc thủy tinh quy mô lớn. Ông là nghệ sĩ đầu tiên được mời tạo ra tác phẩm cố định cho Bảo tàng Louvre.\",\n    achievements:\n      \"Othoniel đã tạo ra 'Les Belles Danses' cho khu vườn của Bảo tàng Louvre và nhiều tác phẩm công cộng quy mô lớn trên khắp thế giới.\",\n    influence:\n      \"Công việc của ông đã mở ra một hướng mới trong nghệ thuật đương đại, đặc biệt trong việc sử dụng thủy tinh như một chất liệu điêu khắc.\",\n    stats: {\n      works: 189,\n      exhibitions: 67,\n      awards: 18,\n    },\n  },\n};\n\nconst CollaborateDetail = () => {\n  const { brandName } = useParams();\n  const [brandProducts, setBrandProducts] = useState([]);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  const [filteredCount, setFilteredCount] = useState(0);\n  const [showFilters, setShowFilters] = useState(false);\n  const [sortOrder, setSortOrder] = useState(\"default\");\n  const [showSortDropdown, setShowSortDropdown] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [previewCount, setPreviewCount] = useState(0);\n  const decodedBrandName = decodeURIComponent(brandName);\n  const brandInfo = brandsData[decodedBrandName];\n\n  // Calculate min and max prices from products\n  const priceRange = useMemo(() => {\n    const prices = brandProducts.map((product) =>\n      parseInt(product.price.replace(/[^\\d]/g, \"\"))\n    );\n    return {\n      min: 0,\n      max: Math.max(...prices, 0),\n    };\n  }, [brandProducts]);\n\n  const [selectedFilters, setSelectedFilters] = useState({\n    types: [],\n    publishYears: [],\n    priceRange: [priceRange.min, priceRange.max],\n  });\n\n  const [openSections, setOpenSections] = useState({\n    types: false,\n    publishYears: false,\n    priceRange: false,\n  });\n\n  useEffect(() => {\n    // Filter products for this brand\n    const products = [];\n    Object.values(sampleProducts).forEach((categoryProducts) => {\n      categoryProducts.forEach((product) => {\n        if (\n          decodedBrandName === \"Harry Nuriev\" &&\n          [1, 2, 3].includes(parseInt(product.id.split(\"-\")[1]))\n        ) {\n          products.push(product);\n        } else if (\n          decodedBrandName === \"Philippe Apeloig\" &&\n          [4, 5, 6].includes(parseInt(product.id.split(\"-\")[1]))\n        ) {\n          products.push(product);\n        } else if (\n          decodedBrandName === \"Barbapapa\" &&\n          [7, 8].includes(parseInt(product.id.split(\"-\")[1]))\n        ) {\n          products.push(product);\n        } else if (\n          decodedBrandName === \"Jean-Michel Othoniel\" &&\n          parseInt(product.id.split(\"-\")[1]) === 9\n        ) {\n          products.push(product);\n        }\n      });\n    });\n\n    setBrandProducts(products);\n    setFilteredProducts(products);\n    setFilteredCount(products.length);\n    setPreviewCount(products.length);\n  }, [decodedBrandName]);\n\n  // Format price for display\n  const formatPrice = (price) => {\n    return new Intl.NumberFormat(\"vi-VN\", {\n      style: \"currency\",\n      currency: \"VND\",\n    }).format(price);\n  };\n\n  // Filter products based on current filters\n  const filterProducts = (products, filters) => {\n    return products.filter((product) => {\n      const typeMatch =\n        filters.types.length === 0 || filters.types.includes(product.type);\n      const yearMatch =\n        filters.publishYears.length === 0 ||\n        filters.publishYears.includes(product.publishYear);\n      const price = parseInt(product.price.replace(/[^\\d]/g, \"\"));\n      const priceMatch =\n        price >= filters.priceRange[0] && price <= filters.priceRange[1];\n\n      return typeMatch && yearMatch && priceMatch;\n    });\n  };\n\n  // Update preview count whenever filters change\n  useEffect(() => {\n    const filtered = filterProducts(brandProducts, selectedFilters);\n    setPreviewCount(filtered.length);\n  }, [selectedFilters, brandProducts]);\n\n  // Apply filters\n  const applyFilters = () => {\n    const filtered = filterProducts(brandProducts, selectedFilters);\n    setFilteredProducts(filtered);\n    setFilteredCount(filtered.length);\n    setShowFilters(false);\n    setCurrentPage(1);\n  };\n\n  // Reset filters\n  const resetFilters = () => {\n    const initialFilters = {\n      types: [],\n      publishYears: [],\n      priceRange: [priceRange.min, priceRange.max],\n    };\n    setSelectedFilters(initialFilters);\n    setFilteredProducts(brandProducts);\n    setFilteredCount(brandProducts.length);\n    setPreviewCount(brandProducts.length);\n    setCurrentPage(1);\n  };\n\n  // Handle sort change\n  const handleSortChange = (order) => {\n    setSortOrder(order);\n    setShowSortDropdown(false);\n\n    const sorted = [...filteredProducts].sort((a, b) => {\n      if (order === \"default\") {\n        return a.id - b.id;\n      }\n      const priceA = parseInt(a.price.replace(/\\D/g, \"\"));\n      const priceB = parseInt(b.price.replace(/\\D/g, \"\"));\n      return order === \"asc\" ? priceA - priceB : priceB - priceA;\n    });\n    setFilteredProducts(sorted);\n  };\n\n  // Toggle section open/close\n  const toggleSection = (section) => {\n    setOpenSections((prev) => ({\n      ...prev,\n      [section]: !prev[section],\n    }));\n  };\n\n  // Pagination\n  const productsPerPage = 10;\n  const totalPages = Math.ceil(filteredProducts.length / productsPerPage);\n  const currentProducts = filteredProducts.slice(\n    (currentPage - 1) * productsPerPage,\n    currentPage * productsPerPage\n  );\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n    window.scrollTo(0, 0);\n  };\n\n  return (\n    <div className=\"collaborate-detail\">\n      <Link to=\"/collaborate\" className=\"back-button-collaborate\">\n        <IoIosArrowBack />\n        <span>Quay lại</span>\n      </Link>\n\n      <div className=\"collaborate-detail-hero\">\n        <img\n          src={brandInfo.image}\n          alt={decodedBrandName}\n          className=\"hero-image\"\n        />\n        <h1 className=\"hero-title\">{decodedBrandName}</h1>\n      </div>\n\n      <section className=\"collaborate-detail-product\">\n        <h2 className=\"section-title\">Sản phẩm nổi bật</h2>\n        <Swiper\n          modules={[Navigation, Pagination]}\n          spaceBetween={30}\n          slidesPerView={4}\n          navigation\n          pagination={{\n            clickable: true,\n            renderBullet: function (index, className) {\n              return '<span class=\"' + className + '\"></span>';\n            },\n          }}\n          autoplay={false}\n          breakpoints={{\n            320: {\n              slidesPerView: 1,\n              spaceBetween: 20,\n            },\n            480: {\n              slidesPerView: 2,\n              spaceBetween: 20,\n            },\n            768: {\n              slidesPerView: 3,\n              spaceBetween: 30,\n            },\n            1024: {\n              slidesPerView: 4,\n              spaceBetween: 30,\n            },\n          }}\n        >\n          {brandProducts.map((product) => (\n            <SwiperSlide key={product.id}>\n              <Link\n                to={`/product/${product.id}`}\n                className=\"collaborate-detail-item\"\n              >\n                <div className=\"product-image\">\n                  <img src={product.image} alt={product.title} />\n                </div>\n                <h3 className=\"product-title\">{product.title}</h3>\n                <p className=\"product-price\">{product.price}</p>\n              </Link>\n            </SwiperSlide>\n          ))}\n        </Swiper>\n      </section>\n\n      {brandInfo && (\n        <section className=\"collaborate-detail-info\">\n          <div className=\"collaborate-detail-info-container\">\n            <div className=\"brand-image\">\n              <img src={brandInfo.image} alt={decodedBrandName} />\n            </div>\n            <div className=\"brand-info\">\n              <h2>{decodedBrandName}</h2>\n              <p>{brandInfo.bio}</p>\n              <p>\n                <strong>Thành tựu:</strong> {brandInfo.achievements}\n              </p>\n              <p>\n                <strong>Ảnh hưởng:</strong> {brandInfo.influence}\n              </p>\n              <div className=\"brand-stats\">\n                <div className=\"stat-item\">\n                  <h3>{brandInfo.stats.works}</h3>\n                  <p>Tác phẩm</p>\n                </div>\n                <div className=\"stat-item\">\n                  <h3>{brandInfo.stats.exhibitions}</h3>\n                  <p>Triển lãm</p>\n                </div>\n                <div className=\"stat-item\">\n                  <h3>{brandInfo.stats.awards}</h3>\n                  <p>Giải thưởng</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      )}\n\n      <section className=\"collaborate-all-products\">\n        <h2 className=\"collaborate-all-products-title\">Tất cả sản phẩm</h2>\n\n        <div className=\"sort-product-collaborate\">\n          <div className=\"total-products-collaborate\">\n            <span className=\"total-count-collaborate\">{filteredCount}</span>\n            <span>sản phẩm</span>\n          </div>\n          <div className=\"sort-dropdown-container-collaborate\">\n            <div\n              className={`sort-dropdown-header-collaborate ${\n                showSortDropdown ? \"active\" : \"\"\n              }`}\n              onClick={() => setShowSortDropdown(!showSortDropdown)}\n            >\n              <span>\n                Sắp xếp theo:{\" \"}\n                {sortOrder === \"asc\"\n                  ? \"giá tăng dần\"\n                  : sortOrder === \"desc\"\n                  ? \"giá giảm dần\"\n                  : \"lựa chọn của chúng tôi\"}\n              </span>\n              <RiArrowDropDownLine\n                className={showSortDropdown ? \"rotated\" : \"\"}\n              />\n            </div>\n            {showSortDropdown && (\n              <div className=\"sort-dropdown-menu-collaborate\">\n                <div\n                  className={`sort-option-collaborate ${\n                    sortOrder === \"default\" ? \"active\" : \"\"\n                  }`}\n                  onClick={() => handleSortChange(\"default\")}\n                >\n                  <strong>lựa chọn của chúng tôi</strong>\n                </div>\n                <div\n                  className={`sort-option-collaborate ${\n                    sortOrder === \"asc\" ? \"active\" : \"\"\n                  }`}\n                  onClick={() => handleSortChange(\"asc\")}\n                >\n                  giá tăng dần\n                </div>\n                <div\n                  className={`sort-option-collaborate ${\n                    sortOrder === \"desc\" ? \"active\" : \"\"\n                  }`}\n                  onClick={() => handleSortChange(\"desc\")}\n                >\n                  giá giảm dần\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"collaborate-products-grid\">\n          {currentProducts.map((product) => (\n            <Link\n              to={`/product/${product.id}`}\n              className=\"collaborate-product-card\"\n              key={product.id}\n            >\n              <img src={product.image} alt={product.title} />\n              <div className=\"collaborate-product-content\">\n                <h3>{product.title}</h3>\n                <p>{product.price}</p>\n              </div>\n            </Link>\n          ))}\n        </div>\n\n        <div className=\"result-pager-collaborate\">\n          {Array.from({ length: totalPages }, (_, i) => (\n            <button\n              key={i + 1}\n              className={currentPage === i + 1 ? \"active\" : \"\"}\n              onClick={() => handlePageChange(i + 1)}\n            >\n              {i + 1}\n            </button>\n          ))}\n          <button\n            onClick={() =>\n              handlePageChange(Math.min(currentPage + 1, totalPages))\n            }\n            disabled={currentPage === totalPages}\n          >\n            <MdKeyboardArrowRight />\n          </button>\n          <button\n            onClick={() =>\n              handlePageChange(Math.min(currentPage + 10, totalPages))\n            }\n            disabled={currentPage + 10 > totalPages}\n          >\n            <MdKeyboardDoubleArrowRight />\n          </button>\n        </div>\n      </section>\n\n      <button\n        className=\"filter-button-collaborate\"\n        onClick={() => {\n          setShowFilters(true);\n          if (!showFilters) {\n            resetFilters();\n          }\n        }}\n      >\n        {showFilters ? `Kết quả (${previewCount})` : \"Bộ lọc\"}\n      </button>\n\n      {showFilters && (\n        <div className=\"search-filters-modal-collaborate\">\n          <div className=\"search-filters-content-collaborate\">\n            <div className=\"search-filters-header-collaborate\">\n              <h2 className=\"search-filters-title-collaborate\">Bộ lọc</h2>\n              <button\n                className=\"close-filters-button-collaborate\"\n                onClick={() => setShowFilters(false)}\n                aria-label=\"Đóng bộ lọc\"\n              >\n                <IoMdClose />\n              </button>\n            </div>\n\n            {/* Types Section */}\n            <div className=\"filter-section\">\n              <div\n                className=\"filter-header\"\n                onClick={() => toggleSection(\"types\")}\n              >\n                <h3>Thể loại</h3>\n                <RiArrowDropDownLine\n                  className={openSections.types ? \"rotated\" : \"\"}\n                />\n              </div>\n              {openSections.types && (\n                <div className=\"filter-options\">\n                  {Array.from(new Set(brandProducts.map((p) => p.type))).map(\n                    (type) => (\n                      <label key={type} className=\"filter-option\">\n                        <input\n                          type=\"checkbox\"\n                          checked={selectedFilters.types.includes(type)}\n                          onChange={(e) => {\n                            const newTypes = e.target.checked\n                              ? [...selectedFilters.types, type]\n                              : selectedFilters.types.filter((t) => t !== type);\n                            setSelectedFilters((prev) => ({\n                              ...prev,\n                              types: newTypes,\n                            }));\n                          }}\n                        />\n                        <span>{type}</span>\n                      </label>\n                    )\n                  )}\n                </div>\n              )}\n            </div>\n\n            {/* Publish Years Section */}\n            <div className=\"filter-section\">\n              <div\n                className=\"filter-header\"\n                onClick={() => toggleSection(\"publishYears\")}\n              >\n                <h3>Thời gian xuất bản</h3>\n                <RiArrowDropDownLine\n                  className={openSections.publishYears ? \"rotated\" : \"\"}\n                />\n              </div>\n              {openSections.publishYears && (\n                <div className=\"filter-options\">\n                  {Array.from(\n                    new Set(brandProducts.map((p) => p.publishYear))\n                  ).map((year) => (\n                    <label key={year} className=\"filter-option\">\n                      <input\n                        type=\"checkbox\"\n                        checked={selectedFilters.publishYears.includes(year)}\n                        onChange={(e) => {\n                          const newYears = e.target.checked\n                            ? [...selectedFilters.publishYears, year]\n                            : selectedFilters.publishYears.filter(\n                                (y) => y !== year\n                              );\n                          setSelectedFilters((prev) => ({\n                            ...prev,\n                            publishYears: newYears,\n                          }));\n                        }}\n                      />\n                      <span>{year}</span>\n                    </label>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            {/* Price Range Section */}\n            <div className=\"filter-section\">\n              <div\n                className=\"filter-header\"\n                onClick={() => toggleSection(\"priceRange\")}\n              >\n                <h3>Giá cả</h3>\n                <RiArrowDropDownLine\n                  className={openSections.priceRange ? \"rotated\" : \"\"}\n                />\n              </div>\n              {openSections.priceRange && (\n                <div className=\"price-range-slider\">\n                  <div className=\"price-range-inputs\">\n                    <input\n                      type=\"range\"\n                      min={priceRange.min}\n                      max={priceRange.max}\n                      value={selectedFilters.priceRange[0]}\n                      onChange={(e) => {\n                        const minValue = parseInt(e.target.value);\n                        setSelectedFilters((prev) => ({\n                          ...prev,\n                          priceRange: [\n                            Math.min(minValue, prev.priceRange[1]),\n                            prev.priceRange[1],\n                          ],\n                        }));\n                      }}\n                    />\n                    <input\n                      type=\"range\"\n                      min={priceRange.min}\n                      max={priceRange.max}\n                      value={selectedFilters.priceRange[1]}\n                      onChange={(e) => {\n                        const maxValue = parseInt(e.target.value);\n                        setSelectedFilters((prev) => ({\n                          ...prev,\n                          priceRange: [\n                            prev.priceRange[0],\n                            Math.max(maxValue, prev.priceRange[0]),\n                          ],\n                        }));\n                      }}\n                    />\n                  </div>\n                  <div className=\"price-range-values\">\n                    <span>{formatPrice(selectedFilters.priceRange[0])}</span>\n                    <span>{formatPrice(selectedFilters.priceRange[1])}</span>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          <button\n            className=\"apply-filters-button-collaborate\"\n            onClick={applyFilters}\n            disabled={previewCount === 0}\n          >\n            Kết quả ({previewCount})\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CollaborateDetail;\n",
      "start": 1751253944682,
      "end": 1751253945009,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1751253945009,
      "end": 1751253945009,
      "order": "pre"
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { IoIosArrowBack, IoMdClose } from \"react-icons/io\";\nimport {\n  MdKeyboardArrowRight,\n  MdKeyboardDoubleArrowRight\n} from \"react-icons/md\";\nimport { RiArrowDropDownLine } from \"react-icons/ri\";\nimport { Link, useParams } from \"react-router-dom\";\nimport \"swiper/css\";\nimport \"swiper/css/navigation\";\nimport \"swiper/css/pagination\";\nimport { Navigation, Pagination } from \"swiper/modules\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { sampleProducts } from \"../CategoryDetail/CategoryDetail\";\nimport \"./CollaborateDetail.css\";\nconst brandsData = {\n  \"Harry Nuriev\": {\n    image: \"https://boutique.louvre.fr/files/contents/400564/697889-5b1c2d67-xl/harry-nuriev-2.jpg\",\n    bio: \"Harry Nuriev là một nhà thiết kế nội thất và kiến trúc sư người Nga, người sáng lập Crosby Studios. Anh nổi tiếng với phong cách thiết kế độc đáo kết hợp giữa nghệ thuật đương đại và chức năng thực tiễn.\",\n    achievements: \"Nuriev đã tạo ra nhiều không gian triển lãm và cửa hàng bán lẻ độc đáo trên khắp thế giới. Các tác phẩm của anh đã được trưng bày tại Design Miami và nhiều triển lãm quốc tế khác.\",\n    influence: \"Phong cách thiết kế của Nuriev đã tạo ra một làn sóng mới trong thiết kế nội thất đương đại, với việc sử dụng màu sắc đơn sắc và các hình khối hình học táo bạo.\",\n    stats: {\n      works: 145,\n      exhibitions: 42,\n      awards: 15\n    }\n  },\n  \"Philippe Apeloig\": {\n    image: \"https://boutique.louvre.fr/files/contents/400549/695234-89885e78-xl/philippe-apeloig.jpg\",\n    bio: \"Philippe Apeloig là một nhà thiết kế đồ họa người Pháp nổi tiếng thế giới. Ông được biết đến với phong cách typography độc đáo và thiết kế poster sáng tạo cho các tổ chức văn hóa.\",\n    achievements: \"Apeloig đã thiết kế nhiều logo và nhận diện thương hiệu cho các tổ chức văn hóa lớn như Bảo tàng Louvre, Musée d'Orsay và Théâtre du Châtelet.\",\n    influence: \"Công việc của ông đã góp phần định hình nên diện mạo của thiết kế đồ họa đương đại Pháp và truyền cảm hứng cho nhiều thế hệ nhà thiết kế.\",\n    stats: {\n      works: 278,\n      exhibitions: 56,\n      awards: 23\n    }\n  },\n  Barbapapa: {\n    image: \"https://boutique.louvre.fr/files/contents/400573/697532-920cc925-xl/barbapapa-2.jpg\",\n    bio: \"Barbapapa là một series nhân vật hoạt hình nổi tiếng được tạo ra bởi Annette Tison và Talus Taylor vào năm 1970. Các nhân vật có khả năng thay đổi hình dạng đã trở thành biểu tượng văn hóa.\",\n    achievements: \"Series đã được dịch ra hơn 30 ngôn ngữ và phát sóng tại nhiều quốc gia. Thương hiệu đã phát triển thành nhiều sản phẩm từ sách đến đồ chơi và thời trang.\",\n    influence: \"Barbapapa đã ảnh hưởng đến văn hóa đại chúng và thiết kế nhân vật hoạt hình, đặc biệt trong việc kết hợp giáo dục với giải trí.\",\n    stats: {\n      works: 156,\n      exhibitions: 34,\n      awards: 12\n    }\n  },\n  \"Jean-Michel Othoniel\": {\n    image: \"https://boutique.louvre.fr/files/contents/400578/695362-10bf7f9a-xl/jean-michel-othoniel-2.jpg\",\n    bio: \"Jean-Michel Othoniel là một nghệ sĩ đương đại người Pháp, nổi tiếng với các tác phẩm điêu khắc thủy tinh quy mô lớn. Ông là nghệ sĩ đầu tiên được mời tạo ra tác phẩm cố định cho Bảo tàng Louvre.\",\n    achievements: \"Othoniel đã tạo ra 'Les Belles Danses' cho khu vườn của Bảo tàng Louvre và nhiều tác phẩm công cộng quy mô lớn trên khắp thế giới.\",\n    influence: \"Công việc của ông đã mở ra một hướng mới trong nghệ thuật đương đại, đặc biệt trong việc sử dụng thủy tinh như một chất liệu điêu khắc.\",\n    stats: {\n      works: 189,\n      exhibitions: 67,\n      awards: 18\n    }\n  }\n};\nconst CollaborateDetail = () => {\n  const { brandName } = useParams();\n  const [brandProducts, setBrandProducts] = useState([]);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  const [filteredCount, setFilteredCount] = useState(0);\n  const [showFilters, setShowFilters] = useState(false);\n  const [sortOrder, setSortOrder] = useState(\"default\");\n  const [showSortDropdown, setShowSortDropdown] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [previewCount, setPreviewCount] = useState(0);\n  const decodedBrandName = decodeURIComponent(brandName);\n  const brandInfo = brandsData[decodedBrandName];\n  const priceRange = useMemo(() => {\n    const prices = brandProducts.map(\n      (product) => parseInt(product.price.replace(/[^\\d]/g, \"\"))\n    );\n    return {\n      min: 0,\n      max: Math.max(...prices, 0)\n    };\n  }, [brandProducts]);\n  const [selectedFilters, setSelectedFilters] = useState({\n    types: [],\n    publishYears: [],\n    priceRange: [priceRange.min, priceRange.max]\n  });\n  const [openSections, setOpenSections] = useState({\n    types: false,\n    publishYears: false,\n    priceRange: false\n  });\n  useEffect(() => {\n    const products = [];\n    Object.values(sampleProducts).forEach((categoryProducts) => {\n      categoryProducts.forEach((product) => {\n        if (decodedBrandName === \"Harry Nuriev\" && [1, 2, 3].includes(parseInt(product.id.split(\"-\")[1]))) {\n          products.push(product);\n        } else if (decodedBrandName === \"Philippe Apeloig\" && [4, 5, 6].includes(parseInt(product.id.split(\"-\")[1]))) {\n          products.push(product);\n        } else if (decodedBrandName === \"Barbapapa\" && [7, 8].includes(parseInt(product.id.split(\"-\")[1]))) {\n          products.push(product);\n        } else if (decodedBrandName === \"Jean-Michel Othoniel\" && parseInt(product.id.split(\"-\")[1]) === 9) {\n          products.push(product);\n        }\n      });\n    });\n    setBrandProducts(products);\n    setFilteredProducts(products);\n    setFilteredCount(products.length);\n    setPreviewCount(products.length);\n  }, [decodedBrandName]);\n  const formatPrice = (price) => {\n    return new Intl.NumberFormat(\"vi-VN\", {\n      style: \"currency\",\n      currency: \"VND\"\n    }).format(price);\n  };\n  const filterProducts = (products, filters) => {\n    return products.filter((product) => {\n      const typeMatch = filters.types.length === 0 || filters.types.includes(product.type);\n      const yearMatch = filters.publishYears.length === 0 || filters.publishYears.includes(product.publishYear);\n      const price = parseInt(product.price.replace(/[^\\d]/g, \"\"));\n      const priceMatch = price >= filters.priceRange[0] && price <= filters.priceRange[1];\n      return typeMatch && yearMatch && priceMatch;\n    });\n  };\n  useEffect(() => {\n    const filtered = filterProducts(brandProducts, selectedFilters);\n    setPreviewCount(filtered.length);\n  }, [selectedFilters, brandProducts]);\n  const applyFilters = () => {\n    const filtered = filterProducts(brandProducts, selectedFilters);\n    setFilteredProducts(filtered);\n    setFilteredCount(filtered.length);\n    setShowFilters(false);\n    setCurrentPage(1);\n  };\n  const resetFilters = () => {\n    const initialFilters = {\n      types: [],\n      publishYears: [],\n      priceRange: [priceRange.min, priceRange.max]\n    };\n    setSelectedFilters(initialFilters);\n    setFilteredProducts(brandProducts);\n    setFilteredCount(brandProducts.length);\n    setPreviewCount(brandProducts.length);\n    setCurrentPage(1);\n  };\n  const handleSortChange = (order) => {\n    setSortOrder(order);\n    setShowSortDropdown(false);\n    const sorted = [...filteredProducts].sort((a, b) => {\n      if (order === \"default\") {\n        return a.id - b.id;\n      }\n      const priceA = parseInt(a.price.replace(/\\D/g, \"\"));\n      const priceB = parseInt(b.price.replace(/\\D/g, \"\"));\n      return order === \"asc\" ? priceA - priceB : priceB - priceA;\n    });\n    setFilteredProducts(sorted);\n  };\n  const toggleSection = (section) => {\n    setOpenSections((prev) => ({\n      ...prev,\n      [section]: !prev[section]\n    }));\n  };\n  const productsPerPage = 10;\n  const totalPages = Math.ceil(filteredProducts.length / productsPerPage);\n  const currentProducts = filteredProducts.slice(\n    (currentPage - 1) * productsPerPage,\n    currentPage * productsPerPage\n  );\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n    window.scrollTo(0, 0);\n  };\n  return /* @__PURE__ */ jsxs(\"div\", { className: \"collaborate-detail\", children: [\n    /* @__PURE__ */ jsxs(Link, { to: \"/collaborate\", className: \"back-button-collaborate\", children: [\n      /* @__PURE__ */ jsx(IoIosArrowBack, {}),\n      /* @__PURE__ */ jsx(\"span\", { children: \"Quay lại\" })\n    ] }),\n    /* @__PURE__ */ jsxs(\"div\", { className: \"collaborate-detail-hero\", children: [\n      /* @__PURE__ */ jsx(\n        \"img\",\n        {\n          src: brandInfo.image,\n          alt: decodedBrandName,\n          className: \"hero-image\"\n        }\n      ),\n      /* @__PURE__ */ jsx(\"h1\", { className: \"hero-title\", children: decodedBrandName })\n    ] }),\n    /* @__PURE__ */ jsxs(\"section\", { className: \"collaborate-detail-product\", children: [\n      /* @__PURE__ */ jsx(\"h2\", { className: \"section-title\", children: \"Sản phẩm nổi bật\" }),\n      /* @__PURE__ */ jsx(\n        Swiper,\n        {\n          modules: [Navigation, Pagination],\n          spaceBetween: 30,\n          slidesPerView: 4,\n          navigation: true,\n          pagination: {\n            clickable: true,\n            renderBullet: function(index, className) {\n              return '<span class=\"' + className + '\"></span>';\n            }\n          },\n          autoplay: false,\n          breakpoints: {\n            320: {\n              slidesPerView: 1,\n              spaceBetween: 20\n            },\n            480: {\n              slidesPerView: 2,\n              spaceBetween: 20\n            },\n            768: {\n              slidesPerView: 3,\n              spaceBetween: 30\n            },\n            1024: {\n              slidesPerView: 4,\n              spaceBetween: 30\n            }\n          },\n          children: brandProducts.map((product) => /* @__PURE__ */ jsx(SwiperSlide, { children: /* @__PURE__ */ jsxs(\n            Link,\n            {\n              to: `/product/${product.id}`,\n              className: \"collaborate-detail-item\",\n              children: [\n                /* @__PURE__ */ jsx(\"div\", { className: \"product-image\", children: /* @__PURE__ */ jsx(\"img\", { src: product.image, alt: product.title }) }),\n                /* @__PURE__ */ jsx(\"h3\", { className: \"product-title\", children: product.title }),\n                /* @__PURE__ */ jsx(\"p\", { className: \"product-price\", children: product.price })\n              ]\n            }\n          ) }, product.id))\n        }\n      )\n    ] }),\n    brandInfo && /* @__PURE__ */ jsx(\"section\", { className: \"collaborate-detail-info\", children: /* @__PURE__ */ jsxs(\"div\", { className: \"collaborate-detail-info-container\", children: [\n      /* @__PURE__ */ jsx(\"div\", { className: \"brand-image\", children: /* @__PURE__ */ jsx(\"img\", { src: brandInfo.image, alt: decodedBrandName }) }),\n      /* @__PURE__ */ jsxs(\"div\", { className: \"brand-info\", children: [\n        /* @__PURE__ */ jsx(\"h2\", { children: decodedBrandName }),\n        /* @__PURE__ */ jsx(\"p\", { children: brandInfo.bio }),\n        /* @__PURE__ */ jsxs(\"p\", { children: [\n          /* @__PURE__ */ jsx(\"strong\", { children: \"Thành tựu:\" }),\n          \" \",\n          brandInfo.achievements\n        ] }),\n        /* @__PURE__ */ jsxs(\"p\", { children: [\n          /* @__PURE__ */ jsx(\"strong\", { children: \"Ảnh hưởng:\" }),\n          \" \",\n          brandInfo.influence\n        ] }),\n        /* @__PURE__ */ jsxs(\"div\", { className: \"brand-stats\", children: [\n          /* @__PURE__ */ jsxs(\"div\", { className: \"stat-item\", children: [\n            /* @__PURE__ */ jsx(\"h3\", { children: brandInfo.stats.works }),\n            /* @__PURE__ */ jsx(\"p\", { children: \"Tác phẩm\" })\n          ] }),\n          /* @__PURE__ */ jsxs(\"div\", { className: \"stat-item\", children: [\n            /* @__PURE__ */ jsx(\"h3\", { children: brandInfo.stats.exhibitions }),\n            /* @__PURE__ */ jsx(\"p\", { children: \"Triển lãm\" })\n          ] }),\n          /* @__PURE__ */ jsxs(\"div\", { className: \"stat-item\", children: [\n            /* @__PURE__ */ jsx(\"h3\", { children: brandInfo.stats.awards }),\n            /* @__PURE__ */ jsx(\"p\", { children: \"Giải thưởng\" })\n          ] })\n        ] })\n      ] })\n    ] }) }),\n    /* @__PURE__ */ jsxs(\"section\", { className: \"collaborate-all-products\", children: [\n      /* @__PURE__ */ jsx(\"h2\", { className: \"collaborate-all-products-title\", children: \"Tất cả sản phẩm\" }),\n      /* @__PURE__ */ jsxs(\"div\", { className: \"sort-product-collaborate\", children: [\n        /* @__PURE__ */ jsxs(\"div\", { className: \"total-products-collaborate\", children: [\n          /* @__PURE__ */ jsx(\"span\", { className: \"total-count-collaborate\", children: filteredCount }),\n          /* @__PURE__ */ jsx(\"span\", { children: \"sản phẩm\" })\n        ] }),\n        /* @__PURE__ */ jsxs(\"div\", { className: \"sort-dropdown-container-collaborate\", children: [\n          /* @__PURE__ */ jsxs(\n            \"div\",\n            {\n              className: `sort-dropdown-header-collaborate ${showSortDropdown ? \"active\" : \"\"}`,\n              onClick: () => setShowSortDropdown(!showSortDropdown),\n              children: [\n                /* @__PURE__ */ jsxs(\"span\", { children: [\n                  \"Sắp xếp theo:\",\n                  \" \",\n                  sortOrder === \"asc\" ? \"giá tăng dần\" : sortOrder === \"desc\" ? \"giá giảm dần\" : \"lựa chọn của chúng tôi\"\n                ] }),\n                /* @__PURE__ */ jsx(\n                  RiArrowDropDownLine,\n                  {\n                    className: showSortDropdown ? \"rotated\" : \"\"\n                  }\n                )\n              ]\n            }\n          ),\n          showSortDropdown && /* @__PURE__ */ jsxs(\"div\", { className: \"sort-dropdown-menu-collaborate\", children: [\n            /* @__PURE__ */ jsx(\n              \"div\",\n              {\n                className: `sort-option-collaborate ${sortOrder === \"default\" ? \"active\" : \"\"}`,\n                onClick: () => handleSortChange(\"default\"),\n                children: /* @__PURE__ */ jsx(\"strong\", { children: \"lựa chọn của chúng tôi\" })\n              }\n            ),\n            /* @__PURE__ */ jsx(\n              \"div\",\n              {\n                className: `sort-option-collaborate ${sortOrder === \"asc\" ? \"active\" : \"\"}`,\n                onClick: () => handleSortChange(\"asc\"),\n                children: \"giá tăng dần\"\n              }\n            ),\n            /* @__PURE__ */ jsx(\n              \"div\",\n              {\n                className: `sort-option-collaborate ${sortOrder === \"desc\" ? \"active\" : \"\"}`,\n                onClick: () => handleSortChange(\"desc\"),\n                children: \"giá giảm dần\"\n              }\n            )\n          ] })\n        ] })\n      ] }),\n      /* @__PURE__ */ jsx(\"div\", { className: \"collaborate-products-grid\", children: currentProducts.map((product) => /* @__PURE__ */ jsxs(\n        Link,\n        {\n          to: `/product/${product.id}`,\n          className: \"collaborate-product-card\",\n          children: [\n            /* @__PURE__ */ jsx(\"img\", { src: product.image, alt: product.title }),\n            /* @__PURE__ */ jsxs(\"div\", { className: \"collaborate-product-content\", children: [\n              /* @__PURE__ */ jsx(\"h3\", { children: product.title }),\n              /* @__PURE__ */ jsx(\"p\", { children: product.price })\n            ] })\n          ]\n        },\n        product.id\n      )) }),\n      /* @__PURE__ */ jsxs(\"div\", { className: \"result-pager-collaborate\", children: [\n        Array.from({ length: totalPages }, (_, i) => /* @__PURE__ */ jsx(\n          \"button\",\n          {\n            className: currentPage === i + 1 ? \"active\" : \"\",\n            onClick: () => handlePageChange(i + 1),\n            children: i + 1\n          },\n          i + 1\n        )),\n        /* @__PURE__ */ jsx(\n          \"button\",\n          {\n            onClick: () => handlePageChange(Math.min(currentPage + 1, totalPages)),\n            disabled: currentPage === totalPages,\n            children: /* @__PURE__ */ jsx(MdKeyboardArrowRight, {})\n          }\n        ),\n        /* @__PURE__ */ jsx(\n          \"button\",\n          {\n            onClick: () => handlePageChange(Math.min(currentPage + 10, totalPages)),\n            disabled: currentPage + 10 > totalPages,\n            children: /* @__PURE__ */ jsx(MdKeyboardDoubleArrowRight, {})\n          }\n        )\n      ] })\n    ] }),\n    /* @__PURE__ */ jsx(\n      \"button\",\n      {\n        className: \"filter-button-collaborate\",\n        onClick: () => {\n          setShowFilters(true);\n          if (!showFilters) {\n            resetFilters();\n          }\n        },\n        children: showFilters ? `Kết quả (${previewCount})` : \"Bộ lọc\"\n      }\n    ),\n    showFilters && /* @__PURE__ */ jsxs(\"div\", { className: \"search-filters-modal-collaborate\", children: [\n      /* @__PURE__ */ jsxs(\"div\", { className: \"search-filters-content-collaborate\", children: [\n        /* @__PURE__ */ jsxs(\"div\", { className: \"search-filters-header-collaborate\", children: [\n          /* @__PURE__ */ jsx(\"h2\", { className: \"search-filters-title-collaborate\", children: \"Bộ lọc\" }),\n          /* @__PURE__ */ jsx(\n            \"button\",\n            {\n              className: \"close-filters-button-collaborate\",\n              onClick: () => setShowFilters(false),\n              \"aria-label\": \"Đóng bộ lọc\",\n              children: /* @__PURE__ */ jsx(IoMdClose, {})\n            }\n          )\n        ] }),\n        /* @__PURE__ */ jsxs(\"div\", { className: \"filter-section\", children: [\n          /* @__PURE__ */ jsxs(\n            \"div\",\n            {\n              className: \"filter-header\",\n              onClick: () => toggleSection(\"types\"),\n              children: [\n                /* @__PURE__ */ jsx(\"h3\", { children: \"Thể loại\" }),\n                /* @__PURE__ */ jsx(\n                  RiArrowDropDownLine,\n                  {\n                    className: openSections.types ? \"rotated\" : \"\"\n                  }\n                )\n              ]\n            }\n          ),\n          openSections.types && /* @__PURE__ */ jsx(\"div\", { className: \"filter-options\", children: Array.from(new Set(brandProducts.map((p) => p.type))).map(\n            (type) => /* @__PURE__ */ jsxs(\"label\", { className: \"filter-option\", children: [\n              /* @__PURE__ */ jsx(\n                \"input\",\n                {\n                  type: \"checkbox\",\n                  checked: selectedFilters.types.includes(type),\n                  onChange: (e) => {\n                    const newTypes = e.target.checked ? [...selectedFilters.types, type] : selectedFilters.types.filter((t) => t !== type);\n                    setSelectedFilters((prev) => ({\n                      ...prev,\n                      types: newTypes\n                    }));\n                  }\n                }\n              ),\n              /* @__PURE__ */ jsx(\"span\", { children: type })\n            ] }, type)\n          ) })\n        ] }),\n        /* @__PURE__ */ jsxs(\"div\", { className: \"filter-section\", children: [\n          /* @__PURE__ */ jsxs(\n            \"div\",\n            {\n              className: \"filter-header\",\n              onClick: () => toggleSection(\"publishYears\"),\n              children: [\n                /* @__PURE__ */ jsx(\"h3\", { children: \"Thời gian xuất bản\" }),\n                /* @__PURE__ */ jsx(\n                  RiArrowDropDownLine,\n                  {\n                    className: openSections.publishYears ? \"rotated\" : \"\"\n                  }\n                )\n              ]\n            }\n          ),\n          openSections.publishYears && /* @__PURE__ */ jsx(\"div\", { className: \"filter-options\", children: Array.from(\n            new Set(brandProducts.map((p) => p.publishYear))\n          ).map((year) => /* @__PURE__ */ jsxs(\"label\", { className: \"filter-option\", children: [\n            /* @__PURE__ */ jsx(\n              \"input\",\n              {\n                type: \"checkbox\",\n                checked: selectedFilters.publishYears.includes(year),\n                onChange: (e) => {\n                  const newYears = e.target.checked ? [...selectedFilters.publishYears, year] : selectedFilters.publishYears.filter(\n                    (y) => y !== year\n                  );\n                  setSelectedFilters((prev) => ({\n                    ...prev,\n                    publishYears: newYears\n                  }));\n                }\n              }\n            ),\n            /* @__PURE__ */ jsx(\"span\", { children: year })\n          ] }, year)) })\n        ] }),\n        /* @__PURE__ */ jsxs(\"div\", { className: \"filter-section\", children: [\n          /* @__PURE__ */ jsxs(\n            \"div\",\n            {\n              className: \"filter-header\",\n              onClick: () => toggleSection(\"priceRange\"),\n              children: [\n                /* @__PURE__ */ jsx(\"h3\", { children: \"Giá cả\" }),\n                /* @__PURE__ */ jsx(\n                  RiArrowDropDownLine,\n                  {\n                    className: openSections.priceRange ? \"rotated\" : \"\"\n                  }\n                )\n              ]\n            }\n          ),\n          openSections.priceRange && /* @__PURE__ */ jsxs(\"div\", { className: \"price-range-slider\", children: [\n            /* @__PURE__ */ jsxs(\"div\", { className: \"price-range-inputs\", children: [\n              /* @__PURE__ */ jsx(\n                \"input\",\n                {\n                  type: \"range\",\n                  min: priceRange.min,\n                  max: priceRange.max,\n                  value: selectedFilters.priceRange[0],\n                  onChange: (e) => {\n                    const minValue = parseInt(e.target.value);\n                    setSelectedFilters((prev) => ({\n                      ...prev,\n                      priceRange: [\n                        Math.min(minValue, prev.priceRange[1]),\n                        prev.priceRange[1]\n                      ]\n                    }));\n                  }\n                }\n              ),\n              /* @__PURE__ */ jsx(\n                \"input\",\n                {\n                  type: \"range\",\n                  min: priceRange.min,\n                  max: priceRange.max,\n                  value: selectedFilters.priceRange[1],\n                  onChange: (e) => {\n                    const maxValue = parseInt(e.target.value);\n                    setSelectedFilters((prev) => ({\n                      ...prev,\n                      priceRange: [\n                        prev.priceRange[0],\n                        Math.max(maxValue, prev.priceRange[0])\n                      ]\n                    }));\n                  }\n                }\n              )\n            ] }),\n            /* @__PURE__ */ jsxs(\"div\", { className: \"price-range-values\", children: [\n              /* @__PURE__ */ jsx(\"span\", { children: formatPrice(selectedFilters.priceRange[0]) }),\n              /* @__PURE__ */ jsx(\"span\", { children: formatPrice(selectedFilters.priceRange[1]) })\n            ] })\n          ] })\n        ] })\n      ] }),\n      /* @__PURE__ */ jsxs(\n        \"button\",\n        {\n          className: \"apply-filters-button-collaborate\",\n          onClick: applyFilters,\n          disabled: previewCount === 0,\n          children: [\n            \"Kết quả (\",\n            previewCount,\n            \")\"\n          ]\n        }\n      )\n    ] })\n  ] });\n};\nexport default CollaborateDetail;\n",
      "start": 1751253945009,
      "end": 1751253945148,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "C:/Users/.Freelancer/ONLINE/src/pages/CollaborateDetail/CollaborateDetail.jsx"
        ],
        "sourcesContent": [
          "import React, { useEffect, useMemo, useState } from \"react\";\nimport { IoIosArrowBack, IoMdClose } from \"react-icons/io\";\nimport {\n  MdKeyboardArrowRight,\n  MdKeyboardDoubleArrowRight,\n} from \"react-icons/md\";\nimport { RiArrowDropDownLine } from \"react-icons/ri\";\nimport { Link, useParams } from \"react-router-dom\";\nimport \"swiper/css\";\nimport \"swiper/css/navigation\";\nimport \"swiper/css/pagination\";\nimport { Navigation, Pagination } from \"swiper/modules\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { sampleProducts } from \"../CategoryDetail/CategoryDetail\";\nimport \"./CollaborateDetail.css\";\n\n// Brand details data\nconst brandsData = {\n  \"Harry Nuriev\": {\n    image:\n      \"https://boutique.louvre.fr/files/contents/400564/697889-5b1c2d67-xl/harry-nuriev-2.jpg\",\n    bio: \"Harry Nuriev là một nhà thiết kế nội thất và kiến trúc sư người Nga, người sáng lập Crosby Studios. Anh nổi tiếng với phong cách thiết kế độc đáo kết hợp giữa nghệ thuật đương đại và chức năng thực tiễn.\",\n    achievements:\n      \"Nuriev đã tạo ra nhiều không gian triển lãm và cửa hàng bán lẻ độc đáo trên khắp thế giới. Các tác phẩm của anh đã được trưng bày tại Design Miami và nhiều triển lãm quốc tế khác.\",\n    influence:\n      \"Phong cách thiết kế của Nuriev đã tạo ra một làn sóng mới trong thiết kế nội thất đương đại, với việc sử dụng màu sắc đơn sắc và các hình khối hình học táo bạo.\",\n    stats: {\n      works: 145,\n      exhibitions: 42,\n      awards: 15,\n    },\n  },\n  \"Philippe Apeloig\": {\n    image:\n      \"https://boutique.louvre.fr/files/contents/400549/695234-89885e78-xl/philippe-apeloig.jpg\",\n    bio: \"Philippe Apeloig là một nhà thiết kế đồ họa người Pháp nổi tiếng thế giới. Ông được biết đến với phong cách typography độc đáo và thiết kế poster sáng tạo cho các tổ chức văn hóa.\",\n    achievements:\n      \"Apeloig đã thiết kế nhiều logo và nhận diện thương hiệu cho các tổ chức văn hóa lớn như Bảo tàng Louvre, Musée d'Orsay và Théâtre du Châtelet.\",\n    influence:\n      \"Công việc của ông đã góp phần định hình nên diện mạo của thiết kế đồ họa đương đại Pháp và truyền cảm hứng cho nhiều thế hệ nhà thiết kế.\",\n    stats: {\n      works: 278,\n      exhibitions: 56,\n      awards: 23,\n    },\n  },\n  Barbapapa: {\n    image:\n      \"https://boutique.louvre.fr/files/contents/400573/697532-920cc925-xl/barbapapa-2.jpg\",\n    bio: \"Barbapapa là một series nhân vật hoạt hình nổi tiếng được tạo ra bởi Annette Tison và Talus Taylor vào năm 1970. Các nhân vật có khả năng thay đổi hình dạng đã trở thành biểu tượng văn hóa.\",\n    achievements:\n      \"Series đã được dịch ra hơn 30 ngôn ngữ và phát sóng tại nhiều quốc gia. Thương hiệu đã phát triển thành nhiều sản phẩm từ sách đến đồ chơi và thời trang.\",\n    influence:\n      \"Barbapapa đã ảnh hưởng đến văn hóa đại chúng và thiết kế nhân vật hoạt hình, đặc biệt trong việc kết hợp giáo dục với giải trí.\",\n    stats: {\n      works: 156,\n      exhibitions: 34,\n      awards: 12,\n    },\n  },\n  \"Jean-Michel Othoniel\": {\n    image:\n      \"https://boutique.louvre.fr/files/contents/400578/695362-10bf7f9a-xl/jean-michel-othoniel-2.jpg\",\n    bio: \"Jean-Michel Othoniel là một nghệ sĩ đương đại người Pháp, nổi tiếng với các tác phẩm điêu khắc thủy tinh quy mô lớn. Ông là nghệ sĩ đầu tiên được mời tạo ra tác phẩm cố định cho Bảo tàng Louvre.\",\n    achievements:\n      \"Othoniel đã tạo ra 'Les Belles Danses' cho khu vườn của Bảo tàng Louvre và nhiều tác phẩm công cộng quy mô lớn trên khắp thế giới.\",\n    influence:\n      \"Công việc của ông đã mở ra một hướng mới trong nghệ thuật đương đại, đặc biệt trong việc sử dụng thủy tinh như một chất liệu điêu khắc.\",\n    stats: {\n      works: 189,\n      exhibitions: 67,\n      awards: 18,\n    },\n  },\n};\n\nconst CollaborateDetail = () => {\n  const { brandName } = useParams();\n  const [brandProducts, setBrandProducts] = useState([]);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  const [filteredCount, setFilteredCount] = useState(0);\n  const [showFilters, setShowFilters] = useState(false);\n  const [sortOrder, setSortOrder] = useState(\"default\");\n  const [showSortDropdown, setShowSortDropdown] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [previewCount, setPreviewCount] = useState(0);\n  const decodedBrandName = decodeURIComponent(brandName);\n  const brandInfo = brandsData[decodedBrandName];\n\n  // Calculate min and max prices from products\n  const priceRange = useMemo(() => {\n    const prices = brandProducts.map((product) =>\n      parseInt(product.price.replace(/[^\\d]/g, \"\"))\n    );\n    return {\n      min: 0,\n      max: Math.max(...prices, 0),\n    };\n  }, [brandProducts]);\n\n  const [selectedFilters, setSelectedFilters] = useState({\n    types: [],\n    publishYears: [],\n    priceRange: [priceRange.min, priceRange.max],\n  });\n\n  const [openSections, setOpenSections] = useState({\n    types: false,\n    publishYears: false,\n    priceRange: false,\n  });\n\n  useEffect(() => {\n    // Filter products for this brand\n    const products = [];\n    Object.values(sampleProducts).forEach((categoryProducts) => {\n      categoryProducts.forEach((product) => {\n        if (\n          decodedBrandName === \"Harry Nuriev\" &&\n          [1, 2, 3].includes(parseInt(product.id.split(\"-\")[1]))\n        ) {\n          products.push(product);\n        } else if (\n          decodedBrandName === \"Philippe Apeloig\" &&\n          [4, 5, 6].includes(parseInt(product.id.split(\"-\")[1]))\n        ) {\n          products.push(product);\n        } else if (\n          decodedBrandName === \"Barbapapa\" &&\n          [7, 8].includes(parseInt(product.id.split(\"-\")[1]))\n        ) {\n          products.push(product);\n        } else if (\n          decodedBrandName === \"Jean-Michel Othoniel\" &&\n          parseInt(product.id.split(\"-\")[1]) === 9\n        ) {\n          products.push(product);\n        }\n      });\n    });\n\n    setBrandProducts(products);\n    setFilteredProducts(products);\n    setFilteredCount(products.length);\n    setPreviewCount(products.length);\n  }, [decodedBrandName]);\n\n  // Format price for display\n  const formatPrice = (price) => {\n    return new Intl.NumberFormat(\"vi-VN\", {\n      style: \"currency\",\n      currency: \"VND\",\n    }).format(price);\n  };\n\n  // Filter products based on current filters\n  const filterProducts = (products, filters) => {\n    return products.filter((product) => {\n      const typeMatch =\n        filters.types.length === 0 || filters.types.includes(product.type);\n      const yearMatch =\n        filters.publishYears.length === 0 ||\n        filters.publishYears.includes(product.publishYear);\n      const price = parseInt(product.price.replace(/[^\\d]/g, \"\"));\n      const priceMatch =\n        price >= filters.priceRange[0] && price <= filters.priceRange[1];\n\n      return typeMatch && yearMatch && priceMatch;\n    });\n  };\n\n  // Update preview count whenever filters change\n  useEffect(() => {\n    const filtered = filterProducts(brandProducts, selectedFilters);\n    setPreviewCount(filtered.length);\n  }, [selectedFilters, brandProducts]);\n\n  // Apply filters\n  const applyFilters = () => {\n    const filtered = filterProducts(brandProducts, selectedFilters);\n    setFilteredProducts(filtered);\n    setFilteredCount(filtered.length);\n    setShowFilters(false);\n    setCurrentPage(1);\n  };\n\n  // Reset filters\n  const resetFilters = () => {\n    const initialFilters = {\n      types: [],\n      publishYears: [],\n      priceRange: [priceRange.min, priceRange.max],\n    };\n    setSelectedFilters(initialFilters);\n    setFilteredProducts(brandProducts);\n    setFilteredCount(brandProducts.length);\n    setPreviewCount(brandProducts.length);\n    setCurrentPage(1);\n  };\n\n  // Handle sort change\n  const handleSortChange = (order) => {\n    setSortOrder(order);\n    setShowSortDropdown(false);\n\n    const sorted = [...filteredProducts].sort((a, b) => {\n      if (order === \"default\") {\n        return a.id - b.id;\n      }\n      const priceA = parseInt(a.price.replace(/\\D/g, \"\"));\n      const priceB = parseInt(b.price.replace(/\\D/g, \"\"));\n      return order === \"asc\" ? priceA - priceB : priceB - priceA;\n    });\n    setFilteredProducts(sorted);\n  };\n\n  // Toggle section open/close\n  const toggleSection = (section) => {\n    setOpenSections((prev) => ({\n      ...prev,\n      [section]: !prev[section],\n    }));\n  };\n\n  // Pagination\n  const productsPerPage = 10;\n  const totalPages = Math.ceil(filteredProducts.length / productsPerPage);\n  const currentProducts = filteredProducts.slice(\n    (currentPage - 1) * productsPerPage,\n    currentPage * productsPerPage\n  );\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n    window.scrollTo(0, 0);\n  };\n\n  return (\n    <div className=\"collaborate-detail\">\n      <Link to=\"/collaborate\" className=\"back-button-collaborate\">\n        <IoIosArrowBack />\n        <span>Quay lại</span>\n      </Link>\n\n      <div className=\"collaborate-detail-hero\">\n        <img\n          src={brandInfo.image}\n          alt={decodedBrandName}\n          className=\"hero-image\"\n        />\n        <h1 className=\"hero-title\">{decodedBrandName}</h1>\n      </div>\n\n      <section className=\"collaborate-detail-product\">\n        <h2 className=\"section-title\">Sản phẩm nổi bật</h2>\n        <Swiper\n          modules={[Navigation, Pagination]}\n          spaceBetween={30}\n          slidesPerView={4}\n          navigation\n          pagination={{\n            clickable: true,\n            renderBullet: function (index, className) {\n              return '<span class=\"' + className + '\"></span>';\n            },\n          }}\n          autoplay={false}\n          breakpoints={{\n            320: {\n              slidesPerView: 1,\n              spaceBetween: 20,\n            },\n            480: {\n              slidesPerView: 2,\n              spaceBetween: 20,\n            },\n            768: {\n              slidesPerView: 3,\n              spaceBetween: 30,\n            },\n            1024: {\n              slidesPerView: 4,\n              spaceBetween: 30,\n            },\n          }}\n        >\n          {brandProducts.map((product) => (\n            <SwiperSlide key={product.id}>\n              <Link\n                to={`/product/${product.id}`}\n                className=\"collaborate-detail-item\"\n              >\n                <div className=\"product-image\">\n                  <img src={product.image} alt={product.title} />\n                </div>\n                <h3 className=\"product-title\">{product.title}</h3>\n                <p className=\"product-price\">{product.price}</p>\n              </Link>\n            </SwiperSlide>\n          ))}\n        </Swiper>\n      </section>\n\n      {brandInfo && (\n        <section className=\"collaborate-detail-info\">\n          <div className=\"collaborate-detail-info-container\">\n            <div className=\"brand-image\">\n              <img src={brandInfo.image} alt={decodedBrandName} />\n            </div>\n            <div className=\"brand-info\">\n              <h2>{decodedBrandName}</h2>\n              <p>{brandInfo.bio}</p>\n              <p>\n                <strong>Thành tựu:</strong> {brandInfo.achievements}\n              </p>\n              <p>\n                <strong>Ảnh hưởng:</strong> {brandInfo.influence}\n              </p>\n              <div className=\"brand-stats\">\n                <div className=\"stat-item\">\n                  <h3>{brandInfo.stats.works}</h3>\n                  <p>Tác phẩm</p>\n                </div>\n                <div className=\"stat-item\">\n                  <h3>{brandInfo.stats.exhibitions}</h3>\n                  <p>Triển lãm</p>\n                </div>\n                <div className=\"stat-item\">\n                  <h3>{brandInfo.stats.awards}</h3>\n                  <p>Giải thưởng</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      )}\n\n      <section className=\"collaborate-all-products\">\n        <h2 className=\"collaborate-all-products-title\">Tất cả sản phẩm</h2>\n\n        <div className=\"sort-product-collaborate\">\n          <div className=\"total-products-collaborate\">\n            <span className=\"total-count-collaborate\">{filteredCount}</span>\n            <span>sản phẩm</span>\n          </div>\n          <div className=\"sort-dropdown-container-collaborate\">\n            <div\n              className={`sort-dropdown-header-collaborate ${\n                showSortDropdown ? \"active\" : \"\"\n              }`}\n              onClick={() => setShowSortDropdown(!showSortDropdown)}\n            >\n              <span>\n                Sắp xếp theo:{\" \"}\n                {sortOrder === \"asc\"\n                  ? \"giá tăng dần\"\n                  : sortOrder === \"desc\"\n                  ? \"giá giảm dần\"\n                  : \"lựa chọn của chúng tôi\"}\n              </span>\n              <RiArrowDropDownLine\n                className={showSortDropdown ? \"rotated\" : \"\"}\n              />\n            </div>\n            {showSortDropdown && (\n              <div className=\"sort-dropdown-menu-collaborate\">\n                <div\n                  className={`sort-option-collaborate ${\n                    sortOrder === \"default\" ? \"active\" : \"\"\n                  }`}\n                  onClick={() => handleSortChange(\"default\")}\n                >\n                  <strong>lựa chọn của chúng tôi</strong>\n                </div>\n                <div\n                  className={`sort-option-collaborate ${\n                    sortOrder === \"asc\" ? \"active\" : \"\"\n                  }`}\n                  onClick={() => handleSortChange(\"asc\")}\n                >\n                  giá tăng dần\n                </div>\n                <div\n                  className={`sort-option-collaborate ${\n                    sortOrder === \"desc\" ? \"active\" : \"\"\n                  }`}\n                  onClick={() => handleSortChange(\"desc\")}\n                >\n                  giá giảm dần\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"collaborate-products-grid\">\n          {currentProducts.map((product) => (\n            <Link\n              to={`/product/${product.id}`}\n              className=\"collaborate-product-card\"\n              key={product.id}\n            >\n              <img src={product.image} alt={product.title} />\n              <div className=\"collaborate-product-content\">\n                <h3>{product.title}</h3>\n                <p>{product.price}</p>\n              </div>\n            </Link>\n          ))}\n        </div>\n\n        <div className=\"result-pager-collaborate\">\n          {Array.from({ length: totalPages }, (_, i) => (\n            <button\n              key={i + 1}\n              className={currentPage === i + 1 ? \"active\" : \"\"}\n              onClick={() => handlePageChange(i + 1)}\n            >\n              {i + 1}\n            </button>\n          ))}\n          <button\n            onClick={() =>\n              handlePageChange(Math.min(currentPage + 1, totalPages))\n            }\n            disabled={currentPage === totalPages}\n          >\n            <MdKeyboardArrowRight />\n          </button>\n          <button\n            onClick={() =>\n              handlePageChange(Math.min(currentPage + 10, totalPages))\n            }\n            disabled={currentPage + 10 > totalPages}\n          >\n            <MdKeyboardDoubleArrowRight />\n          </button>\n        </div>\n      </section>\n\n      <button\n        className=\"filter-button-collaborate\"\n        onClick={() => {\n          setShowFilters(true);\n          if (!showFilters) {\n            resetFilters();\n          }\n        }}\n      >\n        {showFilters ? `Kết quả (${previewCount})` : \"Bộ lọc\"}\n      </button>\n\n      {showFilters && (\n        <div className=\"search-filters-modal-collaborate\">\n          <div className=\"search-filters-content-collaborate\">\n            <div className=\"search-filters-header-collaborate\">\n              <h2 className=\"search-filters-title-collaborate\">Bộ lọc</h2>\n              <button\n                className=\"close-filters-button-collaborate\"\n                onClick={() => setShowFilters(false)}\n                aria-label=\"Đóng bộ lọc\"\n              >\n                <IoMdClose />\n              </button>\n            </div>\n\n            {/* Types Section */}\n            <div className=\"filter-section\">\n              <div\n                className=\"filter-header\"\n                onClick={() => toggleSection(\"types\")}\n              >\n                <h3>Thể loại</h3>\n                <RiArrowDropDownLine\n                  className={openSections.types ? \"rotated\" : \"\"}\n                />\n              </div>\n              {openSections.types && (\n                <div className=\"filter-options\">\n                  {Array.from(new Set(brandProducts.map((p) => p.type))).map(\n                    (type) => (\n                      <label key={type} className=\"filter-option\">\n                        <input\n                          type=\"checkbox\"\n                          checked={selectedFilters.types.includes(type)}\n                          onChange={(e) => {\n                            const newTypes = e.target.checked\n                              ? [...selectedFilters.types, type]\n                              : selectedFilters.types.filter((t) => t !== type);\n                            setSelectedFilters((prev) => ({\n                              ...prev,\n                              types: newTypes,\n                            }));\n                          }}\n                        />\n                        <span>{type}</span>\n                      </label>\n                    )\n                  )}\n                </div>\n              )}\n            </div>\n\n            {/* Publish Years Section */}\n            <div className=\"filter-section\">\n              <div\n                className=\"filter-header\"\n                onClick={() => toggleSection(\"publishYears\")}\n              >\n                <h3>Thời gian xuất bản</h3>\n                <RiArrowDropDownLine\n                  className={openSections.publishYears ? \"rotated\" : \"\"}\n                />\n              </div>\n              {openSections.publishYears && (\n                <div className=\"filter-options\">\n                  {Array.from(\n                    new Set(brandProducts.map((p) => p.publishYear))\n                  ).map((year) => (\n                    <label key={year} className=\"filter-option\">\n                      <input\n                        type=\"checkbox\"\n                        checked={selectedFilters.publishYears.includes(year)}\n                        onChange={(e) => {\n                          const newYears = e.target.checked\n                            ? [...selectedFilters.publishYears, year]\n                            : selectedFilters.publishYears.filter(\n                                (y) => y !== year\n                              );\n                          setSelectedFilters((prev) => ({\n                            ...prev,\n                            publishYears: newYears,\n                          }));\n                        }}\n                      />\n                      <span>{year}</span>\n                    </label>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            {/* Price Range Section */}\n            <div className=\"filter-section\">\n              <div\n                className=\"filter-header\"\n                onClick={() => toggleSection(\"priceRange\")}\n              >\n                <h3>Giá cả</h3>\n                <RiArrowDropDownLine\n                  className={openSections.priceRange ? \"rotated\" : \"\"}\n                />\n              </div>\n              {openSections.priceRange && (\n                <div className=\"price-range-slider\">\n                  <div className=\"price-range-inputs\">\n                    <input\n                      type=\"range\"\n                      min={priceRange.min}\n                      max={priceRange.max}\n                      value={selectedFilters.priceRange[0]}\n                      onChange={(e) => {\n                        const minValue = parseInt(e.target.value);\n                        setSelectedFilters((prev) => ({\n                          ...prev,\n                          priceRange: [\n                            Math.min(minValue, prev.priceRange[1]),\n                            prev.priceRange[1],\n                          ],\n                        }));\n                      }}\n                    />\n                    <input\n                      type=\"range\"\n                      min={priceRange.min}\n                      max={priceRange.max}\n                      value={selectedFilters.priceRange[1]}\n                      onChange={(e) => {\n                        const maxValue = parseInt(e.target.value);\n                        setSelectedFilters((prev) => ({\n                          ...prev,\n                          priceRange: [\n                            prev.priceRange[0],\n                            Math.max(maxValue, prev.priceRange[0]),\n                          ],\n                        }));\n                      }}\n                    />\n                  </div>\n                  <div className=\"price-range-values\">\n                    <span>{formatPrice(selectedFilters.priceRange[0])}</span>\n                    <span>{formatPrice(selectedFilters.priceRange[1])}</span>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          <button\n            className=\"apply-filters-button-collaborate\"\n            onClick={applyFilters}\n            disabled={previewCount === 0}\n          >\n            Kết quả ({previewCount})\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CollaborateDetail;\n"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1751253945148,
      "end": 1751253945148,
      "order": "normal-normal"
    },
    {
      "name": "vite:define",
      "start": 1751253945148,
      "end": 1751253945148,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-html",
      "start": 1751253945148,
      "end": 1751253945148,
      "order": "normal-normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1751253945148,
      "end": 1751253945148,
      "order": "normal-normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1751253945148,
      "end": 1751253945148,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1751253945148,
      "end": 1751253945149,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1751253945149,
      "end": 1751253945149,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1751253945149,
      "end": 1751253945149,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1751253945149,
      "end": 1751253945149,
      "order": "normal"
    }
  ]
}
