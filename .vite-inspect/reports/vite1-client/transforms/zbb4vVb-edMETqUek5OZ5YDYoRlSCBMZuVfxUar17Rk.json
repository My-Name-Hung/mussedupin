{
  "resolvedId": "C:/Users/.Freelancer/ONLINE/node_modules/crypto-js/lib-typedarrays.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Check if typed arrays are supported\n\t    if (typeof ArrayBuffer != 'function') {\n\t        return;\n\t    }\n\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\n\t    // Reference original init\n\t    var superInit = WordArray.init;\n\n\t    // Augment WordArray.init to handle typed arrays\n\t    var subInit = WordArray.init = function (typedArray) {\n\t        // Convert buffers to uint8\n\t        if (typedArray instanceof ArrayBuffer) {\n\t            typedArray = new Uint8Array(typedArray);\n\t        }\n\n\t        // Convert other array views to uint8\n\t        if (\n\t            typedArray instanceof Int8Array ||\n\t            (typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||\n\t            typedArray instanceof Int16Array ||\n\t            typedArray instanceof Uint16Array ||\n\t            typedArray instanceof Int32Array ||\n\t            typedArray instanceof Uint32Array ||\n\t            typedArray instanceof Float32Array ||\n\t            typedArray instanceof Float64Array\n\t        ) {\n\t            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n\t        }\n\n\t        // Handle Uint8Array\n\t        if (typedArray instanceof Uint8Array) {\n\t            // Shortcut\n\t            var typedArrayByteLength = typedArray.byteLength;\n\n\t            // Extract bytes\n\t            var words = [];\n\t            for (var i = 0; i < typedArrayByteLength; i++) {\n\t                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n\t            }\n\n\t            // Initialize this word array\n\t            superInit.call(this, words, typedArrayByteLength);\n\t        } else {\n\t            // Else call normal init\n\t            superInit.apply(this, arguments);\n\t        }\n\t    };\n\n\t    subInit.prototype = WordArray;\n\t}());\n\n\n\treturn CryptoJS.lib.WordArray;\n\n}));",
      "start": 1750746806279,
      "end": 1750746806505,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1750746806505,
      "end": 1750746806505,
      "order": "pre"
    },
    {
      "name": "vite:esbuild",
      "start": 1750746806505,
      "end": 1750746806505,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1750746806505,
      "end": 1750746806505,
      "order": "normal-normal"
    },
    {
      "name": "vite:define",
      "start": 1750746806505,
      "end": 1750746806505,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750746806505,
      "end": 1750746806505,
      "order": "normal-normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1750746806505,
      "end": 1750746806505,
      "order": "normal-normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1750746806505,
      "end": 1750746806505,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750746807791,
      "end": 1750746807791,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750746807791,
      "end": 1750746807791,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750746807791,
      "end": 1750746807791,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750746807791,
      "end": 1750746807791,
      "order": "normal"
    }
  ]
}
