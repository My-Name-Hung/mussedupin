{
  "resolvedId": "C:/Users/.Freelancer/ONLINE/src/pages/CheckoutPage/CheckoutPage.jsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import CryptoJS from \"crypto-js\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaArrowLeft } from \"react-icons/fa\";\nimport { useNavigate } from \"react-router-dom\";\nimport AddressModal from \"../../components/AddressModal/AddressModal\";\nimport LoginModal from \"../../components/Auth/LoginModal\";\nimport LoadingSpinner from \"../../components/LoadingSpinner/LoadingSpinner\";\nimport OrderSteps from \"../../components/OrderSteps/OrderSteps\";\nimport SuccessModal from \"../../components/SuccessModal/SuccessModal\";\nimport \"./CheckoutPage.css\";\n\nconst CheckoutPage = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [showLoginModal, setShowLoginModal] = useState(false);\n  const [currentStep, setCurrentStep] = useState(1);\n  const [userInfo, setUserInfo] = useState(null);\n  const [showAddressModal, setShowAddressModal] = useState(false);\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\n  const [cartItems, setCartItems] = useState([]);\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n  const [orderCode, setOrderCode] = useState(\"\");\n  const [qrCode, setQrCode] = useState(\"\");\n  const [discountInfo, setDiscountInfo] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      setShowLoginModal(true);\n    } else {\n      setIsLoggedIn(true);\n      fetchUserInfo();\n    }\n    loadCartItems();\n    // Load discount info\n    const savedDiscount = localStorage.getItem(\"cartDiscount\");\n    if (savedDiscount) {\n      setDiscountInfo(JSON.parse(savedDiscount));\n    }\n  }, []);\n\n  const loadCartItems = () => {\n    const items = JSON.parse(localStorage.getItem(\"cart\")) || [];\n    setCartItems(items);\n  };\n\n  const fetchUserInfo = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(\n        \"https://mussedupin.onrender.com/api/user/info\",\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      const data = await response.json();\n      if (data.success) {\n        setUserInfo(data.user);\n      }\n    } catch (error) {\n      console.error(\"Error fetching user info:\", error);\n    }\n  };\n\n  const handleLoginSuccess = () => {\n    setShowLoginModal(false);\n    setIsLoggedIn(true);\n    fetchUserInfo();\n  };\n\n  const handleAddressChange = () => {\n    setShowAddressModal(true);\n  };\n\n  const handleAddressUpdate = (newAddress) => {\n    setUserInfo({ ...userInfo, address: newAddress });\n  };\n\n  const handlePaymentMethodSelect = (method) => {\n    setPaymentMethod(method);\n  };\n\n  const calculateSubtotal = () => {\n    return cartItems.reduce(\n      (total, item) => total + item.price * item.quantity,\n      0\n    );\n  };\n\n  const calculateTotal = () => {\n    return discountInfo ? discountInfo.total : calculateSubtotal();\n  };\n\n  const generateQRCode = async () => {\n    const totalAmount = calculateTotal();\n    const qrUrl = `https://api.vietqr.io/image/970418-3144068052-1kOIAUr.jpg?accountName=NGUYEN%20THANH%20HUNG&amount=${totalAmount}`;\n    setQrCode(qrUrl);\n  };\n\n  // Add VNPAY integration functions\n  const generateVNPayURL = async (amount) => {\n    const tmnCode = \"2Y102M9Q\";\n    const secretKey = \"V78RAFZJ7WFQO8P8DDJQZ4TA1V44QK1S\";\n    const returnUrl = \"http://localhost:5173/vnpay-return\";\n\n    const now = new Date();\n    const createDate = [\n      now.getFullYear(),\n      String(now.getMonth() + 1).padStart(2, \"0\"),\n      String(now.getDate()).padStart(2, \"0\"),\n      String(now.getHours()).padStart(2, \"0\"),\n      String(now.getMinutes()).padStart(2, \"0\"),\n      String(now.getSeconds()).padStart(2, \"0\"),\n    ].join(\"\");\n\n    // Create order first to get orderId\n    try {\n      const orderResponse = await fetch(\n        \"https://mussedupin.onrender.com/api/orders\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n          body: JSON.stringify({\n            userId: userInfo.id,\n            items: cartItems,\n            totalAmount: amount,\n            shippingAddress: userInfo.address,\n            paymentMethod: \"vnpay\",\n            discountInfo: discountInfo,\n            status: \"Pending\",\n          }),\n        }\n      );\n\n      const orderData = await orderResponse.json();\n      if (!orderData.success) {\n        throw new Error(\"Failed to create order\");\n      }\n\n      const orderId = orderData.orderCode;\n\n      const vnpParams = {\n        vnp_Version: \"2.1.0\",\n        vnp_Command: \"pay\",\n        vnp_TmnCode: tmnCode,\n        vnp_Locale: \"vn\",\n        vnp_CurrCode: \"VND\",\n        vnp_TxnRef: orderId,\n        vnp_OrderInfo: `Thanh toan don hang ${orderId}`,\n        vnp_OrderType: \"other\",\n        vnp_Amount: String(Math.round(amount * 100)),\n        vnp_ReturnUrl: returnUrl,\n        vnp_IpAddr: \"127.0.0.1\",\n        vnp_CreateDate: createDate,\n        vnp_BankCode: \"\",\n      };\n\n      // Sắp xếp các tham số theo thứ tự a-z\n      const sortedParams = Object.keys(vnpParams)\n        .sort()\n        .reduce((acc, key) => {\n          acc[key] = vnpParams[key];\n          return acc;\n        }, {});\n\n      // Tạo chuỗi query từ các tham số đã sắp xếp\n      const signData = Object.entries(sortedParams)\n        .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)\n        .join(\"&\");\n\n      // Tạo chữ ký\n      const hmac = CryptoJS.HmacSHA512(signData, secretKey);\n      const secureHash = hmac.toString(CryptoJS.enc.Hex).toUpperCase();\n\n      // Thêm chữ ký vào URL\n      const queryUrl = `${signData}&vnp_SecureHash=${secureHash}`;\n\n      return `https://sandbox.vnpayment.vn/paymentv2/vpcpay.html?${queryUrl}`;\n    } catch (error) {\n      console.error(\"Error creating order for VNPAY:\", error);\n      throw error;\n    }\n  };\n\n  const handleNextStep = async () => {\n    if (currentStep === 1) {\n      if (!paymentMethod) {\n        alert(\"Vui lòng chọn phương thức thanh toán\");\n        return;\n      }\n      setIsLoading(true);\n\n      try {\n        if (paymentMethod === \"vnpay\") {\n          const totalAmount = calculateTotal();\n          const vnpayUrl = await generateVNPayURL(totalAmount);\n          // Clear cart before redirecting\n          localStorage.removeItem(\"cart\");\n          localStorage.removeItem(\"cartDiscount\");\n          window.location.href = vnpayUrl;\n          return;\n        }\n\n        if (paymentMethod === \"bank\") {\n          await generateQRCode();\n        }\n\n        setCurrentStep(2);\n      } catch (error) {\n        console.error(\"Error in payment process:\", error);\n        alert(\"Có lỗi xảy ra trong quá trình thanh toán. Vui lòng thử lại.\");\n      } finally {\n        setIsLoading(false);\n      }\n    } else if (currentStep === 2) {\n      setIsLoading(true);\n      await createOrder();\n      setIsLoading(false);\n    }\n  };\n\n  const createOrder = async () => {\n    try {\n      const response = await fetch(\n        \"https://mussedupin.onrender.com/api/orders\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n          body: JSON.stringify({\n            userId: userInfo.id,\n            items: cartItems,\n            totalAmount: calculateTotal(),\n            shippingAddress: userInfo.address,\n            paymentMethod,\n            discountInfo: discountInfo,\n          }),\n        }\n      );\n\n      const data = await response.json();\n      if (data.success) {\n        setOrderCode(data.orderCode);\n        setShowSuccessModal(true);\n        localStorage.removeItem(\"cart\");\n        localStorage.removeItem(\"cartDiscount\");\n      }\n    } catch (error) {\n      console.error(\"Error creating order:\", error);\n    }\n  };\n\n  const handleStepChange = (stepNumber) => {\n    setCurrentStep(stepNumber);\n  };\n\n  return (\n    <div className=\"checkout-page\">\n      {showLoginModal && (\n        <LoginModal\n          isOpen={showLoginModal}\n          onClose={() => navigate(\"/cart\")}\n          onLoginSuccess={handleLoginSuccess}\n        />\n      )}\n\n      {showAddressModal && (\n        <AddressModal\n          isOpen={showAddressModal}\n          onClose={() => setShowAddressModal(false)}\n          currentAddress={userInfo?.address}\n          onSave={handleAddressUpdate}\n        />\n      )}\n\n      {showSuccessModal && (\n        <SuccessModal\n          isOpen={showSuccessModal}\n          onClose={() => navigate(\"/cart\")}\n          message={`Mã đơn hàng ${orderCode} đã được đặt thành công, chúng tôi sẽ sớm liên hệ bạn!`}\n        />\n      )}\n\n      <OrderSteps currentStep={currentStep} onStepClick={handleStepChange} />\n\n      {isLoggedIn && userInfo && (\n        <div className=\"checkout-content\">\n          {currentStep > 1 && (\n            <button\n              className=\"back-step-btn\"\n              onClick={() => setCurrentStep(currentStep - 1)}\n              disabled={isLoading}\n            >\n              <FaArrowLeft /> Quay lại\n            </button>\n          )}\n\n          {currentStep === 1 && (\n            <>\n              <section className=\"shipping-address\">\n                <h2>Địa chỉ giao hàng</h2>\n                <div className=\"user-info\">\n                  <p>\n                    <strong>Họ tên:</strong> {userInfo.fullName}\n                  </p>\n                  <p>\n                    <strong>Số điện thoại:</strong> {userInfo.phone}\n                  </p>\n                  <p>\n                    <strong>Email:</strong> {userInfo.email}\n                  </p>\n                  <p>\n                    <strong>Địa chỉ:</strong> {userInfo.address?.street}\n                  </p>\n                  <p>\n                    <strong>Thành phố:</strong> {userInfo.address?.city}\n                  </p>\n                  <p>\n                    <strong>Tỉnh/Thành phố:</strong> {userInfo.address?.state}\n                  </p>\n                </div>\n                <button\n                  className=\"change-address-btn\"\n                  onClick={handleAddressChange}\n                >\n                  Thay đổi địa chỉ giao hàng\n                </button>\n              </section>\n\n              <section className=\"cart-items-checkout\">\n                <h2>Sản phẩm đã chọn</h2>\n                {cartItems.map((item) => (\n                  <div key={item.id} className=\"cart-item-checkout\">\n                    <img src={item.image} alt={item.name} />\n                    <div className=\"item-details-checkout\">\n                      <h3>{item.name}</h3>\n                      <p>Số lượng: {item.quantity}</p>\n                      <p className=\"price\">\n                        {(item.price * item.quantity).toLocaleString()}đ\n                      </p>\n                    </div>\n                  </div>\n                ))}\n\n                <div className=\"checkout-summary\">\n                  <div className=\"summary-row\">\n                    <span>Tạm tính:</span>\n                    <span>{calculateSubtotal().toLocaleString()}đ</span>\n                  </div>\n\n                  {discountInfo && discountInfo.applied && (\n                    <div className=\"summary-row discount\">\n                      <span>Giảm giá ({discountInfo.rate * 100}%):</span>\n                      <span>\n                        -\n                        {(\n                          calculateSubtotal() * discountInfo.rate\n                        ).toLocaleString()}\n                        đ\n                      </span>\n                    </div>\n                  )}\n\n                  <div className=\"summary-row total\">\n                    <span>Tổng cộng:</span>\n                    <span>{calculateTotal().toLocaleString()}đ</span>\n                  </div>\n                </div>\n              </section>\n\n              <section className=\"payment-methods\">\n                <h2>Phương thức thanh toán</h2>\n                {/* <div\n                  className={`payment-option ${\n                    paymentMethod === \"vnpay\" ? \"selected\" : \"\"\n                  }`}\n                  onClick={() => handlePaymentMethodSelect(\"vnpay\")}\n                >\n                  <input\n                    type=\"radio\"\n                    checked={paymentMethod === \"vnpay\"}\n                    onChange={() => {}}\n                  />\n                  <span>Thanh toán qua VNPAY</span>\n                </div> */}\n                <div\n                  className={`payment-option ${\n                    paymentMethod === \"bank\" ? \"selected\" : \"\"\n                  }`}\n                  onClick={() => handlePaymentMethodSelect(\"bank\")}\n                >\n                  <input\n                    type=\"radio\"\n                    checked={paymentMethod === \"bank\"}\n                    onChange={() => {}}\n                  />\n                  <span>Thanh toán qua ngân hàng</span>\n                </div>\n                <div\n                  className={`payment-option ${\n                    paymentMethod === \"cash\" ? \"selected\" : \"\"\n                  }`}\n                  onClick={() => handlePaymentMethodSelect(\"cash\")}\n                >\n                  <input\n                    type=\"radio\"\n                    checked={paymentMethod === \"cash\"}\n                    onChange={() => {}}\n                  />\n                  <span>Thanh toán tiền mặt</span>\n                </div>\n              </section>\n            </>\n          )}\n\n          {currentStep === 2 && (\n            <section className=\"order-confirmation\">\n              <h2>Xác nhận đơn hàng</h2>\n\n              {paymentMethod === \"bank\" && (\n                <div className=\"bank-payment\">\n                  <h3>Quét mã QR để thanh toán</h3>\n                  {qrCode && (\n                    <img src={qrCode} alt=\"QR Code\" className=\"qr-code\" />\n                  )}\n                  {/* <p>Số tiền: {calculateTotal().toLocaleString()}đ</p> */}\n                </div>\n              )}\n\n              <div className=\"order-summary\">\n                <h3>Thông tin đơn hàng</h3>\n                <div className=\"summary-details\">\n                  <p>\n                    <strong>Địa chỉ giao hàng:</strong>\n                    {userInfo.address?.street}\n                  </p>\n                  <p>\n                    <strong>Thành phố:</strong>\n                    {userInfo.address?.city}\n                  </p>\n                  <p>\n                    <strong>Tỉnh/Thành phố:</strong>\n                    {userInfo.address?.state}\n                  </p>\n\n                  <p>\n                    <strong>Phương thức thanh toán:</strong>\n                    {paymentMethod === \"bank\"\n                      ? \"Chuyển khoản ngân hàng\"\n                      : paymentMethod === \"vnpay\"\n                      ? \"Thanh toán qua VNPAY\"\n                      : \"Tiền mặt\"}\n                  </p>\n\n                  <p>\n                    <strong>Tạm tính:</strong>\n                    {calculateSubtotal().toLocaleString()}đ\n                  </p>\n\n                  {discountInfo && discountInfo.applied && (\n                    <p>\n                      <strong>Giảm giá ({discountInfo.rate * 100}%):</strong>-\n                      {(\n                        calculateSubtotal() * discountInfo.rate\n                      ).toLocaleString()}\n                      đ\n                    </p>\n                  )}\n\n                  <p className=\"total-price\">\n                    <strong>Tổng tiền:</strong>\n                    {calculateTotal().toLocaleString()}đ\n                  </p>\n                </div>\n              </div>\n            </section>\n          )}\n\n          <button\n            className=\"next-step-btn\"\n            onClick={handleNextStep}\n            disabled={isLoading}\n            style={{\n              color: paymentMethod === \"bank\" ? \"yellowgreen\" : \"white\",\n            }}\n          >\n            {isLoading ? (\n              <LoadingSpinner\n                color={paymentMethod === \"bank\" ? \"yellowgreen\" : \"white\"}\n              />\n            ) : currentStep === 1 ? (\n              \"Bước tiếp theo\"\n            ) : paymentMethod === \"bank\" ? (\n              \"Đã thanh toán\"\n            ) : paymentMethod === \"vnpay\" ? (\n              \"Đã thanh toán qua VNPAY\"\n            ) : (\n              \"Hoàn tất\"\n            )}\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CheckoutPage;\n",
      "start": 1751253944682,
      "end": 1751253945008,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1751253945008,
      "end": 1751253945008,
      "order": "pre"
    },
    {
      "name": "vite:esbuild",
      "result": "import { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nimport CryptoJS from \"crypto-js\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaArrowLeft } from \"react-icons/fa\";\nimport { useNavigate } from \"react-router-dom\";\nimport AddressModal from \"../../components/AddressModal/AddressModal\";\nimport LoginModal from \"../../components/Auth/LoginModal\";\nimport LoadingSpinner from \"../../components/LoadingSpinner/LoadingSpinner\";\nimport OrderSteps from \"../../components/OrderSteps/OrderSteps\";\nimport SuccessModal from \"../../components/SuccessModal/SuccessModal\";\nimport \"./CheckoutPage.css\";\nconst CheckoutPage = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [showLoginModal, setShowLoginModal] = useState(false);\n  const [currentStep, setCurrentStep] = useState(1);\n  const [userInfo, setUserInfo] = useState(null);\n  const [showAddressModal, setShowAddressModal] = useState(false);\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\n  const [cartItems, setCartItems] = useState([]);\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n  const [orderCode, setOrderCode] = useState(\"\");\n  const [qrCode, setQrCode] = useState(\"\");\n  const [discountInfo, setDiscountInfo] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      setShowLoginModal(true);\n    } else {\n      setIsLoggedIn(true);\n      fetchUserInfo();\n    }\n    loadCartItems();\n    const savedDiscount = localStorage.getItem(\"cartDiscount\");\n    if (savedDiscount) {\n      setDiscountInfo(JSON.parse(savedDiscount));\n    }\n  }, []);\n  const loadCartItems = () => {\n    const items = JSON.parse(localStorage.getItem(\"cart\")) || [];\n    setCartItems(items);\n  };\n  const fetchUserInfo = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(\n        \"https://mussedupin.onrender.com/api/user/info\",\n        {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }\n      );\n      const data = await response.json();\n      if (data.success) {\n        setUserInfo(data.user);\n      }\n    } catch (error) {\n      console.error(\"Error fetching user info:\", error);\n    }\n  };\n  const handleLoginSuccess = () => {\n    setShowLoginModal(false);\n    setIsLoggedIn(true);\n    fetchUserInfo();\n  };\n  const handleAddressChange = () => {\n    setShowAddressModal(true);\n  };\n  const handleAddressUpdate = (newAddress) => {\n    setUserInfo({ ...userInfo, address: newAddress });\n  };\n  const handlePaymentMethodSelect = (method) => {\n    setPaymentMethod(method);\n  };\n  const calculateSubtotal = () => {\n    return cartItems.reduce(\n      (total, item) => total + item.price * item.quantity,\n      0\n    );\n  };\n  const calculateTotal = () => {\n    return discountInfo ? discountInfo.total : calculateSubtotal();\n  };\n  const generateQRCode = async () => {\n    const totalAmount = calculateTotal();\n    const qrUrl = `https://api.vietqr.io/image/970418-3144068052-1kOIAUr.jpg?accountName=NGUYEN%20THANH%20HUNG&amount=${totalAmount}`;\n    setQrCode(qrUrl);\n  };\n  const generateVNPayURL = async (amount) => {\n    const tmnCode = \"2Y102M9Q\";\n    const secretKey = \"V78RAFZJ7WFQO8P8DDJQZ4TA1V44QK1S\";\n    const returnUrl = \"http://localhost:5173/vnpay-return\";\n    const now = /* @__PURE__ */ new Date();\n    const createDate = [\n      now.getFullYear(),\n      String(now.getMonth() + 1).padStart(2, \"0\"),\n      String(now.getDate()).padStart(2, \"0\"),\n      String(now.getHours()).padStart(2, \"0\"),\n      String(now.getMinutes()).padStart(2, \"0\"),\n      String(now.getSeconds()).padStart(2, \"0\")\n    ].join(\"\");\n    try {\n      const orderResponse = await fetch(\n        \"https://mussedupin.onrender.com/api/orders\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          },\n          body: JSON.stringify({\n            userId: userInfo.id,\n            items: cartItems,\n            totalAmount: amount,\n            shippingAddress: userInfo.address,\n            paymentMethod: \"vnpay\",\n            discountInfo,\n            status: \"Pending\"\n          })\n        }\n      );\n      const orderData = await orderResponse.json();\n      if (!orderData.success) {\n        throw new Error(\"Failed to create order\");\n      }\n      const orderId = orderData.orderCode;\n      const vnpParams = {\n        vnp_Version: \"2.1.0\",\n        vnp_Command: \"pay\",\n        vnp_TmnCode: tmnCode,\n        vnp_Locale: \"vn\",\n        vnp_CurrCode: \"VND\",\n        vnp_TxnRef: orderId,\n        vnp_OrderInfo: `Thanh toan don hang ${orderId}`,\n        vnp_OrderType: \"other\",\n        vnp_Amount: String(Math.round(amount * 100)),\n        vnp_ReturnUrl: returnUrl,\n        vnp_IpAddr: \"127.0.0.1\",\n        vnp_CreateDate: createDate,\n        vnp_BankCode: \"\"\n      };\n      const sortedParams = Object.keys(vnpParams).sort().reduce((acc, key) => {\n        acc[key] = vnpParams[key];\n        return acc;\n      }, {});\n      const signData = Object.entries(sortedParams).map(([key, value]) => `${key}=${encodeURIComponent(value)}`).join(\"&\");\n      const hmac = CryptoJS.HmacSHA512(signData, secretKey);\n      const secureHash = hmac.toString(CryptoJS.enc.Hex).toUpperCase();\n      const queryUrl = `${signData}&vnp_SecureHash=${secureHash}`;\n      return `https://sandbox.vnpayment.vn/paymentv2/vpcpay.html?${queryUrl}`;\n    } catch (error) {\n      console.error(\"Error creating order for VNPAY:\", error);\n      throw error;\n    }\n  };\n  const handleNextStep = async () => {\n    if (currentStep === 1) {\n      if (!paymentMethod) {\n        alert(\"Vui lòng chọn phương thức thanh toán\");\n        return;\n      }\n      setIsLoading(true);\n      try {\n        if (paymentMethod === \"vnpay\") {\n          const totalAmount = calculateTotal();\n          const vnpayUrl = await generateVNPayURL(totalAmount);\n          localStorage.removeItem(\"cart\");\n          localStorage.removeItem(\"cartDiscount\");\n          window.location.href = vnpayUrl;\n          return;\n        }\n        if (paymentMethod === \"bank\") {\n          await generateQRCode();\n        }\n        setCurrentStep(2);\n      } catch (error) {\n        console.error(\"Error in payment process:\", error);\n        alert(\"Có lỗi xảy ra trong quá trình thanh toán. Vui lòng thử lại.\");\n      } finally {\n        setIsLoading(false);\n      }\n    } else if (currentStep === 2) {\n      setIsLoading(true);\n      await createOrder();\n      setIsLoading(false);\n    }\n  };\n  const createOrder = async () => {\n    try {\n      const response = await fetch(\n        \"https://mussedupin.onrender.com/api/orders\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          },\n          body: JSON.stringify({\n            userId: userInfo.id,\n            items: cartItems,\n            totalAmount: calculateTotal(),\n            shippingAddress: userInfo.address,\n            paymentMethod,\n            discountInfo\n          })\n        }\n      );\n      const data = await response.json();\n      if (data.success) {\n        setOrderCode(data.orderCode);\n        setShowSuccessModal(true);\n        localStorage.removeItem(\"cart\");\n        localStorage.removeItem(\"cartDiscount\");\n      }\n    } catch (error) {\n      console.error(\"Error creating order:\", error);\n    }\n  };\n  const handleStepChange = (stepNumber) => {\n    setCurrentStep(stepNumber);\n  };\n  return /* @__PURE__ */ jsxs(\"div\", { className: \"checkout-page\", children: [\n    showLoginModal && /* @__PURE__ */ jsx(\n      LoginModal,\n      {\n        isOpen: showLoginModal,\n        onClose: () => navigate(\"/cart\"),\n        onLoginSuccess: handleLoginSuccess\n      }\n    ),\n    showAddressModal && /* @__PURE__ */ jsx(\n      AddressModal,\n      {\n        isOpen: showAddressModal,\n        onClose: () => setShowAddressModal(false),\n        currentAddress: userInfo?.address,\n        onSave: handleAddressUpdate\n      }\n    ),\n    showSuccessModal && /* @__PURE__ */ jsx(\n      SuccessModal,\n      {\n        isOpen: showSuccessModal,\n        onClose: () => navigate(\"/cart\"),\n        message: `Mã đơn hàng ${orderCode} đã được đặt thành công, chúng tôi sẽ sớm liên hệ bạn!`\n      }\n    ),\n    /* @__PURE__ */ jsx(OrderSteps, { currentStep, onStepClick: handleStepChange }),\n    isLoggedIn && userInfo && /* @__PURE__ */ jsxs(\"div\", { className: \"checkout-content\", children: [\n      currentStep > 1 && /* @__PURE__ */ jsxs(\n        \"button\",\n        {\n          className: \"back-step-btn\",\n          onClick: () => setCurrentStep(currentStep - 1),\n          disabled: isLoading,\n          children: [\n            /* @__PURE__ */ jsx(FaArrowLeft, {}),\n            \" Quay lại\"\n          ]\n        }\n      ),\n      currentStep === 1 && /* @__PURE__ */ jsxs(Fragment, { children: [\n        /* @__PURE__ */ jsxs(\"section\", { className: \"shipping-address\", children: [\n          /* @__PURE__ */ jsx(\"h2\", { children: \"Địa chỉ giao hàng\" }),\n          /* @__PURE__ */ jsxs(\"div\", { className: \"user-info\", children: [\n            /* @__PURE__ */ jsxs(\"p\", { children: [\n              /* @__PURE__ */ jsx(\"strong\", { children: \"Họ tên:\" }),\n              \" \",\n              userInfo.fullName\n            ] }),\n            /* @__PURE__ */ jsxs(\"p\", { children: [\n              /* @__PURE__ */ jsx(\"strong\", { children: \"Số điện thoại:\" }),\n              \" \",\n              userInfo.phone\n            ] }),\n            /* @__PURE__ */ jsxs(\"p\", { children: [\n              /* @__PURE__ */ jsx(\"strong\", { children: \"Email:\" }),\n              \" \",\n              userInfo.email\n            ] }),\n            /* @__PURE__ */ jsxs(\"p\", { children: [\n              /* @__PURE__ */ jsx(\"strong\", { children: \"Địa chỉ:\" }),\n              \" \",\n              userInfo.address?.street\n            ] }),\n            /* @__PURE__ */ jsxs(\"p\", { children: [\n              /* @__PURE__ */ jsx(\"strong\", { children: \"Thành phố:\" }),\n              \" \",\n              userInfo.address?.city\n            ] }),\n            /* @__PURE__ */ jsxs(\"p\", { children: [\n              /* @__PURE__ */ jsx(\"strong\", { children: \"Tỉnh/Thành phố:\" }),\n              \" \",\n              userInfo.address?.state\n            ] })\n          ] }),\n          /* @__PURE__ */ jsx(\n            \"button\",\n            {\n              className: \"change-address-btn\",\n              onClick: handleAddressChange,\n              children: \"Thay đổi địa chỉ giao hàng\"\n            }\n          )\n        ] }),\n        /* @__PURE__ */ jsxs(\"section\", { className: \"cart-items-checkout\", children: [\n          /* @__PURE__ */ jsx(\"h2\", { children: \"Sản phẩm đã chọn\" }),\n          cartItems.map((item) => /* @__PURE__ */ jsxs(\"div\", { className: \"cart-item-checkout\", children: [\n            /* @__PURE__ */ jsx(\"img\", { src: item.image, alt: item.name }),\n            /* @__PURE__ */ jsxs(\"div\", { className: \"item-details-checkout\", children: [\n              /* @__PURE__ */ jsx(\"h3\", { children: item.name }),\n              /* @__PURE__ */ jsxs(\"p\", { children: [\n                \"Số lượng: \",\n                item.quantity\n              ] }),\n              /* @__PURE__ */ jsxs(\"p\", { className: \"price\", children: [\n                (item.price * item.quantity).toLocaleString(),\n                \"đ\"\n              ] })\n            ] })\n          ] }, item.id)),\n          /* @__PURE__ */ jsxs(\"div\", { className: \"checkout-summary\", children: [\n            /* @__PURE__ */ jsxs(\"div\", { className: \"summary-row\", children: [\n              /* @__PURE__ */ jsx(\"span\", { children: \"Tạm tính:\" }),\n              /* @__PURE__ */ jsxs(\"span\", { children: [\n                calculateSubtotal().toLocaleString(),\n                \"đ\"\n              ] })\n            ] }),\n            discountInfo && discountInfo.applied && /* @__PURE__ */ jsxs(\"div\", { className: \"summary-row discount\", children: [\n              /* @__PURE__ */ jsxs(\"span\", { children: [\n                \"Giảm giá (\",\n                discountInfo.rate * 100,\n                \"%):\"\n              ] }),\n              /* @__PURE__ */ jsxs(\"span\", { children: [\n                \"-\",\n                (calculateSubtotal() * discountInfo.rate).toLocaleString(),\n                \"đ\"\n              ] })\n            ] }),\n            /* @__PURE__ */ jsxs(\"div\", { className: \"summary-row total\", children: [\n              /* @__PURE__ */ jsx(\"span\", { children: \"Tổng cộng:\" }),\n              /* @__PURE__ */ jsxs(\"span\", { children: [\n                calculateTotal().toLocaleString(),\n                \"đ\"\n              ] })\n            ] })\n          ] })\n        ] }),\n        /* @__PURE__ */ jsxs(\"section\", { className: \"payment-methods\", children: [\n          /* @__PURE__ */ jsx(\"h2\", { children: \"Phương thức thanh toán\" }),\n          /* @__PURE__ */ jsxs(\n            \"div\",\n            {\n              className: `payment-option ${paymentMethod === \"bank\" ? \"selected\" : \"\"}`,\n              onClick: () => handlePaymentMethodSelect(\"bank\"),\n              children: [\n                /* @__PURE__ */ jsx(\n                  \"input\",\n                  {\n                    type: \"radio\",\n                    checked: paymentMethod === \"bank\",\n                    onChange: () => {\n                    }\n                  }\n                ),\n                /* @__PURE__ */ jsx(\"span\", { children: \"Thanh toán qua ngân hàng\" })\n              ]\n            }\n          ),\n          /* @__PURE__ */ jsxs(\n            \"div\",\n            {\n              className: `payment-option ${paymentMethod === \"cash\" ? \"selected\" : \"\"}`,\n              onClick: () => handlePaymentMethodSelect(\"cash\"),\n              children: [\n                /* @__PURE__ */ jsx(\n                  \"input\",\n                  {\n                    type: \"radio\",\n                    checked: paymentMethod === \"cash\",\n                    onChange: () => {\n                    }\n                  }\n                ),\n                /* @__PURE__ */ jsx(\"span\", { children: \"Thanh toán tiền mặt\" })\n              ]\n            }\n          )\n        ] })\n      ] }),\n      currentStep === 2 && /* @__PURE__ */ jsxs(\"section\", { className: \"order-confirmation\", children: [\n        /* @__PURE__ */ jsx(\"h2\", { children: \"Xác nhận đơn hàng\" }),\n        paymentMethod === \"bank\" && /* @__PURE__ */ jsxs(\"div\", { className: \"bank-payment\", children: [\n          /* @__PURE__ */ jsx(\"h3\", { children: \"Quét mã QR để thanh toán\" }),\n          qrCode && /* @__PURE__ */ jsx(\"img\", { src: qrCode, alt: \"QR Code\", className: \"qr-code\" })\n        ] }),\n        /* @__PURE__ */ jsxs(\"div\", { className: \"order-summary\", children: [\n          /* @__PURE__ */ jsx(\"h3\", { children: \"Thông tin đơn hàng\" }),\n          /* @__PURE__ */ jsxs(\"div\", { className: \"summary-details\", children: [\n            /* @__PURE__ */ jsxs(\"p\", { children: [\n              /* @__PURE__ */ jsx(\"strong\", { children: \"Địa chỉ giao hàng:\" }),\n              userInfo.address?.street\n            ] }),\n            /* @__PURE__ */ jsxs(\"p\", { children: [\n              /* @__PURE__ */ jsx(\"strong\", { children: \"Thành phố:\" }),\n              userInfo.address?.city\n            ] }),\n            /* @__PURE__ */ jsxs(\"p\", { children: [\n              /* @__PURE__ */ jsx(\"strong\", { children: \"Tỉnh/Thành phố:\" }),\n              userInfo.address?.state\n            ] }),\n            /* @__PURE__ */ jsxs(\"p\", { children: [\n              /* @__PURE__ */ jsx(\"strong\", { children: \"Phương thức thanh toán:\" }),\n              paymentMethod === \"bank\" ? \"Chuyển khoản ngân hàng\" : paymentMethod === \"vnpay\" ? \"Thanh toán qua VNPAY\" : \"Tiền mặt\"\n            ] }),\n            /* @__PURE__ */ jsxs(\"p\", { children: [\n              /* @__PURE__ */ jsx(\"strong\", { children: \"Tạm tính:\" }),\n              calculateSubtotal().toLocaleString(),\n              \"đ\"\n            ] }),\n            discountInfo && discountInfo.applied && /* @__PURE__ */ jsxs(\"p\", { children: [\n              /* @__PURE__ */ jsxs(\"strong\", { children: [\n                \"Giảm giá (\",\n                discountInfo.rate * 100,\n                \"%):\"\n              ] }),\n              \"-\",\n              (calculateSubtotal() * discountInfo.rate).toLocaleString(),\n              \"đ\"\n            ] }),\n            /* @__PURE__ */ jsxs(\"p\", { className: \"total-price\", children: [\n              /* @__PURE__ */ jsx(\"strong\", { children: \"Tổng tiền:\" }),\n              calculateTotal().toLocaleString(),\n              \"đ\"\n            ] })\n          ] })\n        ] })\n      ] }),\n      /* @__PURE__ */ jsx(\n        \"button\",\n        {\n          className: \"next-step-btn\",\n          onClick: handleNextStep,\n          disabled: isLoading,\n          style: {\n            color: paymentMethod === \"bank\" ? \"yellowgreen\" : \"white\"\n          },\n          children: isLoading ? /* @__PURE__ */ jsx(\n            LoadingSpinner,\n            {\n              color: paymentMethod === \"bank\" ? \"yellowgreen\" : \"white\"\n            }\n          ) : currentStep === 1 ? \"Bước tiếp theo\" : paymentMethod === \"bank\" ? \"Đã thanh toán\" : paymentMethod === \"vnpay\" ? \"Đã thanh toán qua VNPAY\" : \"Hoàn tất\"\n        }\n      )\n    ] })\n  ] });\n};\nexport default CheckoutPage;\n",
      "start": 1751253945008,
      "end": 1751253945128,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "C:/Users/.Freelancer/ONLINE/src/pages/CheckoutPage/CheckoutPage.jsx"
        ],
        "sourcesContent": [
          "import CryptoJS from \"crypto-js\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaArrowLeft } from \"react-icons/fa\";\nimport { useNavigate } from \"react-router-dom\";\nimport AddressModal from \"../../components/AddressModal/AddressModal\";\nimport LoginModal from \"../../components/Auth/LoginModal\";\nimport LoadingSpinner from \"../../components/LoadingSpinner/LoadingSpinner\";\nimport OrderSteps from \"../../components/OrderSteps/OrderSteps\";\nimport SuccessModal from \"../../components/SuccessModal/SuccessModal\";\nimport \"./CheckoutPage.css\";\n\nconst CheckoutPage = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [showLoginModal, setShowLoginModal] = useState(false);\n  const [currentStep, setCurrentStep] = useState(1);\n  const [userInfo, setUserInfo] = useState(null);\n  const [showAddressModal, setShowAddressModal] = useState(false);\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\n  const [cartItems, setCartItems] = useState([]);\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n  const [orderCode, setOrderCode] = useState(\"\");\n  const [qrCode, setQrCode] = useState(\"\");\n  const [discountInfo, setDiscountInfo] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      setShowLoginModal(true);\n    } else {\n      setIsLoggedIn(true);\n      fetchUserInfo();\n    }\n    loadCartItems();\n    // Load discount info\n    const savedDiscount = localStorage.getItem(\"cartDiscount\");\n    if (savedDiscount) {\n      setDiscountInfo(JSON.parse(savedDiscount));\n    }\n  }, []);\n\n  const loadCartItems = () => {\n    const items = JSON.parse(localStorage.getItem(\"cart\")) || [];\n    setCartItems(items);\n  };\n\n  const fetchUserInfo = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(\n        \"https://mussedupin.onrender.com/api/user/info\",\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      const data = await response.json();\n      if (data.success) {\n        setUserInfo(data.user);\n      }\n    } catch (error) {\n      console.error(\"Error fetching user info:\", error);\n    }\n  };\n\n  const handleLoginSuccess = () => {\n    setShowLoginModal(false);\n    setIsLoggedIn(true);\n    fetchUserInfo();\n  };\n\n  const handleAddressChange = () => {\n    setShowAddressModal(true);\n  };\n\n  const handleAddressUpdate = (newAddress) => {\n    setUserInfo({ ...userInfo, address: newAddress });\n  };\n\n  const handlePaymentMethodSelect = (method) => {\n    setPaymentMethod(method);\n  };\n\n  const calculateSubtotal = () => {\n    return cartItems.reduce(\n      (total, item) => total + item.price * item.quantity,\n      0\n    );\n  };\n\n  const calculateTotal = () => {\n    return discountInfo ? discountInfo.total : calculateSubtotal();\n  };\n\n  const generateQRCode = async () => {\n    const totalAmount = calculateTotal();\n    const qrUrl = `https://api.vietqr.io/image/970418-3144068052-1kOIAUr.jpg?accountName=NGUYEN%20THANH%20HUNG&amount=${totalAmount}`;\n    setQrCode(qrUrl);\n  };\n\n  // Add VNPAY integration functions\n  const generateVNPayURL = async (amount) => {\n    const tmnCode = \"2Y102M9Q\";\n    const secretKey = \"V78RAFZJ7WFQO8P8DDJQZ4TA1V44QK1S\";\n    const returnUrl = \"http://localhost:5173/vnpay-return\";\n\n    const now = new Date();\n    const createDate = [\n      now.getFullYear(),\n      String(now.getMonth() + 1).padStart(2, \"0\"),\n      String(now.getDate()).padStart(2, \"0\"),\n      String(now.getHours()).padStart(2, \"0\"),\n      String(now.getMinutes()).padStart(2, \"0\"),\n      String(now.getSeconds()).padStart(2, \"0\"),\n    ].join(\"\");\n\n    // Create order first to get orderId\n    try {\n      const orderResponse = await fetch(\n        \"https://mussedupin.onrender.com/api/orders\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n          body: JSON.stringify({\n            userId: userInfo.id,\n            items: cartItems,\n            totalAmount: amount,\n            shippingAddress: userInfo.address,\n            paymentMethod: \"vnpay\",\n            discountInfo: discountInfo,\n            status: \"Pending\",\n          }),\n        }\n      );\n\n      const orderData = await orderResponse.json();\n      if (!orderData.success) {\n        throw new Error(\"Failed to create order\");\n      }\n\n      const orderId = orderData.orderCode;\n\n      const vnpParams = {\n        vnp_Version: \"2.1.0\",\n        vnp_Command: \"pay\",\n        vnp_TmnCode: tmnCode,\n        vnp_Locale: \"vn\",\n        vnp_CurrCode: \"VND\",\n        vnp_TxnRef: orderId,\n        vnp_OrderInfo: `Thanh toan don hang ${orderId}`,\n        vnp_OrderType: \"other\",\n        vnp_Amount: String(Math.round(amount * 100)),\n        vnp_ReturnUrl: returnUrl,\n        vnp_IpAddr: \"127.0.0.1\",\n        vnp_CreateDate: createDate,\n        vnp_BankCode: \"\",\n      };\n\n      // Sắp xếp các tham số theo thứ tự a-z\n      const sortedParams = Object.keys(vnpParams)\n        .sort()\n        .reduce((acc, key) => {\n          acc[key] = vnpParams[key];\n          return acc;\n        }, {});\n\n      // Tạo chuỗi query từ các tham số đã sắp xếp\n      const signData = Object.entries(sortedParams)\n        .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)\n        .join(\"&\");\n\n      // Tạo chữ ký\n      const hmac = CryptoJS.HmacSHA512(signData, secretKey);\n      const secureHash = hmac.toString(CryptoJS.enc.Hex).toUpperCase();\n\n      // Thêm chữ ký vào URL\n      const queryUrl = `${signData}&vnp_SecureHash=${secureHash}`;\n\n      return `https://sandbox.vnpayment.vn/paymentv2/vpcpay.html?${queryUrl}`;\n    } catch (error) {\n      console.error(\"Error creating order for VNPAY:\", error);\n      throw error;\n    }\n  };\n\n  const handleNextStep = async () => {\n    if (currentStep === 1) {\n      if (!paymentMethod) {\n        alert(\"Vui lòng chọn phương thức thanh toán\");\n        return;\n      }\n      setIsLoading(true);\n\n      try {\n        if (paymentMethod === \"vnpay\") {\n          const totalAmount = calculateTotal();\n          const vnpayUrl = await generateVNPayURL(totalAmount);\n          // Clear cart before redirecting\n          localStorage.removeItem(\"cart\");\n          localStorage.removeItem(\"cartDiscount\");\n          window.location.href = vnpayUrl;\n          return;\n        }\n\n        if (paymentMethod === \"bank\") {\n          await generateQRCode();\n        }\n\n        setCurrentStep(2);\n      } catch (error) {\n        console.error(\"Error in payment process:\", error);\n        alert(\"Có lỗi xảy ra trong quá trình thanh toán. Vui lòng thử lại.\");\n      } finally {\n        setIsLoading(false);\n      }\n    } else if (currentStep === 2) {\n      setIsLoading(true);\n      await createOrder();\n      setIsLoading(false);\n    }\n  };\n\n  const createOrder = async () => {\n    try {\n      const response = await fetch(\n        \"https://mussedupin.onrender.com/api/orders\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n          body: JSON.stringify({\n            userId: userInfo.id,\n            items: cartItems,\n            totalAmount: calculateTotal(),\n            shippingAddress: userInfo.address,\n            paymentMethod,\n            discountInfo: discountInfo,\n          }),\n        }\n      );\n\n      const data = await response.json();\n      if (data.success) {\n        setOrderCode(data.orderCode);\n        setShowSuccessModal(true);\n        localStorage.removeItem(\"cart\");\n        localStorage.removeItem(\"cartDiscount\");\n      }\n    } catch (error) {\n      console.error(\"Error creating order:\", error);\n    }\n  };\n\n  const handleStepChange = (stepNumber) => {\n    setCurrentStep(stepNumber);\n  };\n\n  return (\n    <div className=\"checkout-page\">\n      {showLoginModal && (\n        <LoginModal\n          isOpen={showLoginModal}\n          onClose={() => navigate(\"/cart\")}\n          onLoginSuccess={handleLoginSuccess}\n        />\n      )}\n\n      {showAddressModal && (\n        <AddressModal\n          isOpen={showAddressModal}\n          onClose={() => setShowAddressModal(false)}\n          currentAddress={userInfo?.address}\n          onSave={handleAddressUpdate}\n        />\n      )}\n\n      {showSuccessModal && (\n        <SuccessModal\n          isOpen={showSuccessModal}\n          onClose={() => navigate(\"/cart\")}\n          message={`Mã đơn hàng ${orderCode} đã được đặt thành công, chúng tôi sẽ sớm liên hệ bạn!`}\n        />\n      )}\n\n      <OrderSteps currentStep={currentStep} onStepClick={handleStepChange} />\n\n      {isLoggedIn && userInfo && (\n        <div className=\"checkout-content\">\n          {currentStep > 1 && (\n            <button\n              className=\"back-step-btn\"\n              onClick={() => setCurrentStep(currentStep - 1)}\n              disabled={isLoading}\n            >\n              <FaArrowLeft /> Quay lại\n            </button>\n          )}\n\n          {currentStep === 1 && (\n            <>\n              <section className=\"shipping-address\">\n                <h2>Địa chỉ giao hàng</h2>\n                <div className=\"user-info\">\n                  <p>\n                    <strong>Họ tên:</strong> {userInfo.fullName}\n                  </p>\n                  <p>\n                    <strong>Số điện thoại:</strong> {userInfo.phone}\n                  </p>\n                  <p>\n                    <strong>Email:</strong> {userInfo.email}\n                  </p>\n                  <p>\n                    <strong>Địa chỉ:</strong> {userInfo.address?.street}\n                  </p>\n                  <p>\n                    <strong>Thành phố:</strong> {userInfo.address?.city}\n                  </p>\n                  <p>\n                    <strong>Tỉnh/Thành phố:</strong> {userInfo.address?.state}\n                  </p>\n                </div>\n                <button\n                  className=\"change-address-btn\"\n                  onClick={handleAddressChange}\n                >\n                  Thay đổi địa chỉ giao hàng\n                </button>\n              </section>\n\n              <section className=\"cart-items-checkout\">\n                <h2>Sản phẩm đã chọn</h2>\n                {cartItems.map((item) => (\n                  <div key={item.id} className=\"cart-item-checkout\">\n                    <img src={item.image} alt={item.name} />\n                    <div className=\"item-details-checkout\">\n                      <h3>{item.name}</h3>\n                      <p>Số lượng: {item.quantity}</p>\n                      <p className=\"price\">\n                        {(item.price * item.quantity).toLocaleString()}đ\n                      </p>\n                    </div>\n                  </div>\n                ))}\n\n                <div className=\"checkout-summary\">\n                  <div className=\"summary-row\">\n                    <span>Tạm tính:</span>\n                    <span>{calculateSubtotal().toLocaleString()}đ</span>\n                  </div>\n\n                  {discountInfo && discountInfo.applied && (\n                    <div className=\"summary-row discount\">\n                      <span>Giảm giá ({discountInfo.rate * 100}%):</span>\n                      <span>\n                        -\n                        {(\n                          calculateSubtotal() * discountInfo.rate\n                        ).toLocaleString()}\n                        đ\n                      </span>\n                    </div>\n                  )}\n\n                  <div className=\"summary-row total\">\n                    <span>Tổng cộng:</span>\n                    <span>{calculateTotal().toLocaleString()}đ</span>\n                  </div>\n                </div>\n              </section>\n\n              <section className=\"payment-methods\">\n                <h2>Phương thức thanh toán</h2>\n                {/* <div\n                  className={`payment-option ${\n                    paymentMethod === \"vnpay\" ? \"selected\" : \"\"\n                  }`}\n                  onClick={() => handlePaymentMethodSelect(\"vnpay\")}\n                >\n                  <input\n                    type=\"radio\"\n                    checked={paymentMethod === \"vnpay\"}\n                    onChange={() => {}}\n                  />\n                  <span>Thanh toán qua VNPAY</span>\n                </div> */}\n                <div\n                  className={`payment-option ${\n                    paymentMethod === \"bank\" ? \"selected\" : \"\"\n                  }`}\n                  onClick={() => handlePaymentMethodSelect(\"bank\")}\n                >\n                  <input\n                    type=\"radio\"\n                    checked={paymentMethod === \"bank\"}\n                    onChange={() => {}}\n                  />\n                  <span>Thanh toán qua ngân hàng</span>\n                </div>\n                <div\n                  className={`payment-option ${\n                    paymentMethod === \"cash\" ? \"selected\" : \"\"\n                  }`}\n                  onClick={() => handlePaymentMethodSelect(\"cash\")}\n                >\n                  <input\n                    type=\"radio\"\n                    checked={paymentMethod === \"cash\"}\n                    onChange={() => {}}\n                  />\n                  <span>Thanh toán tiền mặt</span>\n                </div>\n              </section>\n            </>\n          )}\n\n          {currentStep === 2 && (\n            <section className=\"order-confirmation\">\n              <h2>Xác nhận đơn hàng</h2>\n\n              {paymentMethod === \"bank\" && (\n                <div className=\"bank-payment\">\n                  <h3>Quét mã QR để thanh toán</h3>\n                  {qrCode && (\n                    <img src={qrCode} alt=\"QR Code\" className=\"qr-code\" />\n                  )}\n                  {/* <p>Số tiền: {calculateTotal().toLocaleString()}đ</p> */}\n                </div>\n              )}\n\n              <div className=\"order-summary\">\n                <h3>Thông tin đơn hàng</h3>\n                <div className=\"summary-details\">\n                  <p>\n                    <strong>Địa chỉ giao hàng:</strong>\n                    {userInfo.address?.street}\n                  </p>\n                  <p>\n                    <strong>Thành phố:</strong>\n                    {userInfo.address?.city}\n                  </p>\n                  <p>\n                    <strong>Tỉnh/Thành phố:</strong>\n                    {userInfo.address?.state}\n                  </p>\n\n                  <p>\n                    <strong>Phương thức thanh toán:</strong>\n                    {paymentMethod === \"bank\"\n                      ? \"Chuyển khoản ngân hàng\"\n                      : paymentMethod === \"vnpay\"\n                      ? \"Thanh toán qua VNPAY\"\n                      : \"Tiền mặt\"}\n                  </p>\n\n                  <p>\n                    <strong>Tạm tính:</strong>\n                    {calculateSubtotal().toLocaleString()}đ\n                  </p>\n\n                  {discountInfo && discountInfo.applied && (\n                    <p>\n                      <strong>Giảm giá ({discountInfo.rate * 100}%):</strong>-\n                      {(\n                        calculateSubtotal() * discountInfo.rate\n                      ).toLocaleString()}\n                      đ\n                    </p>\n                  )}\n\n                  <p className=\"total-price\">\n                    <strong>Tổng tiền:</strong>\n                    {calculateTotal().toLocaleString()}đ\n                  </p>\n                </div>\n              </div>\n            </section>\n          )}\n\n          <button\n            className=\"next-step-btn\"\n            onClick={handleNextStep}\n            disabled={isLoading}\n            style={{\n              color: paymentMethod === \"bank\" ? \"yellowgreen\" : \"white\",\n            }}\n          >\n            {isLoading ? (\n              <LoadingSpinner\n                color={paymentMethod === \"bank\" ? \"yellowgreen\" : \"white\"}\n              />\n            ) : currentStep === 1 ? (\n              \"Bước tiếp theo\"\n            ) : paymentMethod === \"bank\" ? (\n              \"Đã thanh toán\"\n            ) : paymentMethod === \"vnpay\" ? (\n              \"Đã thanh toán qua VNPAY\"\n            ) : (\n              \"Hoàn tất\"\n            )}\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CheckoutPage;\n"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1751253945128,
      "end": 1751253945128,
      "order": "normal-normal"
    },
    {
      "name": "vite:define",
      "start": 1751253945128,
      "end": 1751253945128,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-html",
      "start": 1751253945128,
      "end": 1751253945128,
      "order": "normal-normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1751253945128,
      "end": 1751253945128,
      "order": "normal-normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1751253945128,
      "end": 1751253945128,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1751253945128,
      "end": 1751253945128,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1751253945128,
      "end": 1751253945128,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1751253945128,
      "end": 1751253945129,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1751253945129,
      "end": 1751253945129,
      "order": "normal"
    }
  ]
}
