{
  "resolvedId": "C:/Users/.Freelancer/ONLINE/src/pages/ProductDetails/ProductDetails.jsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import React, { useEffect, useState } from \"react\";\nimport { BsCart3 } from \"react-icons/bs\";\nimport { IoIosArrowBack } from \"react-icons/io\";\nimport { IoClose } from \"react-icons/io5\";\nimport { MdNavigateBefore, MdNavigateNext } from \"react-icons/md\";\nimport { RiArrowDropDownLine } from \"react-icons/ri\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport \"swiper/css\";\nimport \"swiper/css/navigation\";\nimport \"swiper/css/pagination\";\nimport { Navigation, Pagination } from \"swiper/modules\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport Notification from \"../../components/Notification/Notification\";\nimport {\n  getAnPhamImageUrl,\n  getDoTrangSucImageUrl,\n  getHoiThaoNgheThuatImageUrl,\n  getInTheoYeuCauImageUrl,\n  getKhuyenTaiImageUrl,\n  getSanPhamTuThongImageUrl,\n  getThoCamImageUrl,\n  getThoiTrangImageUrl,\n} from \"../../utils/cloudinary\";\nimport { sampleProducts } from \"../CategoryDetail/CategoryDetail\";\nimport { exhibitionsData } from \"../Exhibitions/Exhibitions\";\nimport \"./ProductDetails.css\";\n\n// Helper function to get image URL based on category\nconst getImageUrl = (category, filename) => {\n  switch (category) {\n    case \"khuyentai\":\n      return getKhuyenTaiImageUrl(filename);\n    case \"anpham\":\n      return getAnPhamImageUrl(filename);\n    case \"in-theo-yeu-cau\":\n      return getInTheoYeuCauImageUrl(filename);\n    case \"hoi-thao-nghe-thuat\":\n      return getHoiThaoNgheThuatImageUrl(filename);\n    case \"thoi-trang-va-phu-kien\":\n      return getThoiTrangImageUrl(filename);\n    case \"do-trang-suc\":\n      return getDoTrangSucImageUrl(filename);\n    case \"thocam\":\n      return getThoCamImageUrl(filename);\n    case \"sanphamtuthong\":\n      return getSanPhamTuThongImageUrl(filename);\n    default:\n      return \"\";\n  }\n};\n\nconst ProductDetails = () => {\n  const { productId } = useParams();\n  const navigate = useNavigate();\n  const [product, setProduct] = useState(null);\n  const [isSpecsOpen, setIsSpecsOpen] = useState(false);\n  const [relatedProducts, setRelatedProducts] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n  const [productSource, setProductSource] = useState(null);\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const [showImageModal, setShowImageModal] = useState(false);\n  const [showFullscreen, setShowFullscreen] = useState(false);\n  const [fullscreenImageIndex, setFullscreenImageIndex] = useState(0);\n\n  useEffect(() => {\n    let foundProduct = null;\n    let source = null;\n\n    // First, try to find the product in exhibitionsData\n    for (const exhibition of exhibitionsData) {\n      const exhibitionProduct = exhibition.products.find(\n        (p) => p.title === productId\n      );\n      if (exhibitionProduct) {\n        foundProduct = {\n          ...exhibitionProduct,\n          exhibitionTitle: exhibition.title,\n          exhibitionId: exhibition.id,\n          exhibitionDate: exhibition.date,\n          source: \"exhibition\",\n        };\n        source = {\n          type: \"exhibition\",\n          id: exhibition.id,\n          title: exhibition.title,\n          date: exhibition.date,\n        };\n        break;\n      }\n    }\n\n    // If not found in exhibitions, try sampleProducts\n    if (!foundProduct) {\n      // Search through all categories in sampleProducts\n      for (const category in sampleProducts) {\n        const categoryProducts = sampleProducts[category];\n        const catalogProduct = categoryProducts.find(\n          (p) => p.id === productId || p.title === productId\n        );\n        if (catalogProduct) {\n          foundProduct = {\n            ...catalogProduct,\n            source: \"catalog\",\n          };\n          source = {\n            type: \"catalog\",\n            category: category,\n          };\n          break;\n        }\n      }\n    }\n\n    setProduct(foundProduct);\n    setProductSource(source);\n\n    // Set related products based on source\n    if (foundProduct) {\n      let related = [];\n      if (source.type === \"exhibition\") {\n        // Get products from the same exhibition\n        related = exhibitionsData\n          .find((e) => e.id === source.id)\n          .products.filter((p) => p.title !== foundProduct.title)\n          .slice(0, 6);\n      } else {\n        // Get products from the same category\n        related = sampleProducts[source.category]\n          .filter((p) => p.id !== foundProduct.id)\n          .slice(0, 6);\n      }\n      setRelatedProducts(related);\n    }\n  }, [productId]);\n\n  const handlePrevImage = () => {\n    setCurrentImageIndex((prev) =>\n      prev === 0 ? product.images.length - 1 : prev - 1\n    );\n  };\n\n  const handleNextImage = () => {\n    setCurrentImageIndex((prev) =>\n      prev === product.images.length - 1 ? 0 : prev + 1\n    );\n  };\n\n  const handleImageClick = () => {\n    setShowImageModal(true);\n  };\n\n  const addToCart = () => {\n    const cartItem = {\n      id: product.title, // Using title as unique identifier\n      name: product.title,\n      price: parseFloat(product.price.replace(/[^\\d]/g, \"\")),\n      image: product.image,\n      category: product.category, // Add category for image URL generation\n      quantity: 1,\n      source: productSource,\n    };\n\n    // Get existing cart from localStorage\n    const existingCart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n\n    // Check if product already exists in cart\n    const existingItemIndex = existingCart.findIndex(\n      (item) => item.id === cartItem.id\n    );\n\n    if (existingItemIndex !== -1) {\n      // Update quantity if item exists\n      existingCart[existingItemIndex].quantity += 1;\n    } else {\n      // Add new item if it doesn't exist\n      existingCart.push(cartItem);\n    }\n\n    // Save updated cart to localStorage\n    localStorage.setItem(\"cart\", JSON.stringify(existingCart));\n\n    // Dispatch event to update cart count in navbar\n    window.dispatchEvent(new Event(\"cartUpdated\"));\n\n    // Show notification\n    setShowNotification(true);\n  };\n\n  const handleGoBack = () => {\n    navigate(-1);\n  };\n\n  const handleFullscreenPrev = () => {\n    setFullscreenImageIndex((prev) =>\n      prev === 0 ? product.images.length - 1 : prev - 1\n    );\n  };\n\n  const handleFullscreenNext = () => {\n    setFullscreenImageIndex((prev) =>\n      prev === product.images.length - 1 ? 0 : prev + 1\n    );\n  };\n\n  const openFullscreen = (index) => {\n    setFullscreenImageIndex(index);\n    setShowFullscreen(true);\n  };\n\n  if (!product) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"product-details\">\n      <Notification\n        message=\"Sản phẩm đã được thêm vào giỏ hàng thành công\"\n        isVisible={showNotification}\n        onClose={() => setShowNotification(false)}\n      />\n\n      <button onClick={handleGoBack} className=\"back-button-product\">\n        <IoIosArrowBack />\n        <span>Quay lại</span>\n      </button>\n\n      <div className=\"product-main\">\n        <div className=\"product-image\">\n          <div className=\"slideshow-container-product\">\n            <button\n              className=\"nav-button-product prev\"\n              onClick={handlePrevImage}\n            >\n              <MdNavigateBefore />\n            </button>\n            <img\n              src={getImageUrl(\n                product.category,\n                product.images[currentImageIndex]\n              )}\n              alt={product.title}\n              onClick={handleImageClick}\n            />\n            <button\n              className=\"nav-button-product next\"\n              onClick={handleNextImage}\n            >\n              <MdNavigateNext />\n            </button>\n            {product.images.length > 1 && (\n              <div className=\"image-counter-product\">\n                {currentImageIndex + 1} / {product.images.length}\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"product-info\">\n          <h1 className=\"product-title\">{product.title}</h1>\n          {productSource?.type === \"exhibition\" && (\n            <>\n              <p className=\"product-exhibition\">\n                Từ triển lãm: {productSource.title}\n              </p>\n              <p className=\"product-exhibition-date\">\n                Thời gian: {productSource.date}\n              </p>\n            </>\n          )}\n          <a className=\"product-price-detail\">{product.price}</a>\n          {productSource?.type === \"catalog\" && (\n            <p className=\"product-category\">\n              Danh mục: {productSource.category}\n            </p>\n          )}\n          {product.size && <p className=\"product-size\">{product.size}</p>}\n\n          <button className=\"add-to-cart\" onClick={addToCart}>\n            <BsCart3 />\n            Thêm vào giỏ hàng\n          </button>\n\n          <div className=\"product-specs\">\n            <div\n              className={`specs-header ${isSpecsOpen ? \"open\" : \"\"}`}\n              onClick={() => setIsSpecsOpen(!isSpecsOpen)}\n            >\n              <h2>Thông tin sản phẩm</h2>\n              <RiArrowDropDownLine />\n            </div>\n            {isSpecsOpen && (\n              <div className=\"specs-content\">\n                <p>Tên sản phẩm: {product.title}</p>\n                <p>Giá: {product.price}</p>\n                {product.size && <p>Kích thước: {product.size}</p>}\n                {productSource?.type === \"exhibition\" && (\n                  <>\n                    <p>Triển lãm: {productSource.title}</p>\n                    <p>Thời gian: {productSource.date}</p>\n                  </>\n                )}\n                {productSource?.type === \"catalog\" && (\n                  <>\n                    <p>Danh mục: {productSource.category}</p>\n                    <p>Nghệ sĩ: {product.artist}</p>\n                    <p>Năm xuất bản: {product.publishYear}</p>\n                  </>\n                )}\n                <p>\n                  Mã sản phẩm: {product.title.replace(/\\s+/g, \"\").toLowerCase()}\n                </p>\n              </div>\n            )}\n          </div>\n\n          <div className=\"product-notes\">\n            <div className=\"note-item\">\n              <span className=\"checkmark\">✓</span>\n              <p>Thanh toán an toàn</p>\n            </div>\n            <div className=\"note-item\">\n              <span className=\"checkmark\">✓</span>\n              <p>\n                Hài lòng hoặc được hoàn lại tiền trong vòng 14 ngày để thay đổi\n                quyết định\n              </p>\n            </div>\n            <div className=\"note-item\">\n              <span className=\"checkmark\">✓</span>\n              <p>Giao hàng trong vòng 1 đến 2 ngày làm việc</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showImageModal && (\n        <div className=\"image-modal\">\n          <button\n            className=\"modal-close\"\n            onClick={() => setShowImageModal(false)}\n          >\n            <IoClose />\n          </button>\n          <div className=\"modal-grid\">\n            {product.images.map((image, index) => (\n              <div\n                key={index}\n                className=\"modal-image-container\"\n                onClick={() => openFullscreen(index)}\n              >\n                <img\n                  src={getImageUrl(product.category, image)}\n                  alt={`${product.title} ${index + 1}`}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {showFullscreen && (\n        <div className=\"fullscreen-viewer\">\n          <button\n            className=\"fullscreen-close\"\n            onClick={() => setShowFullscreen(false)}\n          >\n            <IoClose />\n          </button>\n          <button\n            className=\"fullscreen-nav prev\"\n            onClick={handleFullscreenPrev}\n          >\n            <MdNavigateBefore />\n          </button>\n          <div className=\"fullscreen-image\">\n            <img\n              src={getImageUrl(\n                product.category,\n                product.images[fullscreenImageIndex]\n              )}\n              alt={`${product.title} ${fullscreenImageIndex + 1}`}\n            />\n          </div>\n          <button\n            className=\"fullscreen-nav next\"\n            onClick={handleFullscreenNext}\n          >\n            <MdNavigateNext />\n          </button>\n        </div>\n      )}\n\n      <section className=\"related-products\">\n        <h2>\n          {productSource?.type === \"exhibition\"\n            ? `Sản phẩm liên quan từ triển lãm ${productSource.title}`\n            : \"Sản phẩm cùng danh mục\"}\n        </h2>\n        <Swiper\n          modules={[Navigation, Pagination]}\n          spaceBetween={30}\n          slidesPerView={4}\n          navigation\n          pagination={{ clickable: true }}\n          breakpoints={{\n            320: {\n              slidesPerView: 1,\n              spaceBetween: 20,\n            },\n            480: {\n              slidesPerView: 2,\n              spaceBetween: 20,\n            },\n            768: {\n              slidesPerView: 3,\n              spaceBetween: 30,\n            },\n            1024: {\n              slidesPerView: 4,\n              spaceBetween: 30,\n            },\n          }}\n        >\n          {relatedProducts.map((relatedProduct) => (\n            <SwiperSlide key={relatedProduct.title}>\n              <Link\n                to={`/product/${relatedProduct.title}`}\n                className=\"related-product-card\"\n              >\n                <div className=\"related-product-image\">\n                  <img\n                    src={getImageUrl(\n                      relatedProduct.category,\n                      relatedProduct.image\n                    )}\n                    alt={relatedProduct.title}\n                  />\n                </div>\n                <h3>{relatedProduct.title}</h3>\n                <p className=\"price\">{relatedProduct.price}</p>\n              </Link>\n            </SwiperSlide>\n          ))}\n        </Swiper>\n      </section>\n    </div>\n  );\n};\n\nexport default ProductDetails;\n",
      "start": 1751302170905,
      "end": 1751302170955,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1751302170955,
      "end": 1751302170955,
      "order": "pre"
    },
    {
      "name": "vite:esbuild",
      "result": "import { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nimport React, { useEffect, useState } from \"react\";\nimport { BsCart3 } from \"react-icons/bs\";\nimport { IoIosArrowBack } from \"react-icons/io\";\nimport { IoClose } from \"react-icons/io5\";\nimport { MdNavigateBefore, MdNavigateNext } from \"react-icons/md\";\nimport { RiArrowDropDownLine } from \"react-icons/ri\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport \"swiper/css\";\nimport \"swiper/css/navigation\";\nimport \"swiper/css/pagination\";\nimport { Navigation, Pagination } from \"swiper/modules\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport Notification from \"../../components/Notification/Notification\";\nimport {\n  getAnPhamImageUrl,\n  getDoTrangSucImageUrl,\n  getHoiThaoNgheThuatImageUrl,\n  getInTheoYeuCauImageUrl,\n  getKhuyenTaiImageUrl,\n  getSanPhamTuThongImageUrl,\n  getThoCamImageUrl,\n  getThoiTrangImageUrl\n} from \"../../utils/cloudinary\";\nimport { sampleProducts } from \"../CategoryDetail/CategoryDetail\";\nimport { exhibitionsData } from \"../Exhibitions/Exhibitions\";\nimport \"./ProductDetails.css\";\nconst getImageUrl = (category, filename) => {\n  switch (category) {\n    case \"khuyentai\":\n      return getKhuyenTaiImageUrl(filename);\n    case \"anpham\":\n      return getAnPhamImageUrl(filename);\n    case \"in-theo-yeu-cau\":\n      return getInTheoYeuCauImageUrl(filename);\n    case \"hoi-thao-nghe-thuat\":\n      return getHoiThaoNgheThuatImageUrl(filename);\n    case \"thoi-trang-va-phu-kien\":\n      return getThoiTrangImageUrl(filename);\n    case \"do-trang-suc\":\n      return getDoTrangSucImageUrl(filename);\n    case \"thocam\":\n      return getThoCamImageUrl(filename);\n    case \"sanphamtuthong\":\n      return getSanPhamTuThongImageUrl(filename);\n    default:\n      return \"\";\n  }\n};\nconst ProductDetails = () => {\n  const { productId } = useParams();\n  const navigate = useNavigate();\n  const [product, setProduct] = useState(null);\n  const [isSpecsOpen, setIsSpecsOpen] = useState(false);\n  const [relatedProducts, setRelatedProducts] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n  const [productSource, setProductSource] = useState(null);\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const [showImageModal, setShowImageModal] = useState(false);\n  const [showFullscreen, setShowFullscreen] = useState(false);\n  const [fullscreenImageIndex, setFullscreenImageIndex] = useState(0);\n  useEffect(() => {\n    let foundProduct = null;\n    let source = null;\n    for (const exhibition of exhibitionsData) {\n      const exhibitionProduct = exhibition.products.find(\n        (p) => p.title === productId\n      );\n      if (exhibitionProduct) {\n        foundProduct = {\n          ...exhibitionProduct,\n          exhibitionTitle: exhibition.title,\n          exhibitionId: exhibition.id,\n          exhibitionDate: exhibition.date,\n          source: \"exhibition\"\n        };\n        source = {\n          type: \"exhibition\",\n          id: exhibition.id,\n          title: exhibition.title,\n          date: exhibition.date\n        };\n        break;\n      }\n    }\n    if (!foundProduct) {\n      for (const category in sampleProducts) {\n        const categoryProducts = sampleProducts[category];\n        const catalogProduct = categoryProducts.find(\n          (p) => p.id === productId || p.title === productId\n        );\n        if (catalogProduct) {\n          foundProduct = {\n            ...catalogProduct,\n            source: \"catalog\"\n          };\n          source = {\n            type: \"catalog\",\n            category\n          };\n          break;\n        }\n      }\n    }\n    setProduct(foundProduct);\n    setProductSource(source);\n    if (foundProduct) {\n      let related = [];\n      if (source.type === \"exhibition\") {\n        related = exhibitionsData.find((e) => e.id === source.id).products.filter((p) => p.title !== foundProduct.title).slice(0, 6);\n      } else {\n        related = sampleProducts[source.category].filter((p) => p.id !== foundProduct.id).slice(0, 6);\n      }\n      setRelatedProducts(related);\n    }\n  }, [productId]);\n  const handlePrevImage = () => {\n    setCurrentImageIndex(\n      (prev) => prev === 0 ? product.images.length - 1 : prev - 1\n    );\n  };\n  const handleNextImage = () => {\n    setCurrentImageIndex(\n      (prev) => prev === product.images.length - 1 ? 0 : prev + 1\n    );\n  };\n  const handleImageClick = () => {\n    setShowImageModal(true);\n  };\n  const addToCart = () => {\n    const cartItem = {\n      id: product.title,\n      // Using title as unique identifier\n      name: product.title,\n      price: parseFloat(product.price.replace(/[^\\d]/g, \"\")),\n      image: product.image,\n      category: product.category,\n      // Add category for image URL generation\n      quantity: 1,\n      source: productSource\n    };\n    const existingCart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n    const existingItemIndex = existingCart.findIndex(\n      (item) => item.id === cartItem.id\n    );\n    if (existingItemIndex !== -1) {\n      existingCart[existingItemIndex].quantity += 1;\n    } else {\n      existingCart.push(cartItem);\n    }\n    localStorage.setItem(\"cart\", JSON.stringify(existingCart));\n    window.dispatchEvent(new Event(\"cartUpdated\"));\n    setShowNotification(true);\n  };\n  const handleGoBack = () => {\n    navigate(-1);\n  };\n  const handleFullscreenPrev = () => {\n    setFullscreenImageIndex(\n      (prev) => prev === 0 ? product.images.length - 1 : prev - 1\n    );\n  };\n  const handleFullscreenNext = () => {\n    setFullscreenImageIndex(\n      (prev) => prev === product.images.length - 1 ? 0 : prev + 1\n    );\n  };\n  const openFullscreen = (index) => {\n    setFullscreenImageIndex(index);\n    setShowFullscreen(true);\n  };\n  if (!product) {\n    return /* @__PURE__ */ jsx(\"div\", { children: \"Loading...\" });\n  }\n  return /* @__PURE__ */ jsxs(\"div\", { className: \"product-details\", children: [\n    /* @__PURE__ */ jsx(\n      Notification,\n      {\n        message: \"Sản phẩm đã được thêm vào giỏ hàng thành công\",\n        isVisible: showNotification,\n        onClose: () => setShowNotification(false)\n      }\n    ),\n    /* @__PURE__ */ jsxs(\"button\", { onClick: handleGoBack, className: \"back-button-product\", children: [\n      /* @__PURE__ */ jsx(IoIosArrowBack, {}),\n      /* @__PURE__ */ jsx(\"span\", { children: \"Quay lại\" })\n    ] }),\n    /* @__PURE__ */ jsxs(\"div\", { className: \"product-main\", children: [\n      /* @__PURE__ */ jsx(\"div\", { className: \"product-image\", children: /* @__PURE__ */ jsxs(\"div\", { className: \"slideshow-container-product\", children: [\n        /* @__PURE__ */ jsx(\n          \"button\",\n          {\n            className: \"nav-button-product prev\",\n            onClick: handlePrevImage,\n            children: /* @__PURE__ */ jsx(MdNavigateBefore, {})\n          }\n        ),\n        /* @__PURE__ */ jsx(\n          \"img\",\n          {\n            src: getImageUrl(\n              product.category,\n              product.images[currentImageIndex]\n            ),\n            alt: product.title,\n            onClick: handleImageClick\n          }\n        ),\n        /* @__PURE__ */ jsx(\n          \"button\",\n          {\n            className: \"nav-button-product next\",\n            onClick: handleNextImage,\n            children: /* @__PURE__ */ jsx(MdNavigateNext, {})\n          }\n        ),\n        product.images.length > 1 && /* @__PURE__ */ jsxs(\"div\", { className: \"image-counter-product\", children: [\n          currentImageIndex + 1,\n          \" / \",\n          product.images.length\n        ] })\n      ] }) }),\n      /* @__PURE__ */ jsxs(\"div\", { className: \"product-info\", children: [\n        /* @__PURE__ */ jsx(\"h1\", { className: \"product-title\", children: product.title }),\n        productSource?.type === \"exhibition\" && /* @__PURE__ */ jsxs(Fragment, { children: [\n          /* @__PURE__ */ jsxs(\"p\", { className: \"product-exhibition\", children: [\n            \"Từ triển lãm: \",\n            productSource.title\n          ] }),\n          /* @__PURE__ */ jsxs(\"p\", { className: \"product-exhibition-date\", children: [\n            \"Thời gian: \",\n            productSource.date\n          ] })\n        ] }),\n        /* @__PURE__ */ jsx(\"a\", { className: \"product-price-detail\", children: product.price }),\n        productSource?.type === \"catalog\" && /* @__PURE__ */ jsxs(\"p\", { className: \"product-category\", children: [\n          \"Danh mục: \",\n          productSource.category\n        ] }),\n        product.size && /* @__PURE__ */ jsx(\"p\", { className: \"product-size\", children: product.size }),\n        /* @__PURE__ */ jsxs(\"button\", { className: \"add-to-cart\", onClick: addToCart, children: [\n          /* @__PURE__ */ jsx(BsCart3, {}),\n          \"Thêm vào giỏ hàng\"\n        ] }),\n        /* @__PURE__ */ jsxs(\"div\", { className: \"product-specs\", children: [\n          /* @__PURE__ */ jsxs(\n            \"div\",\n            {\n              className: `specs-header ${isSpecsOpen ? \"open\" : \"\"}`,\n              onClick: () => setIsSpecsOpen(!isSpecsOpen),\n              children: [\n                /* @__PURE__ */ jsx(\"h2\", { children: \"Thông tin sản phẩm\" }),\n                /* @__PURE__ */ jsx(RiArrowDropDownLine, {})\n              ]\n            }\n          ),\n          isSpecsOpen && /* @__PURE__ */ jsxs(\"div\", { className: \"specs-content\", children: [\n            /* @__PURE__ */ jsxs(\"p\", { children: [\n              \"Tên sản phẩm: \",\n              product.title\n            ] }),\n            /* @__PURE__ */ jsxs(\"p\", { children: [\n              \"Giá: \",\n              product.price\n            ] }),\n            product.size && /* @__PURE__ */ jsxs(\"p\", { children: [\n              \"Kích thước: \",\n              product.size\n            ] }),\n            productSource?.type === \"exhibition\" && /* @__PURE__ */ jsxs(Fragment, { children: [\n              /* @__PURE__ */ jsxs(\"p\", { children: [\n                \"Triển lãm: \",\n                productSource.title\n              ] }),\n              /* @__PURE__ */ jsxs(\"p\", { children: [\n                \"Thời gian: \",\n                productSource.date\n              ] })\n            ] }),\n            productSource?.type === \"catalog\" && /* @__PURE__ */ jsxs(Fragment, { children: [\n              /* @__PURE__ */ jsxs(\"p\", { children: [\n                \"Danh mục: \",\n                productSource.category\n              ] }),\n              /* @__PURE__ */ jsxs(\"p\", { children: [\n                \"Nghệ sĩ: \",\n                product.artist\n              ] }),\n              /* @__PURE__ */ jsxs(\"p\", { children: [\n                \"Năm xuất bản: \",\n                product.publishYear\n              ] })\n            ] }),\n            /* @__PURE__ */ jsxs(\"p\", { children: [\n              \"Mã sản phẩm: \",\n              product.title.replace(/\\s+/g, \"\").toLowerCase()\n            ] })\n          ] })\n        ] }),\n        /* @__PURE__ */ jsxs(\"div\", { className: \"product-notes\", children: [\n          /* @__PURE__ */ jsxs(\"div\", { className: \"note-item\", children: [\n            /* @__PURE__ */ jsx(\"span\", { className: \"checkmark\", children: \"✓\" }),\n            /* @__PURE__ */ jsx(\"p\", { children: \"Thanh toán an toàn\" })\n          ] }),\n          /* @__PURE__ */ jsxs(\"div\", { className: \"note-item\", children: [\n            /* @__PURE__ */ jsx(\"span\", { className: \"checkmark\", children: \"✓\" }),\n            /* @__PURE__ */ jsx(\"p\", { children: \"Hài lòng hoặc được hoàn lại tiền trong vòng 14 ngày để thay đổi quyết định\" })\n          ] }),\n          /* @__PURE__ */ jsxs(\"div\", { className: \"note-item\", children: [\n            /* @__PURE__ */ jsx(\"span\", { className: \"checkmark\", children: \"✓\" }),\n            /* @__PURE__ */ jsx(\"p\", { children: \"Giao hàng trong vòng 1 đến 2 ngày làm việc\" })\n          ] })\n        ] })\n      ] })\n    ] }),\n    showImageModal && /* @__PURE__ */ jsxs(\"div\", { className: \"image-modal\", children: [\n      /* @__PURE__ */ jsx(\n        \"button\",\n        {\n          className: \"modal-close\",\n          onClick: () => setShowImageModal(false),\n          children: /* @__PURE__ */ jsx(IoClose, {})\n        }\n      ),\n      /* @__PURE__ */ jsx(\"div\", { className: \"modal-grid\", children: product.images.map((image, index) => /* @__PURE__ */ jsx(\n        \"div\",\n        {\n          className: \"modal-image-container\",\n          onClick: () => openFullscreen(index),\n          children: /* @__PURE__ */ jsx(\n            \"img\",\n            {\n              src: getImageUrl(product.category, image),\n              alt: `${product.title} ${index + 1}`\n            }\n          )\n        },\n        index\n      )) })\n    ] }),\n    showFullscreen && /* @__PURE__ */ jsxs(\"div\", { className: \"fullscreen-viewer\", children: [\n      /* @__PURE__ */ jsx(\n        \"button\",\n        {\n          className: \"fullscreen-close\",\n          onClick: () => setShowFullscreen(false),\n          children: /* @__PURE__ */ jsx(IoClose, {})\n        }\n      ),\n      /* @__PURE__ */ jsx(\n        \"button\",\n        {\n          className: \"fullscreen-nav prev\",\n          onClick: handleFullscreenPrev,\n          children: /* @__PURE__ */ jsx(MdNavigateBefore, {})\n        }\n      ),\n      /* @__PURE__ */ jsx(\"div\", { className: \"fullscreen-image\", children: /* @__PURE__ */ jsx(\n        \"img\",\n        {\n          src: getImageUrl(\n            product.category,\n            product.images[fullscreenImageIndex]\n          ),\n          alt: `${product.title} ${fullscreenImageIndex + 1}`\n        }\n      ) }),\n      /* @__PURE__ */ jsx(\n        \"button\",\n        {\n          className: \"fullscreen-nav next\",\n          onClick: handleFullscreenNext,\n          children: /* @__PURE__ */ jsx(MdNavigateNext, {})\n        }\n      )\n    ] }),\n    /* @__PURE__ */ jsxs(\"section\", { className: \"related-products\", children: [\n      /* @__PURE__ */ jsx(\"h2\", { children: productSource?.type === \"exhibition\" ? `Sản phẩm liên quan từ triển lãm ${productSource.title}` : \"Sản phẩm cùng danh mục\" }),\n      /* @__PURE__ */ jsx(\n        Swiper,\n        {\n          modules: [Navigation, Pagination],\n          spaceBetween: 30,\n          slidesPerView: 4,\n          navigation: true,\n          pagination: { clickable: true },\n          breakpoints: {\n            320: {\n              slidesPerView: 1,\n              spaceBetween: 20\n            },\n            480: {\n              slidesPerView: 2,\n              spaceBetween: 20\n            },\n            768: {\n              slidesPerView: 3,\n              spaceBetween: 30\n            },\n            1024: {\n              slidesPerView: 4,\n              spaceBetween: 30\n            }\n          },\n          children: relatedProducts.map((relatedProduct) => /* @__PURE__ */ jsx(SwiperSlide, { children: /* @__PURE__ */ jsxs(\n            Link,\n            {\n              to: `/product/${relatedProduct.title}`,\n              className: \"related-product-card\",\n              children: [\n                /* @__PURE__ */ jsx(\"div\", { className: \"related-product-image\", children: /* @__PURE__ */ jsx(\n                  \"img\",\n                  {\n                    src: getImageUrl(\n                      relatedProduct.category,\n                      relatedProduct.image\n                    ),\n                    alt: relatedProduct.title\n                  }\n                ) }),\n                /* @__PURE__ */ jsx(\"h3\", { children: relatedProduct.title }),\n                /* @__PURE__ */ jsx(\"p\", { className: \"price\", children: relatedProduct.price })\n              ]\n            }\n          ) }, relatedProduct.title))\n        }\n      )\n    ] })\n  ] });\n};\nexport default ProductDetails;\n",
      "start": 1751302170955,
      "end": 1751302171158,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "C:/Users/.Freelancer/ONLINE/src/pages/ProductDetails/ProductDetails.jsx"
        ],
        "sourcesContent": [
          "import React, { useEffect, useState } from \"react\";\nimport { BsCart3 } from \"react-icons/bs\";\nimport { IoIosArrowBack } from \"react-icons/io\";\nimport { IoClose } from \"react-icons/io5\";\nimport { MdNavigateBefore, MdNavigateNext } from \"react-icons/md\";\nimport { RiArrowDropDownLine } from \"react-icons/ri\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport \"swiper/css\";\nimport \"swiper/css/navigation\";\nimport \"swiper/css/pagination\";\nimport { Navigation, Pagination } from \"swiper/modules\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport Notification from \"../../components/Notification/Notification\";\nimport {\n  getAnPhamImageUrl,\n  getDoTrangSucImageUrl,\n  getHoiThaoNgheThuatImageUrl,\n  getInTheoYeuCauImageUrl,\n  getKhuyenTaiImageUrl,\n  getSanPhamTuThongImageUrl,\n  getThoCamImageUrl,\n  getThoiTrangImageUrl,\n} from \"../../utils/cloudinary\";\nimport { sampleProducts } from \"../CategoryDetail/CategoryDetail\";\nimport { exhibitionsData } from \"../Exhibitions/Exhibitions\";\nimport \"./ProductDetails.css\";\n\n// Helper function to get image URL based on category\nconst getImageUrl = (category, filename) => {\n  switch (category) {\n    case \"khuyentai\":\n      return getKhuyenTaiImageUrl(filename);\n    case \"anpham\":\n      return getAnPhamImageUrl(filename);\n    case \"in-theo-yeu-cau\":\n      return getInTheoYeuCauImageUrl(filename);\n    case \"hoi-thao-nghe-thuat\":\n      return getHoiThaoNgheThuatImageUrl(filename);\n    case \"thoi-trang-va-phu-kien\":\n      return getThoiTrangImageUrl(filename);\n    case \"do-trang-suc\":\n      return getDoTrangSucImageUrl(filename);\n    case \"thocam\":\n      return getThoCamImageUrl(filename);\n    case \"sanphamtuthong\":\n      return getSanPhamTuThongImageUrl(filename);\n    default:\n      return \"\";\n  }\n};\n\nconst ProductDetails = () => {\n  const { productId } = useParams();\n  const navigate = useNavigate();\n  const [product, setProduct] = useState(null);\n  const [isSpecsOpen, setIsSpecsOpen] = useState(false);\n  const [relatedProducts, setRelatedProducts] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n  const [productSource, setProductSource] = useState(null);\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const [showImageModal, setShowImageModal] = useState(false);\n  const [showFullscreen, setShowFullscreen] = useState(false);\n  const [fullscreenImageIndex, setFullscreenImageIndex] = useState(0);\n\n  useEffect(() => {\n    let foundProduct = null;\n    let source = null;\n\n    // First, try to find the product in exhibitionsData\n    for (const exhibition of exhibitionsData) {\n      const exhibitionProduct = exhibition.products.find(\n        (p) => p.title === productId\n      );\n      if (exhibitionProduct) {\n        foundProduct = {\n          ...exhibitionProduct,\n          exhibitionTitle: exhibition.title,\n          exhibitionId: exhibition.id,\n          exhibitionDate: exhibition.date,\n          source: \"exhibition\",\n        };\n        source = {\n          type: \"exhibition\",\n          id: exhibition.id,\n          title: exhibition.title,\n          date: exhibition.date,\n        };\n        break;\n      }\n    }\n\n    // If not found in exhibitions, try sampleProducts\n    if (!foundProduct) {\n      // Search through all categories in sampleProducts\n      for (const category in sampleProducts) {\n        const categoryProducts = sampleProducts[category];\n        const catalogProduct = categoryProducts.find(\n          (p) => p.id === productId || p.title === productId\n        );\n        if (catalogProduct) {\n          foundProduct = {\n            ...catalogProduct,\n            source: \"catalog\",\n          };\n          source = {\n            type: \"catalog\",\n            category: category,\n          };\n          break;\n        }\n      }\n    }\n\n    setProduct(foundProduct);\n    setProductSource(source);\n\n    // Set related products based on source\n    if (foundProduct) {\n      let related = [];\n      if (source.type === \"exhibition\") {\n        // Get products from the same exhibition\n        related = exhibitionsData\n          .find((e) => e.id === source.id)\n          .products.filter((p) => p.title !== foundProduct.title)\n          .slice(0, 6);\n      } else {\n        // Get products from the same category\n        related = sampleProducts[source.category]\n          .filter((p) => p.id !== foundProduct.id)\n          .slice(0, 6);\n      }\n      setRelatedProducts(related);\n    }\n  }, [productId]);\n\n  const handlePrevImage = () => {\n    setCurrentImageIndex((prev) =>\n      prev === 0 ? product.images.length - 1 : prev - 1\n    );\n  };\n\n  const handleNextImage = () => {\n    setCurrentImageIndex((prev) =>\n      prev === product.images.length - 1 ? 0 : prev + 1\n    );\n  };\n\n  const handleImageClick = () => {\n    setShowImageModal(true);\n  };\n\n  const addToCart = () => {\n    const cartItem = {\n      id: product.title, // Using title as unique identifier\n      name: product.title,\n      price: parseFloat(product.price.replace(/[^\\d]/g, \"\")),\n      image: product.image,\n      category: product.category, // Add category for image URL generation\n      quantity: 1,\n      source: productSource,\n    };\n\n    // Get existing cart from localStorage\n    const existingCart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n\n    // Check if product already exists in cart\n    const existingItemIndex = existingCart.findIndex(\n      (item) => item.id === cartItem.id\n    );\n\n    if (existingItemIndex !== -1) {\n      // Update quantity if item exists\n      existingCart[existingItemIndex].quantity += 1;\n    } else {\n      // Add new item if it doesn't exist\n      existingCart.push(cartItem);\n    }\n\n    // Save updated cart to localStorage\n    localStorage.setItem(\"cart\", JSON.stringify(existingCart));\n\n    // Dispatch event to update cart count in navbar\n    window.dispatchEvent(new Event(\"cartUpdated\"));\n\n    // Show notification\n    setShowNotification(true);\n  };\n\n  const handleGoBack = () => {\n    navigate(-1);\n  };\n\n  const handleFullscreenPrev = () => {\n    setFullscreenImageIndex((prev) =>\n      prev === 0 ? product.images.length - 1 : prev - 1\n    );\n  };\n\n  const handleFullscreenNext = () => {\n    setFullscreenImageIndex((prev) =>\n      prev === product.images.length - 1 ? 0 : prev + 1\n    );\n  };\n\n  const openFullscreen = (index) => {\n    setFullscreenImageIndex(index);\n    setShowFullscreen(true);\n  };\n\n  if (!product) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"product-details\">\n      <Notification\n        message=\"Sản phẩm đã được thêm vào giỏ hàng thành công\"\n        isVisible={showNotification}\n        onClose={() => setShowNotification(false)}\n      />\n\n      <button onClick={handleGoBack} className=\"back-button-product\">\n        <IoIosArrowBack />\n        <span>Quay lại</span>\n      </button>\n\n      <div className=\"product-main\">\n        <div className=\"product-image\">\n          <div className=\"slideshow-container-product\">\n            <button\n              className=\"nav-button-product prev\"\n              onClick={handlePrevImage}\n            >\n              <MdNavigateBefore />\n            </button>\n            <img\n              src={getImageUrl(\n                product.category,\n                product.images[currentImageIndex]\n              )}\n              alt={product.title}\n              onClick={handleImageClick}\n            />\n            <button\n              className=\"nav-button-product next\"\n              onClick={handleNextImage}\n            >\n              <MdNavigateNext />\n            </button>\n            {product.images.length > 1 && (\n              <div className=\"image-counter-product\">\n                {currentImageIndex + 1} / {product.images.length}\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"product-info\">\n          <h1 className=\"product-title\">{product.title}</h1>\n          {productSource?.type === \"exhibition\" && (\n            <>\n              <p className=\"product-exhibition\">\n                Từ triển lãm: {productSource.title}\n              </p>\n              <p className=\"product-exhibition-date\">\n                Thời gian: {productSource.date}\n              </p>\n            </>\n          )}\n          <a className=\"product-price-detail\">{product.price}</a>\n          {productSource?.type === \"catalog\" && (\n            <p className=\"product-category\">\n              Danh mục: {productSource.category}\n            </p>\n          )}\n          {product.size && <p className=\"product-size\">{product.size}</p>}\n\n          <button className=\"add-to-cart\" onClick={addToCart}>\n            <BsCart3 />\n            Thêm vào giỏ hàng\n          </button>\n\n          <div className=\"product-specs\">\n            <div\n              className={`specs-header ${isSpecsOpen ? \"open\" : \"\"}`}\n              onClick={() => setIsSpecsOpen(!isSpecsOpen)}\n            >\n              <h2>Thông tin sản phẩm</h2>\n              <RiArrowDropDownLine />\n            </div>\n            {isSpecsOpen && (\n              <div className=\"specs-content\">\n                <p>Tên sản phẩm: {product.title}</p>\n                <p>Giá: {product.price}</p>\n                {product.size && <p>Kích thước: {product.size}</p>}\n                {productSource?.type === \"exhibition\" && (\n                  <>\n                    <p>Triển lãm: {productSource.title}</p>\n                    <p>Thời gian: {productSource.date}</p>\n                  </>\n                )}\n                {productSource?.type === \"catalog\" && (\n                  <>\n                    <p>Danh mục: {productSource.category}</p>\n                    <p>Nghệ sĩ: {product.artist}</p>\n                    <p>Năm xuất bản: {product.publishYear}</p>\n                  </>\n                )}\n                <p>\n                  Mã sản phẩm: {product.title.replace(/\\s+/g, \"\").toLowerCase()}\n                </p>\n              </div>\n            )}\n          </div>\n\n          <div className=\"product-notes\">\n            <div className=\"note-item\">\n              <span className=\"checkmark\">✓</span>\n              <p>Thanh toán an toàn</p>\n            </div>\n            <div className=\"note-item\">\n              <span className=\"checkmark\">✓</span>\n              <p>\n                Hài lòng hoặc được hoàn lại tiền trong vòng 14 ngày để thay đổi\n                quyết định\n              </p>\n            </div>\n            <div className=\"note-item\">\n              <span className=\"checkmark\">✓</span>\n              <p>Giao hàng trong vòng 1 đến 2 ngày làm việc</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showImageModal && (\n        <div className=\"image-modal\">\n          <button\n            className=\"modal-close\"\n            onClick={() => setShowImageModal(false)}\n          >\n            <IoClose />\n          </button>\n          <div className=\"modal-grid\">\n            {product.images.map((image, index) => (\n              <div\n                key={index}\n                className=\"modal-image-container\"\n                onClick={() => openFullscreen(index)}\n              >\n                <img\n                  src={getImageUrl(product.category, image)}\n                  alt={`${product.title} ${index + 1}`}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {showFullscreen && (\n        <div className=\"fullscreen-viewer\">\n          <button\n            className=\"fullscreen-close\"\n            onClick={() => setShowFullscreen(false)}\n          >\n            <IoClose />\n          </button>\n          <button\n            className=\"fullscreen-nav prev\"\n            onClick={handleFullscreenPrev}\n          >\n            <MdNavigateBefore />\n          </button>\n          <div className=\"fullscreen-image\">\n            <img\n              src={getImageUrl(\n                product.category,\n                product.images[fullscreenImageIndex]\n              )}\n              alt={`${product.title} ${fullscreenImageIndex + 1}`}\n            />\n          </div>\n          <button\n            className=\"fullscreen-nav next\"\n            onClick={handleFullscreenNext}\n          >\n            <MdNavigateNext />\n          </button>\n        </div>\n      )}\n\n      <section className=\"related-products\">\n        <h2>\n          {productSource?.type === \"exhibition\"\n            ? `Sản phẩm liên quan từ triển lãm ${productSource.title}`\n            : \"Sản phẩm cùng danh mục\"}\n        </h2>\n        <Swiper\n          modules={[Navigation, Pagination]}\n          spaceBetween={30}\n          slidesPerView={4}\n          navigation\n          pagination={{ clickable: true }}\n          breakpoints={{\n            320: {\n              slidesPerView: 1,\n              spaceBetween: 20,\n            },\n            480: {\n              slidesPerView: 2,\n              spaceBetween: 20,\n            },\n            768: {\n              slidesPerView: 3,\n              spaceBetween: 30,\n            },\n            1024: {\n              slidesPerView: 4,\n              spaceBetween: 30,\n            },\n          }}\n        >\n          {relatedProducts.map((relatedProduct) => (\n            <SwiperSlide key={relatedProduct.title}>\n              <Link\n                to={`/product/${relatedProduct.title}`}\n                className=\"related-product-card\"\n              >\n                <div className=\"related-product-image\">\n                  <img\n                    src={getImageUrl(\n                      relatedProduct.category,\n                      relatedProduct.image\n                    )}\n                    alt={relatedProduct.title}\n                  />\n                </div>\n                <h3>{relatedProduct.title}</h3>\n                <p className=\"price\">{relatedProduct.price}</p>\n              </Link>\n            </SwiperSlide>\n          ))}\n        </Swiper>\n      </section>\n    </div>\n  );\n};\n\nexport default ProductDetails;\n"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1751302171158,
      "end": 1751302171158,
      "order": "normal-normal"
    },
    {
      "name": "vite:define",
      "start": 1751302171158,
      "end": 1751302171158,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-html",
      "start": 1751302171158,
      "end": 1751302171158,
      "order": "normal-normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1751302171158,
      "end": 1751302171158,
      "order": "normal-normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1751302171158,
      "end": 1751302171158,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1751302171158,
      "end": 1751302171158,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1751302171158,
      "end": 1751302171158,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1751302171158,
      "end": 1751302171159,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1751302171159,
      "end": 1751302171159,
      "order": "normal"
    }
  ]
}
