{
  "resolvedId": "C:/Users/.Freelancer/TICKET/node_modules/prop-types/factoryWithThrowingShims.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n",
      "start": 1751092510065,
      "end": 1751092511037,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1751092511037,
      "end": 1751092511037,
      "order": "pre"
    },
    {
      "name": "vite:esbuild",
      "start": 1751092511037,
      "end": 1751092511037,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1751092511037,
      "end": 1751092511037,
      "order": "normal-normal"
    },
    {
      "name": "vite:define",
      "start": 1751092511037,
      "end": 1751092511037,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-html",
      "start": 1751092511037,
      "end": 1751092511037,
      "order": "normal-normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1751092511037,
      "end": 1751092511037,
      "order": "normal-normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1751092511037,
      "end": 1751092511037,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1751092511403,
      "end": 1751092511403,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1751092511403,
      "end": 1751092511403,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1751092511403,
      "end": 1751092511403,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1751092511403,
      "end": 1751092511403,
      "order": "normal"
    }
  ]
}
