{
  "resolvedId": "C:/Users/.Freelancer/MUSSEEDUPIN/src/pages/Collection/CollectionPage.jsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { getImageUrl } from \"../../utils/cloudinary\";\nimport \"./CollectionPage.css\";\n\n// Collection data\nconst collectionData = {\n  heroImages: [\n    \"Cồng Chiên.webp\",\n    \"Lồng Đa Đa.webp\",\n    \"36 (2).webp\",\n    \"phunu_hero.webp\",\n    \"Chiếc Gùi.webp\",\n    \"Nồi đất.webp\",\n    \"Thông 2.webp\",\n    \"Hoa Ban Trắng.webp\",\n    \"luutrunghethuat.jpg\",\n    \"Lửa.webp\",\n    \"Gió.webp\",\n    \"Đông.webp\",\n  ],\n\n  artworks: [\n    {\n      id: \"dungcu-1\",\n      title: \"Dụng cụ âm nhạc Tây Nguyên\",\n      artist: \"Cồng chiêng\",\n      year: \"2024\",\n      image: \"Cồng Chiên.webp\",\n      description:\n        \"Musée Du Pin trưng bày các nhạc cụ truyền thống bằng đồng của các dân tộc Tây Nguyên, tiêu biểu là cồng chiêng – biểu tượng văn hóa và tín ngưỡng thiêng liêng. Âm thanh vang vọng của cồng chiêng thể hiện sự kết nối sâu sắc giữa con người và thế giới tâm linh.\",\n      location: \"Khu trưng bày nhạc cụ\",\n      tags: [\"Nhạc cụ\", \"Văn hóa\", \"Tây Nguyên\"],\n    },\n    {\n      id: \"channuoi-1\",\n      title: \"Hơi thở đại ngàn\",\n      artist: \"Lồng đa đa\",\n      year: \"2024\",\n      image: \"Lồng Đa Đa.webp\",\n      description:\n        \"Lồng đa đa của người K'ho hiện đang được trưng bày tại Musée Du Pin như một biểu tượng mộc mạc nhưng đầy tính văn hóa của đời sống dân tộc Tây Nguyên. Được đan thủ công từ tre nứa, chiếc lồng không chỉ phục vụ mục đích chăn nuôi mà còn phản ánh sự khéo léo, tỉ mỉ và mối liên kết bền chặt giữa con người với thiên nhiên núi rừng.\",\n      location: \"Khu trưng bày đời sống\",\n      tags: [\"Đời sống\", \"Văn hóa\", \"K'ho\"],\n    },\n    {\n      id: \"dieukhac-1\",\n      title: \"Hình hài bản sắc\",\n      artist: \"Tượng phụ nữ\",\n      year: \"2024\",\n      image: \"Điêu Khắc.webp\",\n      description:\n        \"Tác phẩm điêu khắc người dân tộc K'ho đang được trưng bày tại Musée Du Pin thể hiện hình ảnh phụ nữ Tây Nguyên trong dáng đứng trang nghiêm, tay cầm chiếc chiêng nhỏ – biểu tượng của âm nhạc và tín ngưỡng bản địa.\",\n      location: \"Khu trưng bày điêu khắc\",\n      tags: [\"Điêu khắc\", \"Văn hóa\", \"K'ho\"],\n    },\n    {\n      id: \"lehoi-1\",\n      title: \"Những mùa no ấm\",\n      artist: \"Ché Ghò Sành\",\n      year: \"2024\",\n      image: \"Chiếc Gùi.webp\",\n      description:\n        \"Ché Ghò Sành là một loại ché cổ nổi tiếng của Tây Nguyên, hiện đang được trưng bày tại Musée Du Pin, đây là biểu tượng của sự giàu có, quyền uy và tín ngưỡng tâm linh trong đời sống người bản địa.\",\n      location: \"Khu trưng bày lễ hội\",\n      tags: [\"Lễ hội\", \"Văn hóa\", \"K'ho\"],\n    },\n    {\n      id: \"sinhoat-1\",\n      title: \"Hơi ấm buôn làng\",\n      artist: \"Nồi đất\",\n      year: \"2024\",\n      image: \"Nồi Đất.webp\",\n      description:\n        \"Muée Du Pin trưng bày nồi đất của người K'ho, đây là biểu tượng của sự phát triển và tiến bộ của dân tộc Tây Nguyên.\",\n      location: \"Khu trưng bày đời sống\",\n      tags: [\"Đời sống\", \"Văn hóa\", \"K'ho\"],\n    },\n    {\n      id: \"sinhoat-2\",\n      title: \"Lửa thiêng đêm núi\",\n      artist: \"36 (2).webp\",\n      year: \"2024\",\n      image: \"46.webp\",\n      description:\n        \"Được khoét rỗng từ quả hồ lô khô, vật phẩm này thường được dùng để đựng nước, rượu cần hoặc làm nhạc cụ truyền thống\",\n      location: \"Khu trưng bày đời sống\",\n      tags: [\"Đời sống\", \"Văn hóa\", \"K'ho\"],\n    },\n    {\n      id: \"phuctang-1\",\n      title: \"Phức Tầng\",\n      artist: \"Thông 2\",\n      year: \"2025\",\n      image: \"Thông 2.webp\",\n      description:\n        \"Được Musée Du Pin bắt trọn khoảng khắc các hình ảnh thiên nhiên đậm sắc dân tộc K'ho, tạo nên bức tranh đẹp về đất nước Tây Nguyên.\",\n      location: \"Khu trưng bày đời sống\",\n      tags: [\"Đời sống\", \"Văn hóa\", \"Thiên nhiên\"],\n    },\n    {\n      id: \"vatlieu-1\",\n      title: \"Vật liệu\",\n      artist: \"Chất liệu K'ho\",\n      year: \"2024\",\n      image: \"Hoa Ban Trắng.webp\",\n      description:\n        \"Tại Musée Du Pin, mỗi chất liệu được chọn lựa kỹ lưỡng nhằm tôn vinh vẻ đẹp tự nhiên và bản sắc văn hóa Tây Nguyên. Các vật liệu truyền thống như gỗ, đá, đất và sợi tự nhiên không chỉ là phương tiện sáng tạo mà còn là cầu nối giữa nghệ thuật và đời sống bản địa.\",\n      location: \"Khu trưng bày vật liệu\",\n      tags: [\"Vật liệu\", \"Văn hóa\", \"K'ho\"],\n    },\n    {\n      id: \"redpine-1\",\n      title: \"Redpine Art Studio\",\n      artist: \"Musée Du Pin\",\n      year: \"2024\",\n      image: \"luutrunghethuat.jpg\",\n      description:\n        \"Redpine Art Studio là không gian lưu trú nghệ thuật độc đáo giữa rừng thông, nơi bạn có thể trải nghiệm nghệ thuật và thiên nhiên Đà Lạt.\",\n      location: \"Khu lưu trú nghệ thuật\",\n      tags: [\"Lưu trú\", \"Nghệ thuật\", \"Đà Lạt\"],\n    },\n    {\n      id: \"memory-1\",\n      title: \"Bề mặt ký ức\",\n      artist: \"Tham quan\",\n      year: \"2024\",\n      image: \"Lửa.webp\",\n      description: \"Bề mặt ký ức.\",\n      location: \"Khu trưng bày\",\n      tags: [\"Tham quan\", \"Nghệ thuật\", \"Đà Lạt\"],\n    },\n    {\n      id: \"nature-1\",\n      title: \"Thiên nhiên Đà Lạt\",\n      artist: \"Tham quan\",\n      year: \"2024\",\n      image: \"Gió.webp\",\n      description: \"Thiên nhiên Đà Lạt.\",\n      location: \"Khu trưng bày\",\n      tags: [\"Tham quan\", \"Nghệ thuật\", \"Đà Lạt\"],\n    },\n    {\n      id: \"color-1\",\n      title: \"Sắc màu Tây nguyên\",\n      artist: \"Tham quan\",\n      year: \"2024\",\n      image: \"Đông.webp\",\n      description: \"Sắc màu Tây nguyên.\",\n      location: \"Khu trưng bày\",\n      tags: [\"Tham quan\", \"Nghệ thuật\", \"Đà Lạt\"],\n    },\n  ],\n\n  categories: [\n    { id: 1, title: \"Dụng cụ âm nhạc Tây Nguyên\", image: \"Cồng Chiên.webp\" },\n    { id: 2, title: \"Hơi thở đại ngàn\", image: \"Lồng Đa Đa.webp\" },\n    { id: 3, title: \"Lửa thiêng đêm núi\", image: \"36 (2).webp\" },\n    { id: 4, title: \"Hình hài bản sắc\", image: \"phunu_hero.webp\" },\n    {\n      id: 5,\n      title: \"Những mùa no ấm\",\n      image: \"Chiếc Gùi.webp\",\n    },\n    { id: 6, title: \"Hơi ấm buôn làng\", image: \"Nồi Đất.webp\" },\n    { id: 7, title: \"Phức Tầng\", image: \"Thông 2.webp\" },\n    { id: 8, title: \"Vật liệu\", image: \"Hoa Ban Trắng.webp\" },\n    { id: 9, title: \"Redpine Art Studio\", image: \"luutrunghethuat.jpg\" },\n    {\n      id: 10,\n      title: \"Bề mặt ký ức\",\n      image: \"Lửa.webp\",\n    },\n    {\n      id: 11,\n      title: \"Thiên nhiên Đà Lạt\",\n      image: \"Gió.webp\",\n    },\n    {\n      id: 12,\n      title: \"Sắc màu Tây nguyên\",\n      image: \"Đông.webp\",\n    },\n  ],\n\n  highlights: [\n    {\n      id: 1,\n      title: \"Nhạc cụ truyền thống\",\n      category: \"Nhạc cụ\",\n      image: \"Cồng Chiên.webp\",\n      type: \"video\",\n      youtubeId: \"dQw4w9WgXcQ\",\n      description:\n        \"Khám phá âm nhạc truyền thống của người Tây Nguyên qua các nhạc cụ độc đáo.\",\n    },\n    {\n      id: 2,\n      title: \"Hình hài bản sắc\",\n      category: \"Điêu khắc\",\n      image: \"Điêu Khắc.webp\",\n      type: \"image\",\n      artwork: 1,\n      description:\n        \"Nghệ thuật điêu khắc truyền thống của người K'ho qua các tác phẩm tiêu biểu.\",\n    },\n    {\n      id: 3,\n      title: \"Hơi ấm buôn làng\",\n      category: \"Đời sống\",\n      image: \"46.webp\",\n      type: \"video\",\n      youtubeId: \"dQw4w9WgXcQ\",\n      description:\n        \"Tìm hiểu về cuộc sống hàng ngày của người K'ho qua các vật dụng sinh hoạt.\",\n    },\n    {\n      id: 4,\n      title: \"Lửa thiêng đêm núi\",\n      category: \"Lễ hội\",\n      image: \"36 (2).webp\",\n      type: \"image\",\n      artwork: 4,\n      description:\n        \"Khám phá các lễ hội truyền thống và ý nghĩa văn hóa của người K'ho.\",\n    },\n    {\n      id: 5,\n      title: \"Hơi thở đại ngàn\",\n      category: \"Chăn nuôi\",\n      image: \"Lồng Đa Đa.webp\",\n      type: \"video\",\n      youtubeId: \"dQw4w9WgXcQ\",\n      description:\n        \"Tìm hiểu về hoạt động chăn nuôi và các công cụ truyền thống của người K'ho.\",\n    },\n    {\n      id: 6,\n      title: \"Những mùa no ấm\",\n      category: \"Sinh hoạt\",\n      image: \"Chiếc Gùi.webp\",\n      type: \"image\",\n      artwork: 2,\n      description:\n        \"Khám phá các hoạt động sinh hoạt văn hóa đặc trưng của người K'ho.\",\n    },\n    {\n      id: 7,\n      title: \"Vật liệu\",\n      category: \"Vật liệu\",\n      image: \"Hoa Ban Trắng.webp\",\n      type: \"image\",\n      artwork: 1,\n      description:\n        \"Khám phá các chất liệu truyền thống và ý nghĩa văn hóa của người K'ho.\",\n    },\n  ],\n};\n\nconst CollectionPage = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // State for hero section slideshow\n  const [activeHeroSlide, setActiveHeroSlide] = useState(0);\n\n  // State for featured artwork\n  const [selectedArtwork, setSelectedArtwork] = useState(0);\n\n  // State for discover works gallery\n  const discoverWorksRef = useRef(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [startX, setStartX] = useState(0);\n  const [scrollLeft, setScrollLeft] = useState(0);\n\n  // State for modals\n  const [artworkModalOpen, setArtworkModalOpen] = useState(false);\n  const [videoModalOpen, setVideoModalOpen] = useState(false);\n  const [videoModalClosing, setVideoModalClosing] = useState(false);\n  const [modalContent, setModalContent] = useState(null);\n\n  // State for auto-scrolling functionality - DISABLED\n  // const [autoScrollEnabled, setAutoScrollEnabled] = useState(true);\n  const [containerWidth, setContainerWidth] = useState(0);\n  const [contentWidth, setContentWidth] = useState(0);\n  const [showScrollIndicator, setShowScrollIndicator] = useState(true);\n  // const [manualInteraction, setManualInteraction] = useState(false);\n  const userInteractionTimeout = useRef(null);\n\n  // State for parallax effect on category cards\n  // const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n  const categoryGridRef = useRef(null);\n\n  // State for touch events\n  const [lastTouchX, setLastTouchX] = useState(0);\n  const [lastTouchTime, setLastTouchTime] = useState(0);\n  const [touchVelocity, setTouchVelocity] = useState(0);\n\n  // State for discover section video background\n  const [isDiscoverVideoLoaded, setIsDiscoverVideoLoaded] = useState(false);\n  const discoverVideoRef = useRef(null);\n\n  // Add new state for current slide\n  const [currentSlide, setCurrentSlide] = useState(1);\n\n  // Handle auto-rotating hero slideshow\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setActiveHeroSlide(\n        (prev) => (prev + 1) % collectionData.heroImages.length\n      );\n    }, 5000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Go to specific slide\n  const goToHeroSlide = (index) => {\n    setActiveHeroSlide(index);\n  };\n\n  // Handle section animations with debounce for better performance\n  useEffect(() => {\n    const animateSections = () => {\n      const sections = document.querySelectorAll(\".animate-section\");\n\n      sections.forEach((section) => {\n        const sectionTop = section.getBoundingClientRect().top;\n        const windowHeight = window.innerHeight;\n\n        if (sectionTop < windowHeight * 0.75) {\n          section.classList.add(\"visible\");\n        }\n      });\n    };\n\n    // Debounce function to limit frequency of scroll event handling\n    const debounce = (func, wait = 10, immediate = true) => {\n      let timeout;\n      return function () {\n        const context = this,\n          args = arguments;\n        const later = function () {\n          timeout = null;\n          if (!immediate) func.apply(context, args);\n        };\n        const callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n      };\n    };\n\n    // Run once on mount\n    animateSections();\n\n    // Add scroll listener with debounce for better performance\n    const debouncedAnimateSections = debounce(animateSections, 15);\n    window.addEventListener(\"scroll\", debouncedAnimateSections, {\n      passive: true,\n    });\n\n    return () => {\n      window.removeEventListener(\"scroll\", debouncedAnimateSections);\n    };\n  }, []);\n\n  // Use a more efficient intersection observer with fewer callbacks\n  useEffect(() => {\n    // Detect if we're on a mobile device to apply optimizations\n    const isMobile = window.innerWidth <= 768;\n\n    const observerOptions = {\n      threshold: isMobile ? 0.1 : 0.15, // Lower threshold on mobile for earlier loading\n      rootMargin: isMobile ? \"100px\" : \"0px\", // Bigger margin on mobile\n    };\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          entry.target.classList.add(\"visible\");\n          // Unobserve after animation to save resources\n          observer.unobserve(entry.target);\n        }\n      });\n    }, observerOptions);\n\n    // Only observe elements that are not already visible\n    document\n      .querySelectorAll(\".animate-section:not(.visible)\")\n      .forEach((section) => {\n        observer.observe(section);\n      });\n\n    return () => {\n      // Cleanup\n      observer.disconnect();\n    };\n  }, []);\n\n  // Handle artwork selection\n  const handleArtworkSelect = (index) => {\n    setSelectedArtwork(index);\n    document.getElementById(\"featured-artwork\").scrollIntoView({\n      behavior: \"smooth\",\n    });\n  };\n\n  // Navigate through featured artworks\n  const navigateArtwork = (direction) => {\n    if (direction === \"prev\") {\n      setSelectedArtwork(\n        (prev) =>\n          (prev - 1 + collectionData.artworks.length) %\n          collectionData.artworks.length\n      );\n    } else {\n      setSelectedArtwork((prev) => (prev + 1) % collectionData.artworks.length);\n    }\n  };\n\n  // Handle category selection - navigate to a new route instead of opening modal\n  const handleCategorySelect = (category, event) => {\n    // Add click animation effect before navigation\n    const card = event.currentTarget;\n    card.style.transition = \"transform 0.5s cubic-bezier(0.19, 1, 0.22, 1)\";\n    card.style.transform = \"scale(1.05) translateY(-15px)\";\n    card.style.opacity = \"0.8\";\n\n    // Use setTimeout to allow the animation to complete before navigation\n    setTimeout(() => {\n      // Navigate to the correct route that matches App.jsx: /collection/:category\n      navigate(`/collection/${category.id}`);\n    }, 400);\n  };\n\n  // Open artwork detail modal\n  const openArtworkDetail = (highlight) => {\n    // Find the artwork index based on the referenced ID\n    const artworkIndex = collectionData.artworks.findIndex(\n      (artwork) => artwork.id === highlight.artwork\n    );\n\n    if (artworkIndex !== -1) {\n      // Set the selected artwork\n      setSelectedArtwork(artworkIndex);\n\n      // Scroll to the featured artwork section with smooth animation\n      document.getElementById(\"featured-artwork\").scrollIntoView({\n        behavior: \"smooth\",\n      });\n    }\n  };\n\n  // Open video modal with enhanced animation\n  const openVideoModal = (highlight) => {\n    // Add a more elaborate animation sequence to the clicked item\n    const highlightElement = document.querySelector(\n      `[data-highlight-id=\"${highlight.id}\"]`\n    );\n\n    if (highlightElement) {\n      // Add pulse effect to play button\n      const playButton = highlightElement.querySelector(\".cp-play-button\");\n      let ripple = null;\n\n      if (playButton) {\n        playButton.style.transform = \"translate(-50%, -50%) scale(1.2)\";\n        playButton.style.opacity = \"1\";\n\n        // Create ripple effect\n        ripple = document.createElement(\"div\");\n        ripple.className = \"cp-video-ripple\";\n        ripple.style.position = \"absolute\";\n        ripple.style.top = \"50%\";\n        ripple.style.left = \"50%\";\n        ripple.style.transform = \"translate(-50%, -50%)\";\n        ripple.style.width = \"80px\";\n        ripple.style.height = \"80px\";\n        ripple.style.borderRadius = \"50%\";\n        ripple.style.background = \"rgba(255, 255, 255, 0.2)\";\n        ripple.style.zIndex = \"10\";\n        ripple.style.animation =\n          \"ripple-out 0.6s cubic-bezier(0.19, 1, 0.22, 1) forwards\";\n\n        highlightElement.appendChild(ripple);\n      }\n\n      // Add opening animation class\n      highlightElement.classList.add(\"video-opening\");\n\n      // Apply transform to the image for zoom effect\n      const img = highlightElement.querySelector(\".cp-highlight-img\");\n      if (img) {\n        img.style.transform = \"scale(1.15)\";\n      }\n\n      // Apply fade to the gradient\n      const gradient = highlightElement.querySelector(\".cp-highlight-gradient\");\n      if (gradient) {\n        gradient.style.opacity = \"0.9\";\n      }\n\n      // Clean up animations after delay before opening modal\n      setTimeout(() => {\n        if (ripple) ripple.remove();\n        highlightElement.classList.remove(\"video-opening\");\n\n        // Reset styles\n        if (img) img.style.transform = \"\";\n        if (gradient) gradient.style.opacity = \"\";\n        if (playButton) {\n          playButton.style.transform = \"\";\n          playButton.style.opacity = \"\";\n        }\n\n        // Now open the modal\n        setModalContent(highlight);\n        setVideoModalOpen(true);\n        document.body.style.overflow = \"hidden\"; // Prevent scrolling\n      }, 600);\n    } else {\n      // Fallback if element not found\n      setModalContent(highlight);\n      setVideoModalOpen(true);\n      document.body.style.overflow = \"hidden\";\n    }\n  };\n\n  // Close modals with animation\n  const closeModal = () => {\n    if (videoModalOpen) {\n      setVideoModalClosing(true);\n      setTimeout(() => {\n        setVideoModalOpen(false);\n        setVideoModalClosing(false);\n        setModalContent(null);\n        document.body.style.overflow = \"auto\"; // Re-enable scrolling\n      }, 300);\n    } else {\n      setArtworkModalOpen(false);\n      document.body.style.overflow = \"auto\";\n    }\n  };\n\n  // Handle modal backdrop click to close\n  const handleModalBackdropClick = (e) => {\n    if (e.target.classList.contains(\"cp-modal\")) {\n      closeModal();\n    }\n  };\n\n  // Handle download artwork\n  const handleDownload = (artwork) => {\n    const link = document.createElement(\"a\");\n    link.href = getImageUrl(artwork.image);\n    link.download = `${artwork.title.replace(/\\s+/g, \"-\").toLowerCase()}.jpg`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Handle mouse events for dragging the gallery\n  const handleMouseDown = (e) => {\n    setIsDragging(true);\n    setStartX(e.pageX - discoverWorksRef.current.offsetLeft);\n    setScrollLeft(discoverWorksRef.current.scrollLeft);\n    setShowScrollIndicator(false);\n  };\n\n  const handleMouseUp = () => {\n    setIsDragging(false);\n\n    // Set a timeout to auto-resume scrolling after manual interaction\n    if (userInteractionTimeout.current) {\n      clearTimeout(userInteractionTimeout.current);\n    }\n    userInteractionTimeout.current = setTimeout(() => {\n      setShowScrollIndicator(true);\n    }, 2000);\n  };\n\n  const handleMouseMove = useCallback(\n    (e) => {\n      if (!isDragging || !discoverWorksRef.current) return;\n      e.preventDefault();\n\n      const x = e.pageX - discoverWorksRef.current.offsetLeft;\n      const walk = (x - startX) * 2;\n\n      requestAnimationFrame(() => {\n        if (discoverWorksRef.current) {\n          discoverWorksRef.current.scrollLeft = scrollLeft - walk;\n        }\n      });\n    },\n    [isDragging, startX, scrollLeft]\n  );\n\n  // Handle touch events for mobile\n  const handleTouchStart = (e) => {\n    setIsDragging(true);\n    setStartX(e.touches[0].clientX);\n    setScrollLeft(discoverWorksRef.current.scrollLeft);\n    setShowScrollIndicator(false);\n    setLastTouchX(e.touches[0].clientX);\n    setLastTouchTime(Date.now());\n  };\n\n  const handleTouchMove = (e) => {\n    if (!isDragging || !discoverWorksRef.current) return;\n    e.preventDefault();\n    const touchX = e.touches[0].clientX;\n    const diff = startX - touchX;\n\n    // Calculate velocity\n    const now = Date.now();\n    const deltaTime = now - lastTouchTime;\n    const deltaX = touchX - lastTouchX;\n    setTouchVelocity(deltaX / deltaTime);\n\n    // Update last position and time\n    setLastTouchX(touchX);\n    setLastTouchTime(now);\n\n    // Update scroll position with improved sensitivity and smoothing\n    const sensitivity = 1.2;\n    const currentScroll = discoverWorksRef.current.scrollLeft;\n    const newPosition = currentScroll + diff * sensitivity;\n    setStartX(touchX);\n\n    // Add resistance at edges\n    if (newPosition < 0) {\n      discoverWorksRef.current.scrollLeft = Math.max(\n        newPosition * 0.5,\n        -containerWidth * 0.1\n      );\n    } else if (newPosition > contentWidth - containerWidth) {\n      const overscroll = newPosition - (contentWidth - containerWidth);\n      discoverWorksRef.current.scrollLeft =\n        contentWidth - containerWidth + overscroll * 0.5;\n    } else {\n      discoverWorksRef.current.scrollLeft = newPosition;\n    }\n  };\n\n  const handleTouchEnd = () => {\n    setIsDragging(false);\n\n    // Apply momentum scrolling\n    if (Math.abs(touchVelocity) > 0.5) {\n      const momentum = touchVelocity * 100;\n      const targetScroll = discoverWorksRef.current.scrollLeft + momentum;\n\n      // Animate to target with easing\n      const startScroll = discoverWorksRef.current.scrollLeft;\n      const startTime = Date.now();\n      const duration = 500;\n\n      const animateMomentum = () => {\n        const elapsed = Date.now() - startTime;\n        const progress = Math.min(elapsed / duration, 1);\n\n        // Easing function\n        const easeOut = (t) => 1 - Math.pow(1 - t, 3);\n        const currentProgress = easeOut(progress);\n\n        const newScroll =\n          startScroll + (targetScroll - startScroll) * currentProgress;\n\n        if (discoverWorksRef.current) {\n          // Add resistance at edges with smooth bounce\n          if (newScroll < 0) {\n            discoverWorksRef.current.scrollLeft = Math.max(newScroll * 0.5, 0);\n          } else if (newScroll > contentWidth - containerWidth) {\n            const overscroll = newScroll - (contentWidth - containerWidth);\n            discoverWorksRef.current.scrollLeft =\n              contentWidth - containerWidth + overscroll * 0.5;\n          } else {\n            discoverWorksRef.current.scrollLeft = newScroll;\n          }\n        }\n\n        if (progress < 1) {\n          requestAnimationFrame(animateMomentum);\n        } else {\n          // Resume auto-scroll after momentum ends and 1s delay\n          setTimeout(() => {\n            setShowScrollIndicator(true);\n          }, 1000);\n        }\n      };\n\n      requestAnimationFrame(animateMomentum);\n    } else {\n      // If no momentum, resume auto-scroll after 1s\n      setTimeout(() => {\n        setShowScrollIndicator(true);\n      }, 1000);\n    }\n  };\n\n  // Handle pause on hover handlers\n  const handleMouseEnter = () => {\n    setShowScrollIndicator(false);\n  };\n\n  const handleMouseLeave = () => {\n    if (!isDragging) {\n      setShowScrollIndicator(true);\n    }\n\n    // Reset manual interaction flag after timeout\n    if (!isDragging) {\n      if (userInteractionTimeout.current) {\n        clearTimeout(userInteractionTimeout.current);\n      }\n      userInteractionTimeout.current = setTimeout(() => {\n        setShowScrollIndicator(true);\n      }, 2000);\n    }\n  };\n\n  // Auto-scrolling functionality DISABLED - Users will manually drag/swipe\n\n  // Optimize resize handling\n  useEffect(() => {\n    if (!discoverWorksRef.current) return;\n\n    const calculateWidths = () => {\n      requestAnimationFrame(() => {\n        if (discoverWorksRef.current) {\n          setContainerWidth(discoverWorksRef.current.clientWidth);\n          setContentWidth(discoverWorksRef.current.scrollWidth);\n        }\n      });\n    };\n\n    const debouncedCalculateWidths = debounce(calculateWidths, 250);\n\n    calculateWidths();\n    window.addEventListener(\"resize\", debouncedCalculateWidths);\n\n    return () => {\n      window.removeEventListener(\"resize\", debouncedCalculateWidths);\n    };\n  }, []);\n\n  // Debounce function\n  const debounce = (func, wait) => {\n    let timeout;\n    return function executedFunction(...args) {\n      const later = () => {\n        clearTimeout(timeout);\n        func(...args);\n      };\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  };\n\n  // Update scroll position handler\n  const handleScroll = useCallback(() => {\n    if (!discoverWorksRef.current) return;\n\n    const scrollLeft = discoverWorksRef.current.scrollLeft;\n    const itemWidth = 300; // Width of each item\n    const currentItem = Math.round(scrollLeft / itemWidth) + 1;\n    setCurrentSlide(currentItem);\n  }, []);\n\n  // Add scroll event listener\n  useEffect(() => {\n    const scrollContainer = discoverWorksRef.current;\n    if (scrollContainer) {\n      scrollContainer.addEventListener(\"scroll\", handleScroll);\n      return () => scrollContainer.removeEventListener(\"scroll\", handleScroll);\n    }\n  }, [handleScroll]);\n\n  // Update navigation handlers\n  const handlePrevClick = () => {\n    if (!discoverWorksRef.current) return;\n    const itemWidth = 300;\n    discoverWorksRef.current.scrollLeft -= itemWidth;\n  };\n\n  const handleNextClick = () => {\n    if (!discoverWorksRef.current) return;\n    const itemWidth = 300;\n    discoverWorksRef.current.scrollLeft += itemWidth;\n  };\n\n  // Optimize image loading in discover works section\n  const renderDiscoverWorkItem = useCallback(\n    (artwork, index) => (\n      <div\n        key={artwork.id}\n        className=\"cp-discover-artwork-item\"\n        style={{\n          animationDelay: `${index * 0.1}s`,\n        }}\n        onClick={() => handleArtworkSelect(index)}\n      >\n        <div className=\"artwork-frame\">\n          <div className=\"artwork-image-container\">\n            <img\n              src={getImageUrl(artwork.image)}\n              alt={artwork.title}\n              className=\"artwork-image\"\n              loading={index < 4 ? \"eager\" : \"lazy\"}\n              decoding=\"async\"\n              width=\"100%\"\n              height=\"100%\"\n            />\n            <div className=\"artwork-info-overlay\">\n              <h3 className=\"artwork-title\">{artwork.title}</h3>\n              <p className=\"artwork-year\">{artwork.year}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    ),\n    [handleArtworkSelect]\n  );\n\n  // Optimize mouse movement handler with throttling to improve performance\n  const handleCategoryMouseMove = () => {\n    // Removed unused variables and parameter to fix linter errors\n  };\n\n  // Scroll to anchor section if state.scrollTo is present\n  useEffect(() => {\n    if (location.state && location.state.scrollTo) {\n      const el = document.getElementById(location.state.scrollTo);\n      if (el) {\n        setTimeout(() => {\n          el.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n        }, 200);\n      }\n    }\n  }, [location.state]);\n\n  // Handle discover section video loading\n  useEffect(() => {\n    if (discoverVideoRef.current) {\n      discoverVideoRef.current.addEventListener(\"loadeddata\", () => {\n        setIsDiscoverVideoLoaded(true);\n      });\n    }\n  }, []);\n\n  return (\n    <div className=\"collection-page\">\n      {/* Hero Section */}\n      <section className=\"cp-hero animate-section\">\n        <div\n          className=\"cp-hero-slides-container\"\n          style={{\n            display: \"flex\",\n            width: \"500%\",\n            height: \"100%\",\n            position: \"absolute\",\n            top: \"0\",\n            left: \"0\",\n            transform: `translateX(-${activeHeroSlide * 20}%)`,\n            transition: \"transform 0.8s cubic-bezier(0.4, 0, 0.2, 1)\",\n          }}\n        >\n          {collectionData.heroImages.map((image, index) => (\n            <div\n              key={index}\n              className={`cp-hero-slide ${\n                activeHeroSlide === index ? \"active\" : \"\"\n              }`}\n              style={{\n                width: \"20%\",\n                height: \"100%\",\n                flexShrink: 0,\n                position: \"relative\",\n                zIndex: index === activeHeroSlide ? 10 : 1,\n              }}\n            >\n              <div className=\"cp-hero-image-container\">\n                <img\n                  src={image.includes(\"http\") ? image : getImageUrl(image)}\n                  alt={`Hero slide ${index + 1}`}\n                  className=\"cp-hero-image\"\n                  loading={index === 0 ? \"eager\" : \"lazy\"}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n        <div className=\"cp-hero-overlay\"></div>\n\n        {/* Hero Slide Indicators */}\n        <div className=\"cp-hero-indicators\">\n          {collectionData.heroImages.map((_, index) => (\n            <button\n              key={index}\n              className={`cp-hero-indicator ${\n                activeHeroSlide === index ? \"active\" : \"\"\n              }`}\n              onClick={() => goToHeroSlide(index)}\n              aria-label={`Go to slide ${index + 1}`}\n            />\n          ))}\n        </div>\n\n        <div className=\"cp-hero-content\">\n          <h1 className=\"cp-hero-title\">\n            <span className=\"translated-text\">KHÁM PHÁ BỘ SƯU TẬP</span>\n          </h1>\n          <p className=\"cp-hero-subtitle\">\n            <span className=\"translated-text\">\n              Khám phá các kiệt tác từ khắp nơi, trải dài qua hàng nghìn năm\n              sáng tạo của con người\n            </span>\n          </p>\n        </div>\n\n        <div\n          className=\"diagonal-divider bottom enhanced\"\n          style={{ backgroundColor: \"transparent\" }}\n        ></div>\n      </section>\n\n      {/* Discover the Works Section */}\n      <section className=\"cp-discover-section animate-section\">\n        <div className=\"cp-discover-video-container\">\n          <video\n            ref={discoverVideoRef}\n            autoPlay\n            muted\n            loop\n            playsInline\n            className={`cp-discover-video ${\n              isDiscoverVideoLoaded ? \"loaded\" : \"\"\n            }`}\n          >\n            <source\n              src=\"https://res.cloudinary.com/dn0br7hj0/video/upload/v1748787810/about/Hero_Abouts_Resize.mp4\"\n              type=\"video/mp4\"\n            />\n          </video>\n          <div className=\"cp-discover-overlay\"></div>\n        </div>\n\n        <div className=\"cp-discover-content\">\n          <div className=\"cp-section-header\">\n            <h2 className=\"cp-section-title\">Khám Phá Tác Phẩm</h2>\n            <div className=\"cp-section-divider\"></div>\n          </div>\n\n          <div className=\"cp-discover-container\">\n            <div className=\"cp-discover-gradient-left\"></div>\n            <div className=\"cp-discover-gradient-right\"></div>\n\n            <button\n              className=\"cp-discover-nav cp-discover-prev\"\n              onClick={handlePrevClick}\n              aria-label=\"Previous artworks\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n              >\n                <path d=\"M15 18l-6-6 6-6\" />\n              </svg>\n            </button>\n\n            <button\n              className=\"cp-discover-nav cp-discover-next\"\n              onClick={handleNextClick}\n              aria-label=\"Next artworks\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n              >\n                <path d=\"M9 18l6-6-6-6\" />\n              </svg>\n            </button>\n\n            {/* <div className=\"cp-discover-counter\">\n              <span className=\"current\">{currentSlide}</span>\n              <span className=\"separator\">/</span>\n              <span className=\"total\">{collectionData.artworks.length}</span>\n            </div> */}\n\n            <div\n              className={`cp-discover-works cp-wavy-gallery ${\n                isDragging ? \"dragging\" : \"\"\n              }`}\n              ref={discoverWorksRef}\n              onMouseDown={handleMouseDown}\n              onMouseUp={handleMouseUp}\n              onMouseLeave={(e) => {\n                handleMouseUp();\n                handleMouseLeave(e);\n              }}\n              onMouseMove={handleMouseMove}\n              onTouchStart={handleTouchStart}\n              onTouchMove={handleTouchMove}\n              onTouchEnd={handleTouchEnd}\n              onMouseEnter={handleMouseEnter}\n            >\n              <div className=\"cp-discover-inner-container\">\n                {collectionData.artworks.map((artwork, index) =>\n                  renderDiscoverWorkItem(artwork, index)\n                )}\n              </div>\n            </div>\n\n            <div\n              className={`cp-scroll-indicator ${\n                !showScrollIndicator ? \"hidden\" : \"\"\n              }`}\n            >\n              <div className=\"cp-scroll-text\">Trượt để khám phá</div>\n              <div className=\"cp-scroll-arrows-indicator\">\n                <span></span>\n                <span></span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Complete Collection Section */}\n      <section className=\"cp-categories-section\" id=\"complete-collection\">\n        <div className=\"cp-categories-container\">\n          <div className=\"cp-categories-header\">\n            <h2 className=\"cp-categories-title\">Bộ Sưu Tập Hoàn Chỉnh</h2>\n            <p className=\"cp-categories-description\">\n              Khám phá bộ sưu tập đa dạng của chúng tôi được tổ chức theo từng\n              danh mục\n            </p>\n          </div>\n\n          <div\n            className=\"cp-categories-grid\"\n            ref={categoryGridRef}\n            onMouseMove={handleCategoryMouseMove}\n          >\n            {collectionData.categories.map((category) => (\n              <div\n                key={category.id}\n                className=\"cp-category-card\"\n                onClick={(e) => handleCategorySelect(category, e)}\n              >\n                <div className=\"cp-category-image-container\">\n                  <img\n                    src={getImageUrl(category.image)}\n                    alt={category.title}\n                    className=\"cp-category-image\"\n                    loading=\"lazy\"\n                  />\n                  <div className=\"cp-category-overlay\"></div>\n                </div>\n                <h3 className=\"cp-category-title\">{category.title}</h3>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Featured Artwork Section */}\n      <section className=\"cp-featured-artwork-section\" id=\"featured-artwork\">\n        <div className=\"cp-featured-container\">\n          <div className=\"cp-featured-left\">\n            <div className=\"cp-featured-image-container\">\n              <img\n                src={getImageUrl(\n                  collectionData.artworks[selectedArtwork].image\n                )}\n                alt={collectionData.artworks[selectedArtwork].title}\n                className=\"cp-featured-image\"\n              />\n              <div className=\"cp-artwork-tags\">\n                {collectionData.artworks[selectedArtwork].tags.map(\n                  (tag, index) => (\n                    <span key={index} className=\"cp-artwork-tag\">\n                      {tag}\n                    </span>\n                  )\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"cp-featured-right\">\n            <div className=\"cp-featured-details\">\n              <h2 className=\"cp-featured-title\">\n                {collectionData.artworks[selectedArtwork].title}\n              </h2>\n\n              <div className=\"cp-artwork-metadata\">\n                <div className=\"cp-metadata-item\">\n                  <span className=\"cp-metadata-label\">Tác giả</span>\n                  <span className=\"cp-metadata-value\">\n                    {collectionData.artworks[selectedArtwork].artist}\n                  </span>\n                </div>\n\n                <div className=\"cp-metadata-item\">\n                  <span className=\"cp-metadata-label\">Năm</span>\n                  <span className=\"cp-metadata-value\">\n                    {collectionData.artworks[selectedArtwork].year}\n                  </span>\n                </div>\n\n                {/* <div className=\"cp-metadata-item\">\n                  <span className=\"cp-metadata-label\">Địa điểm</span>\n                  <span className=\"cp-metadata-value\">\n                    {collectionData.artworks[selectedArtwork].location}\n                  </span>\n                </div> */}\n              </div>\n\n              <div className=\"cp-artwork-description\">\n                <p>{collectionData.artworks[selectedArtwork].description}</p>\n              </div>\n\n              <div className=\"cp-artwork-location\">\n                <div className=\"cp-location-icon\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"20\"\n                    height=\"20\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                  >\n                    <path d=\"M12 22s-8-4.5-8-11.8A8 8 0 0 1 12 2a8 8 0 0 1 8 8.2c0 7.3-8 11.8-8 11.8z\"></path>\n                    <circle cx=\"12\" cy=\"10\" r=\"3\"></circle>\n                  </svg>\n                </div>\n\n                <div className=\"cp-location-details\">\n                  <h4 className=\"cp-location-title\">Địa điểm</h4>\n                  <p className=\"cp-location-description\">\n                    {collectionData.artworks[selectedArtwork].location}\n                  </p>\n                </div>\n              </div>\n\n              <a className=\"cp-visit-button\" href=\"/visit\">\n                Lập lịch thăm viếng\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"18\"\n                  height=\"18\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                >\n                  <path d=\"M5 12h14M12 5l7 7-7 7\"></path>\n                </svg>\n              </a>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"cp-artwork-navigation\">\n          <button\n            className=\"cp-nav-button cp-prev-button\"\n            onClick={() => navigateArtwork(\"prev\")}\n            aria-label=\"Previous artwork\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            >\n              <path d=\"M19 12H5M12 19l-7-7 7-7\"></path>\n            </svg>\n          </button>\n\n          <div className=\"cp-nav-indicators\">\n            {collectionData.artworks.map((artwork, index) => (\n              <button\n                key={artwork.id}\n                className={`cp-nav-indicator ${\n                  selectedArtwork === index ? \"active\" : \"\"\n                }`}\n                onClick={() => setSelectedArtwork(index)}\n                aria-label={`View ${artwork.title}`}\n              ></button>\n            ))}\n          </div>\n\n          <button\n            className=\"cp-nav-button cp-next-button\"\n            onClick={() => navigateArtwork(\"next\")}\n            aria-label=\"Next artwork\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            >\n              <path d=\"M5 12h14M12 5l7 7-7 7\"></path>\n            </svg>\n          </button>\n        </div>\n      </section>\n\n      {/* Immersive Collection Highlights Section */}\n      <section className=\"cp-highlights-section\">\n        <div className=\"cp-highlights-container\">\n          <h2 className=\"cp-categories-title\">Điểm Nhấn Bộ Sưu Tập</h2>\n          <p className=\"cp-highlights-description\">\n            Khám phá những tác phẩm nghệ thuật tiêu biểu nhất của chúng tôi\n            thông qua video và hình ảnh chi tiết\n          </p>\n\n          <div className=\"cp-highlights-grid\">\n            {collectionData.highlights.map((highlight) => (\n              <div\n                key={highlight.id}\n                className={`cp-highlight-item ${highlight.type}-item`}\n                onClick={() =>\n                  highlight.type === \"video\"\n                    ? openVideoModal(highlight)\n                    : openArtworkDetail(highlight)\n                }\n                data-highlight-id={highlight.id}\n              >\n                <div className=\"cp-highlight-thumbnail\">\n                  <img\n                    src={getImageUrl(highlight.image)}\n                    alt={highlight.title}\n                    className=\"cp-highlight-img\"\n                    loading=\"lazy\"\n                  />\n\n                  {highlight.type === \"video\" && (\n                    <div className=\"cp-play-button\">\n                      <svg viewBox=\"0 0 100 100\" className=\"cp-play-icon\">\n                        <circle\n                          cx=\"50\"\n                          cy=\"50\"\n                          r=\"45\"\n                          className=\"cp-play-circle\"\n                        ></circle>\n                        <polygon\n                          points=\"40,30 70,50 40,70\"\n                          className=\"cp-play-triangle\"\n                        ></polygon>\n                      </svg>\n                      <span className=\"cp-video-indicator\">WATCH VIDEO</span>\n                    </div>\n                  )}\n\n                  <div className=\"cp-highlight-gradient\"></div>\n                  <span className=\"cp-highlight-category\">\n                    {highlight.category}\n                  </span>\n                </div>\n\n                <div className=\"cp-highlight-content\">\n                  <h3 className=\"cp-highlight-title\">{highlight.title}</h3>\n                  <p className=\"cp-highlight-type\">\n                    {highlight.type === \"video\" ? (\n                      <>\n                        <span className=\"cp-video-icon\">\n                          <svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n                            <path d=\"M8 5v14l11-7z\" fill=\"currentColor\"></path>\n                          </svg>\n                        </span>\n                        <span className=\"cp-video-tag\">VIDEO</span>\n                      </>\n                    ) : (\n                      <span className=\"cp-image-tag\">GALLERY</span>\n                    )}\n                  </p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Artwork Category Modal */}\n      {artworkModalOpen && modalContent && modalContent.type === \"category\" && (\n        <div className=\"cp-modal cp-category-modal\" onClick={closeModal}>\n          <div\n            className=\"cp-modal-content\"\n            onClick={(e) => e.stopPropagation()}\n          >\n            <button className=\"cp-modal-close\" onClick={closeModal}>\n              <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                <path\n                  d=\"M18 6L6 18M6 6l12 12\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                ></path>\n              </svg>\n            </button>\n\n            {/* Enhanced Category Hero Section */}\n            <div\n              className=\"cp-category-hero\"\n              style={{\n                backgroundImage: `url(${getImageUrl(\n                  modalContent.category.image\n                )})`,\n              }}\n            >\n              <div className=\"cp-category-hero-overlay\"></div>\n              <div className=\"cp-category-hero-content\">\n                <button className=\"cp-back-button\" onClick={closeModal}>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                  >\n                    <path d=\"M19 12H5M12 19l-7-7 7-7\"></path>\n                  </svg>\n                  <span>Back to Collections</span>\n                </button>\n\n                <h2 className=\"cp-category-hero-title\">\n                  {modalContent.category.title}\n                </h2>\n                <p className=\"cp-category-hero-description\">\n                  Discover masterpieces of{\" \"}\n                  {modalContent.category.title.toLowerCase()} from ancient to\n                  modern times\n                </p>\n              </div>\n            </div>\n\n            {/* Category Artworks Section */}\n            <div className=\"cp-category-artworks-section\">\n              <div className=\"cp-category-artworks-container\">\n                <div className=\"cp-category-artworks-header\">\n                  <h3 className=\"cp-category-artworks-title\">\n                    Browse Collection\n                  </h3>\n                  <p className=\"cp-category-artworks-count\">\n                    <span>{modalContent.artworks.length}</span> items\n                  </p>\n                </div>\n\n                <div className=\"cp-category-artworks-grid\">\n                  {modalContent.artworks.map((artwork, index) => (\n                    <div\n                      key={artwork.id}\n                      className=\"cp-category-artwork-card\"\n                      style={{ \"--index\": index }}\n                      onClick={() => openArtworkDetail(artwork)}\n                    >\n                      <div className=\"cp-category-artwork-image-container\">\n                        <img\n                          src={getImageUrl(artwork.image)}\n                          alt={artwork.title}\n                          loading=\"lazy\"\n                        />\n                        <div className=\"cp-category-artwork-overlay\"></div>\n                      </div>\n                      <div className=\"cp-category-artwork-info\">\n                        <h3 className=\"cp-category-artwork-title\">\n                          {artwork.title}\n                        </h3>\n                        <p className=\"cp-category-artwork-year\">\n                          {artwork.year}\n                        </p>\n                        <div className=\"cp-category-artwork-tags\">\n                          {artwork.tags.map((tag, index) => (\n                            <span\n                              key={index}\n                              className=\"cp-category-artwork-tag\"\n                            >\n                              {tag}\n                            </span>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Artwork Detail Modal */}\n      {artworkModalOpen && modalContent && modalContent.type !== \"category\" && (\n        <div className=\"cp-modal cp-artwork-modal\" onClick={closeModal}>\n          <div\n            className=\"cp-modal-content\"\n            onClick={(e) => e.stopPropagation()}\n          >\n            <button className=\"cp-modal-close\" onClick={closeModal}>\n              <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                <path\n                  d=\"M18 6L6 18M6 6l12 12\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                ></path>\n              </svg>\n            </button>\n\n            <div className=\"cp-artwork-modal-body\">\n              <div className=\"cp-artwork-modal-image-container\">\n                <img\n                  src={getImageUrl(\n                    collectionData.artworks[selectedArtwork].image\n                  )}\n                  alt={collectionData.artworks[selectedArtwork].title}\n                  className=\"cp-artwork-modal-image\"\n                />\n\n                <div className=\"cp-artwork-modal-actions\">\n                  <button\n                    className=\"cp-artwork-action-button cp-artwork-zoom\"\n                    title=\"Phóng to\"\n                  >\n                    <svg viewBox=\"0 0 24 24\" width=\"20\" height=\"20\">\n                      <path\n                        d=\"M15 3h6v6M9 21H3v-6M21 3l-7 7M3 21l7-7\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"2\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                      ></path>\n                    </svg>\n                  </button>\n\n                  <button\n                    className=\"cp-artwork-action-button\"\n                    onClick={() =>\n                      handleDownload(collectionData.artworks[selectedArtwork])\n                    }\n                    title=\"Tải xuống\"\n                  >\n                    <svg viewBox=\"0 0 24 24\" width=\"20\" height=\"20\">\n                      <path\n                        d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4M7 10l5 5 5-5M12 15V3\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"2\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                      ></path>\n                    </svg>\n                  </button>\n                </div>\n              </div>\n\n              <div className=\"cp-artwork-modal-details\">\n                <h3 className=\"cp-artwork-modal-title\">\n                  {collectionData.artworks[selectedArtwork].title}\n                </h3>\n\n                <div className=\"cp-artwork-modal-metadata\">\n                  <div className=\"cp-artwork-modal-artist\">\n                    <span className=\"cp-metadata-label\">Nghệ sĩ:</span>\n                    <span className=\"cp-metadata-value\">\n                      {collectionData.artworks[selectedArtwork].artist}\n                    </span>\n                  </div>\n\n                  <div className=\"cp-artwork-modal-year\">\n                    <span className=\"cp-metadata-label\">Năm:</span>\n                    <span className=\"cp-metadata-value\">\n                      {collectionData.artworks[selectedArtwork].year}\n                    </span>\n                  </div>\n\n                  <div className=\"cp-artwork-modal-location\">\n                    <span className=\"cp-metadata-label\">Vị trí:</span>\n                    <span className=\"cp-metadata-value\">\n                      {collectionData.artworks[selectedArtwork].location}\n                    </span>\n                  </div>\n                </div>\n\n                <div className=\"cp-artwork-modal-tags\">\n                  {collectionData.artworks[selectedArtwork].tags &&\n                    collectionData.artworks[selectedArtwork].tags.map(\n                      (tag, index) => (\n                        <span key={index} className=\"cp-artwork-modal-tag\">\n                          {tag}\n                        </span>\n                      )\n                    )}\n                </div>\n\n                <div className=\"cp-artwork-modal-description\">\n                  <p>{collectionData.artworks[selectedArtwork].description}</p>\n                </div>\n\n                <div className=\"cp-artwork-modal-visit\">\n                  <div className=\"cp-location-icon\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"22\"\n                      height=\"22\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth=\"2\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    >\n                      <path d=\"M12 22s-8-4.5-8-11.8A8 8 0 0 1 12 2a8 8 0 0 1 8 8.2c0 7.3-8 11.8-8 11.8z\"></path>\n                      <circle cx=\"12\" cy=\"10\" r=\"3\"></circle>\n                    </svg>\n                  </div>\n\n                  <div className=\"cp-artwork-modal-visit-info\">\n                    <h4 className=\"cp-visit-title\">Vị trí trưng bày</h4>\n                    <p className=\"cp-visit-description\">\n                      {collectionData.artworks[selectedArtwork].location}\n                    </p>\n                  </div>\n                </div>\n\n                <a href=\"/visit\" className=\"cp-artwork-modal-cta\">\n                  Lên kế hoạch tham quan\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"18\"\n                    height=\"18\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                  >\n                    <path d=\"M5 12h14M12 5l7 7-7 7\"></path>\n                  </svg>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Enhanced Video Modal with YouTube embedding */}\n      {videoModalOpen && modalContent && (\n        <div\n          className={`cp-modal cp-video-modal ${\n            videoModalClosing ? \"closing\" : \"\"\n          }`}\n          onClick={handleModalBackdropClick}\n        >\n          <div\n            className=\"cp-modal-content cp-video-modal-content\"\n            onClick={(e) => e.stopPropagation()}\n          >\n            <button className=\"cp-modal-close\" onClick={closeModal}>\n              <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                <path\n                  d=\"M18 6L6 18M6 6l12 12\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                ></path>\n              </svg>\n            </button>\n\n            {/* Artistic Decorative Elements */}\n            <div className=\"cp-video-decorative-element top-left\"></div>\n            <div className=\"cp-video-decorative-element bottom-right\"></div>\n            <div className=\"cp-video-decorative-element center\"></div>\n\n            <div className=\"cp-modal-video\">\n              <div className=\"cp-video-container\">\n                {/* Loading indicator */}\n                <div className=\"cp-video-loading\">\n                  <div className=\"cp-video-loading-circle\"></div>\n                </div>\n\n                {/* YouTube iframe */}\n                <iframe\n                  className=\"cp-youtube-frame\"\n                  src={`https://www.youtube.com/embed/${modalContent.youtubeId}?autoplay=1&rel=0&modestbranding=1&showinfo=0`}\n                  title={modalContent.title}\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                  allowFullScreen\n                ></iframe>\n              </div>\n\n              <div className=\"cp-modal-video-details\">\n                <div className=\"cp-modal-video-header\">\n                  <h3 className=\"cp-modal-video-title\">{modalContent.title}</h3>\n                  <span className=\"cp-modal-video-category\">\n                    {modalContent.category}\n                  </span>\n                </div>\n                <p className=\"cp-modal-video-description\">\n                  {modalContent.description}\n                </p>\n\n                {/* Related Videos Section */}\n                <div className=\"cp-video-related\">\n                  <h4 className=\"cp-video-related-title\">Video Liên Quan</h4>\n                  <div className=\"cp-video-related-items\">\n                    {collectionData.highlights\n                      .filter(\n                        (item) =>\n                          item.id !== modalContent.id && item.type === \"video\"\n                      )\n                      .slice(0, 5)\n                      .map((item) => (\n                        <div\n                          key={item.id}\n                          className=\"cp-video-related-item\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            setModalContent(item);\n                          }}\n                        >\n                          <img src={getImageUrl(item.image)} alt={item.title} />\n                          <p className=\"cp-video-related-item-title\">\n                            {item.title}\n                          </p>\n                        </div>\n                      ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CollectionPage;\n",
      "start": 1751851849449,
      "end": 1751851850632,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1751851850632,
      "end": 1751851850632,
      "order": "pre"
    },
    {
      "name": "vite:esbuild",
      "result": "import { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { getImageUrl } from \"../../utils/cloudinary\";\nimport \"./CollectionPage.css\";\nconst collectionData = {\n  heroImages: [\n    \"Cồng Chiên.webp\",\n    \"Lồng Đa Đa.webp\",\n    \"36 (2).webp\",\n    \"phunu_hero.webp\",\n    \"Chiếc Gùi.webp\",\n    \"Nồi đất.webp\",\n    \"Thông 2.webp\",\n    \"Hoa Ban Trắng.webp\",\n    \"luutrunghethuat.jpg\",\n    \"Lửa.webp\",\n    \"Gió.webp\",\n    \"Đông.webp\"\n  ],\n  artworks: [\n    {\n      id: \"dungcu-1\",\n      title: \"Dụng cụ âm nhạc Tây Nguyên\",\n      artist: \"Cồng chiêng\",\n      year: \"2024\",\n      image: \"Cồng Chiên.webp\",\n      description: \"Musée Du Pin trưng bày các nhạc cụ truyền thống bằng đồng của các dân tộc Tây Nguyên, tiêu biểu là cồng chiêng – biểu tượng văn hóa và tín ngưỡng thiêng liêng. Âm thanh vang vọng của cồng chiêng thể hiện sự kết nối sâu sắc giữa con người và thế giới tâm linh.\",\n      location: \"Khu trưng bày nhạc cụ\",\n      tags: [\"Nhạc cụ\", \"Văn hóa\", \"Tây Nguyên\"]\n    },\n    {\n      id: \"channuoi-1\",\n      title: \"Hơi thở đại ngàn\",\n      artist: \"Lồng đa đa\",\n      year: \"2024\",\n      image: \"Lồng Đa Đa.webp\",\n      description: \"Lồng đa đa của người K'ho hiện đang được trưng bày tại Musée Du Pin như một biểu tượng mộc mạc nhưng đầy tính văn hóa của đời sống dân tộc Tây Nguyên. Được đan thủ công từ tre nứa, chiếc lồng không chỉ phục vụ mục đích chăn nuôi mà còn phản ánh sự khéo léo, tỉ mỉ và mối liên kết bền chặt giữa con người với thiên nhiên núi rừng.\",\n      location: \"Khu trưng bày đời sống\",\n      tags: [\"Đời sống\", \"Văn hóa\", \"K'ho\"]\n    },\n    {\n      id: \"dieukhac-1\",\n      title: \"Hình hài bản sắc\",\n      artist: \"Tượng phụ nữ\",\n      year: \"2024\",\n      image: \"Điêu Khắc.webp\",\n      description: \"Tác phẩm điêu khắc người dân tộc K'ho đang được trưng bày tại Musée Du Pin thể hiện hình ảnh phụ nữ Tây Nguyên trong dáng đứng trang nghiêm, tay cầm chiếc chiêng nhỏ – biểu tượng của âm nhạc và tín ngưỡng bản địa.\",\n      location: \"Khu trưng bày điêu khắc\",\n      tags: [\"Điêu khắc\", \"Văn hóa\", \"K'ho\"]\n    },\n    {\n      id: \"lehoi-1\",\n      title: \"Những mùa no ấm\",\n      artist: \"Ché Ghò Sành\",\n      year: \"2024\",\n      image: \"Chiếc Gùi.webp\",\n      description: \"Ché Ghò Sành là một loại ché cổ nổi tiếng của Tây Nguyên, hiện đang được trưng bày tại Musée Du Pin, đây là biểu tượng của sự giàu có, quyền uy và tín ngưỡng tâm linh trong đời sống người bản địa.\",\n      location: \"Khu trưng bày lễ hội\",\n      tags: [\"Lễ hội\", \"Văn hóa\", \"K'ho\"]\n    },\n    {\n      id: \"sinhoat-1\",\n      title: \"Hơi ấm buôn làng\",\n      artist: \"Nồi đất\",\n      year: \"2024\",\n      image: \"Nồi Đất.webp\",\n      description: \"Muée Du Pin trưng bày nồi đất của người K'ho, đây là biểu tượng của sự phát triển và tiến bộ của dân tộc Tây Nguyên.\",\n      location: \"Khu trưng bày đời sống\",\n      tags: [\"Đời sống\", \"Văn hóa\", \"K'ho\"]\n    },\n    {\n      id: \"sinhoat-2\",\n      title: \"Lửa thiêng đêm núi\",\n      artist: \"36 (2).webp\",\n      year: \"2024\",\n      image: \"46.webp\",\n      description: \"Được khoét rỗng từ quả hồ lô khô, vật phẩm này thường được dùng để đựng nước, rượu cần hoặc làm nhạc cụ truyền thống\",\n      location: \"Khu trưng bày đời sống\",\n      tags: [\"Đời sống\", \"Văn hóa\", \"K'ho\"]\n    },\n    {\n      id: \"phuctang-1\",\n      title: \"Phức Tầng\",\n      artist: \"Thông 2\",\n      year: \"2025\",\n      image: \"Thông 2.webp\",\n      description: \"Được Musée Du Pin bắt trọn khoảng khắc các hình ảnh thiên nhiên đậm sắc dân tộc K'ho, tạo nên bức tranh đẹp về đất nước Tây Nguyên.\",\n      location: \"Khu trưng bày đời sống\",\n      tags: [\"Đời sống\", \"Văn hóa\", \"Thiên nhiên\"]\n    },\n    {\n      id: \"vatlieu-1\",\n      title: \"Vật liệu\",\n      artist: \"Chất liệu K'ho\",\n      year: \"2024\",\n      image: \"Hoa Ban Trắng.webp\",\n      description: \"Tại Musée Du Pin, mỗi chất liệu được chọn lựa kỹ lưỡng nhằm tôn vinh vẻ đẹp tự nhiên và bản sắc văn hóa Tây Nguyên. Các vật liệu truyền thống như gỗ, đá, đất và sợi tự nhiên không chỉ là phương tiện sáng tạo mà còn là cầu nối giữa nghệ thuật và đời sống bản địa.\",\n      location: \"Khu trưng bày vật liệu\",\n      tags: [\"Vật liệu\", \"Văn hóa\", \"K'ho\"]\n    },\n    {\n      id: \"redpine-1\",\n      title: \"Redpine Art Studio\",\n      artist: \"Musée Du Pin\",\n      year: \"2024\",\n      image: \"luutrunghethuat.jpg\",\n      description: \"Redpine Art Studio là không gian lưu trú nghệ thuật độc đáo giữa rừng thông, nơi bạn có thể trải nghiệm nghệ thuật và thiên nhiên Đà Lạt.\",\n      location: \"Khu lưu trú nghệ thuật\",\n      tags: [\"Lưu trú\", \"Nghệ thuật\", \"Đà Lạt\"]\n    },\n    {\n      id: \"memory-1\",\n      title: \"Bề mặt ký ức\",\n      artist: \"Tham quan\",\n      year: \"2024\",\n      image: \"Lửa.webp\",\n      description: \"Bề mặt ký ức.\",\n      location: \"Khu trưng bày\",\n      tags: [\"Tham quan\", \"Nghệ thuật\", \"Đà Lạt\"]\n    },\n    {\n      id: \"nature-1\",\n      title: \"Thiên nhiên Đà Lạt\",\n      artist: \"Tham quan\",\n      year: \"2024\",\n      image: \"Gió.webp\",\n      description: \"Thiên nhiên Đà Lạt.\",\n      location: \"Khu trưng bày\",\n      tags: [\"Tham quan\", \"Nghệ thuật\", \"Đà Lạt\"]\n    },\n    {\n      id: \"color-1\",\n      title: \"Sắc màu Tây nguyên\",\n      artist: \"Tham quan\",\n      year: \"2024\",\n      image: \"Đông.webp\",\n      description: \"Sắc màu Tây nguyên.\",\n      location: \"Khu trưng bày\",\n      tags: [\"Tham quan\", \"Nghệ thuật\", \"Đà Lạt\"]\n    }\n  ],\n  categories: [\n    { id: 1, title: \"Dụng cụ âm nhạc Tây Nguyên\", image: \"Cồng Chiên.webp\" },\n    { id: 2, title: \"Hơi thở đại ngàn\", image: \"Lồng Đa Đa.webp\" },\n    { id: 3, title: \"Lửa thiêng đêm núi\", image: \"36 (2).webp\" },\n    { id: 4, title: \"Hình hài bản sắc\", image: \"phunu_hero.webp\" },\n    {\n      id: 5,\n      title: \"Những mùa no ấm\",\n      image: \"Chiếc Gùi.webp\"\n    },\n    { id: 6, title: \"Hơi ấm buôn làng\", image: \"Nồi Đất.webp\" },\n    { id: 7, title: \"Phức Tầng\", image: \"Thông 2.webp\" },\n    { id: 8, title: \"Vật liệu\", image: \"Hoa Ban Trắng.webp\" },\n    { id: 9, title: \"Redpine Art Studio\", image: \"luutrunghethuat.jpg\" },\n    {\n      id: 10,\n      title: \"Bề mặt ký ức\",\n      image: \"Lửa.webp\"\n    },\n    {\n      id: 11,\n      title: \"Thiên nhiên Đà Lạt\",\n      image: \"Gió.webp\"\n    },\n    {\n      id: 12,\n      title: \"Sắc màu Tây nguyên\",\n      image: \"Đông.webp\"\n    }\n  ],\n  highlights: [\n    {\n      id: 1,\n      title: \"Nhạc cụ truyền thống\",\n      category: \"Nhạc cụ\",\n      image: \"Cồng Chiên.webp\",\n      type: \"video\",\n      youtubeId: \"dQw4w9WgXcQ\",\n      description: \"Khám phá âm nhạc truyền thống của người Tây Nguyên qua các nhạc cụ độc đáo.\"\n    },\n    {\n      id: 2,\n      title: \"Hình hài bản sắc\",\n      category: \"Điêu khắc\",\n      image: \"Điêu Khắc.webp\",\n      type: \"image\",\n      artwork: 1,\n      description: \"Nghệ thuật điêu khắc truyền thống của người K'ho qua các tác phẩm tiêu biểu.\"\n    },\n    {\n      id: 3,\n      title: \"Hơi ấm buôn làng\",\n      category: \"Đời sống\",\n      image: \"46.webp\",\n      type: \"video\",\n      youtubeId: \"dQw4w9WgXcQ\",\n      description: \"Tìm hiểu về cuộc sống hàng ngày của người K'ho qua các vật dụng sinh hoạt.\"\n    },\n    {\n      id: 4,\n      title: \"Lửa thiêng đêm núi\",\n      category: \"Lễ hội\",\n      image: \"36 (2).webp\",\n      type: \"image\",\n      artwork: 4,\n      description: \"Khám phá các lễ hội truyền thống và ý nghĩa văn hóa của người K'ho.\"\n    },\n    {\n      id: 5,\n      title: \"Hơi thở đại ngàn\",\n      category: \"Chăn nuôi\",\n      image: \"Lồng Đa Đa.webp\",\n      type: \"video\",\n      youtubeId: \"dQw4w9WgXcQ\",\n      description: \"Tìm hiểu về hoạt động chăn nuôi và các công cụ truyền thống của người K'ho.\"\n    },\n    {\n      id: 6,\n      title: \"Những mùa no ấm\",\n      category: \"Sinh hoạt\",\n      image: \"Chiếc Gùi.webp\",\n      type: \"image\",\n      artwork: 2,\n      description: \"Khám phá các hoạt động sinh hoạt văn hóa đặc trưng của người K'ho.\"\n    },\n    {\n      id: 7,\n      title: \"Vật liệu\",\n      category: \"Vật liệu\",\n      image: \"Hoa Ban Trắng.webp\",\n      type: \"image\",\n      artwork: 1,\n      description: \"Khám phá các chất liệu truyền thống và ý nghĩa văn hóa của người K'ho.\"\n    }\n  ]\n};\nconst CollectionPage = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [activeHeroSlide, setActiveHeroSlide] = useState(0);\n  const [selectedArtwork, setSelectedArtwork] = useState(0);\n  const discoverWorksRef = useRef(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [startX, setStartX] = useState(0);\n  const [scrollLeft, setScrollLeft] = useState(0);\n  const [artworkModalOpen, setArtworkModalOpen] = useState(false);\n  const [videoModalOpen, setVideoModalOpen] = useState(false);\n  const [videoModalClosing, setVideoModalClosing] = useState(false);\n  const [modalContent, setModalContent] = useState(null);\n  const [containerWidth, setContainerWidth] = useState(0);\n  const [contentWidth, setContentWidth] = useState(0);\n  const [showScrollIndicator, setShowScrollIndicator] = useState(true);\n  const userInteractionTimeout = useRef(null);\n  const categoryGridRef = useRef(null);\n  const [lastTouchX, setLastTouchX] = useState(0);\n  const [lastTouchTime, setLastTouchTime] = useState(0);\n  const [touchVelocity, setTouchVelocity] = useState(0);\n  const [isDiscoverVideoLoaded, setIsDiscoverVideoLoaded] = useState(false);\n  const discoverVideoRef = useRef(null);\n  const [currentSlide, setCurrentSlide] = useState(1);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setActiveHeroSlide(\n        (prev) => (prev + 1) % collectionData.heroImages.length\n      );\n    }, 5e3);\n    return () => clearInterval(interval);\n  }, []);\n  const goToHeroSlide = (index) => {\n    setActiveHeroSlide(index);\n  };\n  useEffect(() => {\n    const animateSections = () => {\n      const sections = document.querySelectorAll(\".animate-section\");\n      sections.forEach((section) => {\n        const sectionTop = section.getBoundingClientRect().top;\n        const windowHeight = window.innerHeight;\n        if (sectionTop < windowHeight * 0.75) {\n          section.classList.add(\"visible\");\n        }\n      });\n    };\n    const debounce2 = (func, wait = 10, immediate = true) => {\n      let timeout;\n      return function() {\n        const context = this, args = arguments;\n        const later = function() {\n          timeout = null;\n          if (!immediate) func.apply(context, args);\n        };\n        const callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n      };\n    };\n    animateSections();\n    const debouncedAnimateSections = debounce2(animateSections, 15);\n    window.addEventListener(\"scroll\", debouncedAnimateSections, {\n      passive: true\n    });\n    return () => {\n      window.removeEventListener(\"scroll\", debouncedAnimateSections);\n    };\n  }, []);\n  useEffect(() => {\n    const isMobile = window.innerWidth <= 768;\n    const observerOptions = {\n      threshold: isMobile ? 0.1 : 0.15,\n      // Lower threshold on mobile for earlier loading\n      rootMargin: isMobile ? \"100px\" : \"0px\"\n      // Bigger margin on mobile\n    };\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          entry.target.classList.add(\"visible\");\n          observer.unobserve(entry.target);\n        }\n      });\n    }, observerOptions);\n    document.querySelectorAll(\".animate-section:not(.visible)\").forEach((section) => {\n      observer.observe(section);\n    });\n    return () => {\n      observer.disconnect();\n    };\n  }, []);\n  const handleArtworkSelect = (index) => {\n    setSelectedArtwork(index);\n    document.getElementById(\"featured-artwork\").scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  const navigateArtwork = (direction) => {\n    if (direction === \"prev\") {\n      setSelectedArtwork(\n        (prev) => (prev - 1 + collectionData.artworks.length) % collectionData.artworks.length\n      );\n    } else {\n      setSelectedArtwork((prev) => (prev + 1) % collectionData.artworks.length);\n    }\n  };\n  const handleCategorySelect = (category, event) => {\n    const card = event.currentTarget;\n    card.style.transition = \"transform 0.5s cubic-bezier(0.19, 1, 0.22, 1)\";\n    card.style.transform = \"scale(1.05) translateY(-15px)\";\n    card.style.opacity = \"0.8\";\n    setTimeout(() => {\n      navigate(`/collection/${category.id}`);\n    }, 400);\n  };\n  const openArtworkDetail = (highlight) => {\n    const artworkIndex = collectionData.artworks.findIndex(\n      (artwork) => artwork.id === highlight.artwork\n    );\n    if (artworkIndex !== -1) {\n      setSelectedArtwork(artworkIndex);\n      document.getElementById(\"featured-artwork\").scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  };\n  const openVideoModal = (highlight) => {\n    const highlightElement = document.querySelector(\n      `[data-highlight-id=\"${highlight.id}\"]`\n    );\n    if (highlightElement) {\n      const playButton = highlightElement.querySelector(\".cp-play-button\");\n      let ripple = null;\n      if (playButton) {\n        playButton.style.transform = \"translate(-50%, -50%) scale(1.2)\";\n        playButton.style.opacity = \"1\";\n        ripple = document.createElement(\"div\");\n        ripple.className = \"cp-video-ripple\";\n        ripple.style.position = \"absolute\";\n        ripple.style.top = \"50%\";\n        ripple.style.left = \"50%\";\n        ripple.style.transform = \"translate(-50%, -50%)\";\n        ripple.style.width = \"80px\";\n        ripple.style.height = \"80px\";\n        ripple.style.borderRadius = \"50%\";\n        ripple.style.background = \"rgba(255, 255, 255, 0.2)\";\n        ripple.style.zIndex = \"10\";\n        ripple.style.animation = \"ripple-out 0.6s cubic-bezier(0.19, 1, 0.22, 1) forwards\";\n        highlightElement.appendChild(ripple);\n      }\n      highlightElement.classList.add(\"video-opening\");\n      const img = highlightElement.querySelector(\".cp-highlight-img\");\n      if (img) {\n        img.style.transform = \"scale(1.15)\";\n      }\n      const gradient = highlightElement.querySelector(\".cp-highlight-gradient\");\n      if (gradient) {\n        gradient.style.opacity = \"0.9\";\n      }\n      setTimeout(() => {\n        if (ripple) ripple.remove();\n        highlightElement.classList.remove(\"video-opening\");\n        if (img) img.style.transform = \"\";\n        if (gradient) gradient.style.opacity = \"\";\n        if (playButton) {\n          playButton.style.transform = \"\";\n          playButton.style.opacity = \"\";\n        }\n        setModalContent(highlight);\n        setVideoModalOpen(true);\n        document.body.style.overflow = \"hidden\";\n      }, 600);\n    } else {\n      setModalContent(highlight);\n      setVideoModalOpen(true);\n      document.body.style.overflow = \"hidden\";\n    }\n  };\n  const closeModal = () => {\n    if (videoModalOpen) {\n      setVideoModalClosing(true);\n      setTimeout(() => {\n        setVideoModalOpen(false);\n        setVideoModalClosing(false);\n        setModalContent(null);\n        document.body.style.overflow = \"auto\";\n      }, 300);\n    } else {\n      setArtworkModalOpen(false);\n      document.body.style.overflow = \"auto\";\n    }\n  };\n  const handleModalBackdropClick = (e) => {\n    if (e.target.classList.contains(\"cp-modal\")) {\n      closeModal();\n    }\n  };\n  const handleDownload = (artwork) => {\n    const link = document.createElement(\"a\");\n    link.href = getImageUrl(artwork.image);\n    link.download = `${artwork.title.replace(/\\s+/g, \"-\").toLowerCase()}.jpg`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  const handleMouseDown = (e) => {\n    setIsDragging(true);\n    setStartX(e.pageX - discoverWorksRef.current.offsetLeft);\n    setScrollLeft(discoverWorksRef.current.scrollLeft);\n    setShowScrollIndicator(false);\n  };\n  const handleMouseUp = () => {\n    setIsDragging(false);\n    if (userInteractionTimeout.current) {\n      clearTimeout(userInteractionTimeout.current);\n    }\n    userInteractionTimeout.current = setTimeout(() => {\n      setShowScrollIndicator(true);\n    }, 2e3);\n  };\n  const handleMouseMove = useCallback(\n    (e) => {\n      if (!isDragging || !discoverWorksRef.current) return;\n      e.preventDefault();\n      const x = e.pageX - discoverWorksRef.current.offsetLeft;\n      const walk = (x - startX) * 2;\n      requestAnimationFrame(() => {\n        if (discoverWorksRef.current) {\n          discoverWorksRef.current.scrollLeft = scrollLeft - walk;\n        }\n      });\n    },\n    [isDragging, startX, scrollLeft]\n  );\n  const handleTouchStart = (e) => {\n    setIsDragging(true);\n    setStartX(e.touches[0].clientX);\n    setScrollLeft(discoverWorksRef.current.scrollLeft);\n    setShowScrollIndicator(false);\n    setLastTouchX(e.touches[0].clientX);\n    setLastTouchTime(Date.now());\n  };\n  const handleTouchMove = (e) => {\n    if (!isDragging || !discoverWorksRef.current) return;\n    e.preventDefault();\n    const touchX = e.touches[0].clientX;\n    const diff = startX - touchX;\n    const now = Date.now();\n    const deltaTime = now - lastTouchTime;\n    const deltaX = touchX - lastTouchX;\n    setTouchVelocity(deltaX / deltaTime);\n    setLastTouchX(touchX);\n    setLastTouchTime(now);\n    const sensitivity = 1.2;\n    const currentScroll = discoverWorksRef.current.scrollLeft;\n    const newPosition = currentScroll + diff * sensitivity;\n    setStartX(touchX);\n    if (newPosition < 0) {\n      discoverWorksRef.current.scrollLeft = Math.max(\n        newPosition * 0.5,\n        -containerWidth * 0.1\n      );\n    } else if (newPosition > contentWidth - containerWidth) {\n      const overscroll = newPosition - (contentWidth - containerWidth);\n      discoverWorksRef.current.scrollLeft = contentWidth - containerWidth + overscroll * 0.5;\n    } else {\n      discoverWorksRef.current.scrollLeft = newPosition;\n    }\n  };\n  const handleTouchEnd = () => {\n    setIsDragging(false);\n    if (Math.abs(touchVelocity) > 0.5) {\n      const momentum = touchVelocity * 100;\n      const targetScroll = discoverWorksRef.current.scrollLeft + momentum;\n      const startScroll = discoverWorksRef.current.scrollLeft;\n      const startTime = Date.now();\n      const duration = 500;\n      const animateMomentum = () => {\n        const elapsed = Date.now() - startTime;\n        const progress = Math.min(elapsed / duration, 1);\n        const easeOut = (t) => 1 - Math.pow(1 - t, 3);\n        const currentProgress = easeOut(progress);\n        const newScroll = startScroll + (targetScroll - startScroll) * currentProgress;\n        if (discoverWorksRef.current) {\n          if (newScroll < 0) {\n            discoverWorksRef.current.scrollLeft = Math.max(newScroll * 0.5, 0);\n          } else if (newScroll > contentWidth - containerWidth) {\n            const overscroll = newScroll - (contentWidth - containerWidth);\n            discoverWorksRef.current.scrollLeft = contentWidth - containerWidth + overscroll * 0.5;\n          } else {\n            discoverWorksRef.current.scrollLeft = newScroll;\n          }\n        }\n        if (progress < 1) {\n          requestAnimationFrame(animateMomentum);\n        } else {\n          setTimeout(() => {\n            setShowScrollIndicator(true);\n          }, 1e3);\n        }\n      };\n      requestAnimationFrame(animateMomentum);\n    } else {\n      setTimeout(() => {\n        setShowScrollIndicator(true);\n      }, 1e3);\n    }\n  };\n  const handleMouseEnter = () => {\n    setShowScrollIndicator(false);\n  };\n  const handleMouseLeave = () => {\n    if (!isDragging) {\n      setShowScrollIndicator(true);\n    }\n    if (!isDragging) {\n      if (userInteractionTimeout.current) {\n        clearTimeout(userInteractionTimeout.current);\n      }\n      userInteractionTimeout.current = setTimeout(() => {\n        setShowScrollIndicator(true);\n      }, 2e3);\n    }\n  };\n  useEffect(() => {\n    if (!discoverWorksRef.current) return;\n    const calculateWidths = () => {\n      requestAnimationFrame(() => {\n        if (discoverWorksRef.current) {\n          setContainerWidth(discoverWorksRef.current.clientWidth);\n          setContentWidth(discoverWorksRef.current.scrollWidth);\n        }\n      });\n    };\n    const debouncedCalculateWidths = debounce(calculateWidths, 250);\n    calculateWidths();\n    window.addEventListener(\"resize\", debouncedCalculateWidths);\n    return () => {\n      window.removeEventListener(\"resize\", debouncedCalculateWidths);\n    };\n  }, []);\n  const debounce = (func, wait) => {\n    let timeout;\n    return function executedFunction(...args) {\n      const later = () => {\n        clearTimeout(timeout);\n        func(...args);\n      };\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  };\n  const handleScroll = useCallback(() => {\n    if (!discoverWorksRef.current) return;\n    const scrollLeft2 = discoverWorksRef.current.scrollLeft;\n    const itemWidth = 300;\n    const currentItem = Math.round(scrollLeft2 / itemWidth) + 1;\n    setCurrentSlide(currentItem);\n  }, []);\n  useEffect(() => {\n    const scrollContainer = discoverWorksRef.current;\n    if (scrollContainer) {\n      scrollContainer.addEventListener(\"scroll\", handleScroll);\n      return () => scrollContainer.removeEventListener(\"scroll\", handleScroll);\n    }\n  }, [handleScroll]);\n  const handlePrevClick = () => {\n    if (!discoverWorksRef.current) return;\n    const itemWidth = 300;\n    discoverWorksRef.current.scrollLeft -= itemWidth;\n  };\n  const handleNextClick = () => {\n    if (!discoverWorksRef.current) return;\n    const itemWidth = 300;\n    discoverWorksRef.current.scrollLeft += itemWidth;\n  };\n  const renderDiscoverWorkItem = useCallback(\n    (artwork, index) => /* @__PURE__ */ jsx(\n      \"div\",\n      {\n        className: \"cp-discover-artwork-item\",\n        style: {\n          animationDelay: `${index * 0.1}s`\n        },\n        onClick: () => handleArtworkSelect(index),\n        children: /* @__PURE__ */ jsx(\"div\", { className: \"artwork-frame\", children: /* @__PURE__ */ jsxs(\"div\", { className: \"artwork-image-container\", children: [\n          /* @__PURE__ */ jsx(\n            \"img\",\n            {\n              src: getImageUrl(artwork.image),\n              alt: artwork.title,\n              className: \"artwork-image\",\n              loading: index < 4 ? \"eager\" : \"lazy\",\n              decoding: \"async\",\n              width: \"100%\",\n              height: \"100%\"\n            }\n          ),\n          /* @__PURE__ */ jsxs(\"div\", { className: \"artwork-info-overlay\", children: [\n            /* @__PURE__ */ jsx(\"h3\", { className: \"artwork-title\", children: artwork.title }),\n            /* @__PURE__ */ jsx(\"p\", { className: \"artwork-year\", children: artwork.year })\n          ] })\n        ] }) })\n      },\n      artwork.id\n    ),\n    [handleArtworkSelect]\n  );\n  const handleCategoryMouseMove = () => {\n  };\n  useEffect(() => {\n    if (location.state && location.state.scrollTo) {\n      const el = document.getElementById(location.state.scrollTo);\n      if (el) {\n        setTimeout(() => {\n          el.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n        }, 200);\n      }\n    }\n  }, [location.state]);\n  useEffect(() => {\n    if (discoverVideoRef.current) {\n      discoverVideoRef.current.addEventListener(\"loadeddata\", () => {\n        setIsDiscoverVideoLoaded(true);\n      });\n    }\n  }, []);\n  return /* @__PURE__ */ jsxs(\"div\", { className: \"collection-page\", children: [\n    /* @__PURE__ */ jsxs(\"section\", { className: \"cp-hero animate-section\", children: [\n      /* @__PURE__ */ jsx(\n        \"div\",\n        {\n          className: \"cp-hero-slides-container\",\n          style: {\n            display: \"flex\",\n            width: \"500%\",\n            height: \"100%\",\n            position: \"absolute\",\n            top: \"0\",\n            left: \"0\",\n            transform: `translateX(-${activeHeroSlide * 20}%)`,\n            transition: \"transform 0.8s cubic-bezier(0.4, 0, 0.2, 1)\"\n          },\n          children: collectionData.heroImages.map((image, index) => /* @__PURE__ */ jsx(\n            \"div\",\n            {\n              className: `cp-hero-slide ${activeHeroSlide === index ? \"active\" : \"\"}`,\n              style: {\n                width: \"20%\",\n                height: \"100%\",\n                flexShrink: 0,\n                position: \"relative\",\n                zIndex: index === activeHeroSlide ? 10 : 1\n              },\n              children: /* @__PURE__ */ jsx(\"div\", { className: \"cp-hero-image-container\", children: /* @__PURE__ */ jsx(\n                \"img\",\n                {\n                  src: image.includes(\"http\") ? image : getImageUrl(image),\n                  alt: `Hero slide ${index + 1}`,\n                  className: \"cp-hero-image\",\n                  loading: index === 0 ? \"eager\" : \"lazy\"\n                }\n              ) })\n            },\n            index\n          ))\n        }\n      ),\n      /* @__PURE__ */ jsx(\"div\", { className: \"cp-hero-overlay\" }),\n      /* @__PURE__ */ jsx(\"div\", { className: \"cp-hero-indicators\", children: collectionData.heroImages.map((_, index) => /* @__PURE__ */ jsx(\n        \"button\",\n        {\n          className: `cp-hero-indicator ${activeHeroSlide === index ? \"active\" : \"\"}`,\n          onClick: () => goToHeroSlide(index),\n          \"aria-label\": `Go to slide ${index + 1}`\n        },\n        index\n      )) }),\n      /* @__PURE__ */ jsxs(\"div\", { className: \"cp-hero-content\", children: [\n        /* @__PURE__ */ jsx(\"h1\", { className: \"cp-hero-title\", children: /* @__PURE__ */ jsx(\"span\", { className: \"translated-text\", children: \"KHÁM PHÁ BỘ SƯU TẬP\" }) }),\n        /* @__PURE__ */ jsx(\"p\", { className: \"cp-hero-subtitle\", children: /* @__PURE__ */ jsx(\"span\", { className: \"translated-text\", children: \"Khám phá các kiệt tác từ khắp nơi, trải dài qua hàng nghìn năm sáng tạo của con người\" }) })\n      ] }),\n      /* @__PURE__ */ jsx(\n        \"div\",\n        {\n          className: \"diagonal-divider bottom enhanced\",\n          style: { backgroundColor: \"transparent\" }\n        }\n      )\n    ] }),\n    /* @__PURE__ */ jsxs(\"section\", { className: \"cp-discover-section animate-section\", children: [\n      /* @__PURE__ */ jsxs(\"div\", { className: \"cp-discover-video-container\", children: [\n        /* @__PURE__ */ jsx(\n          \"video\",\n          {\n            ref: discoverVideoRef,\n            autoPlay: true,\n            muted: true,\n            loop: true,\n            playsInline: true,\n            className: `cp-discover-video ${isDiscoverVideoLoaded ? \"loaded\" : \"\"}`,\n            children: /* @__PURE__ */ jsx(\n              \"source\",\n              {\n                src: \"https://res.cloudinary.com/dn0br7hj0/video/upload/v1748787810/about/Hero_Abouts_Resize.mp4\",\n                type: \"video/mp4\"\n              }\n            )\n          }\n        ),\n        /* @__PURE__ */ jsx(\"div\", { className: \"cp-discover-overlay\" })\n      ] }),\n      /* @__PURE__ */ jsxs(\"div\", { className: \"cp-discover-content\", children: [\n        /* @__PURE__ */ jsxs(\"div\", { className: \"cp-section-header\", children: [\n          /* @__PURE__ */ jsx(\"h2\", { className: \"cp-section-title\", children: \"Khám Phá Tác Phẩm\" }),\n          /* @__PURE__ */ jsx(\"div\", { className: \"cp-section-divider\" })\n        ] }),\n        /* @__PURE__ */ jsxs(\"div\", { className: \"cp-discover-container\", children: [\n          /* @__PURE__ */ jsx(\"div\", { className: \"cp-discover-gradient-left\" }),\n          /* @__PURE__ */ jsx(\"div\", { className: \"cp-discover-gradient-right\" }),\n          /* @__PURE__ */ jsx(\n            \"button\",\n            {\n              className: \"cp-discover-nav cp-discover-prev\",\n              onClick: handlePrevClick,\n              \"aria-label\": \"Previous artworks\",\n              children: /* @__PURE__ */ jsx(\n                \"svg\",\n                {\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  viewBox: \"0 0 24 24\",\n                  fill: \"none\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"2\",\n                  children: /* @__PURE__ */ jsx(\"path\", { d: \"M15 18l-6-6 6-6\" })\n                }\n              )\n            }\n          ),\n          /* @__PURE__ */ jsx(\n            \"button\",\n            {\n              className: \"cp-discover-nav cp-discover-next\",\n              onClick: handleNextClick,\n              \"aria-label\": \"Next artworks\",\n              children: /* @__PURE__ */ jsx(\n                \"svg\",\n                {\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  viewBox: \"0 0 24 24\",\n                  fill: \"none\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"2\",\n                  children: /* @__PURE__ */ jsx(\"path\", { d: \"M9 18l6-6-6-6\" })\n                }\n              )\n            }\n          ),\n          /* @__PURE__ */ jsx(\n            \"div\",\n            {\n              className: `cp-discover-works cp-wavy-gallery ${isDragging ? \"dragging\" : \"\"}`,\n              ref: discoverWorksRef,\n              onMouseDown: handleMouseDown,\n              onMouseUp: handleMouseUp,\n              onMouseLeave: (e) => {\n                handleMouseUp();\n                handleMouseLeave(e);\n              },\n              onMouseMove: handleMouseMove,\n              onTouchStart: handleTouchStart,\n              onTouchMove: handleTouchMove,\n              onTouchEnd: handleTouchEnd,\n              onMouseEnter: handleMouseEnter,\n              children: /* @__PURE__ */ jsx(\"div\", { className: \"cp-discover-inner-container\", children: collectionData.artworks.map(\n                (artwork, index) => renderDiscoverWorkItem(artwork, index)\n              ) })\n            }\n          ),\n          /* @__PURE__ */ jsxs(\n            \"div\",\n            {\n              className: `cp-scroll-indicator ${!showScrollIndicator ? \"hidden\" : \"\"}`,\n              children: [\n                /* @__PURE__ */ jsx(\"div\", { className: \"cp-scroll-text\", children: \"Trượt để khám phá\" }),\n                /* @__PURE__ */ jsxs(\"div\", { className: \"cp-scroll-arrows-indicator\", children: [\n                  /* @__PURE__ */ jsx(\"span\", {}),\n                  /* @__PURE__ */ jsx(\"span\", {})\n                ] })\n              ]\n            }\n          )\n        ] })\n      ] })\n    ] }),\n    /* @__PURE__ */ jsx(\"section\", { className: \"cp-categories-section\", id: \"complete-collection\", children: /* @__PURE__ */ jsxs(\"div\", { className: \"cp-categories-container\", children: [\n      /* @__PURE__ */ jsxs(\"div\", { className: \"cp-categories-header\", children: [\n        /* @__PURE__ */ jsx(\"h2\", { className: \"cp-categories-title\", children: \"Bộ Sưu Tập Hoàn Chỉnh\" }),\n        /* @__PURE__ */ jsx(\"p\", { className: \"cp-categories-description\", children: \"Khám phá bộ sưu tập đa dạng của chúng tôi được tổ chức theo từng danh mục\" })\n      ] }),\n      /* @__PURE__ */ jsx(\n        \"div\",\n        {\n          className: \"cp-categories-grid\",\n          ref: categoryGridRef,\n          onMouseMove: handleCategoryMouseMove,\n          children: collectionData.categories.map((category) => /* @__PURE__ */ jsxs(\n            \"div\",\n            {\n              className: \"cp-category-card\",\n              onClick: (e) => handleCategorySelect(category, e),\n              children: [\n                /* @__PURE__ */ jsxs(\"div\", { className: \"cp-category-image-container\", children: [\n                  /* @__PURE__ */ jsx(\n                    \"img\",\n                    {\n                      src: getImageUrl(category.image),\n                      alt: category.title,\n                      className: \"cp-category-image\",\n                      loading: \"lazy\"\n                    }\n                  ),\n                  /* @__PURE__ */ jsx(\"div\", { className: \"cp-category-overlay\" })\n                ] }),\n                /* @__PURE__ */ jsx(\"h3\", { className: \"cp-category-title\", children: category.title })\n              ]\n            },\n            category.id\n          ))\n        }\n      )\n    ] }) }),\n    /* @__PURE__ */ jsxs(\"section\", { className: \"cp-featured-artwork-section\", id: \"featured-artwork\", children: [\n      /* @__PURE__ */ jsxs(\"div\", { className: \"cp-featured-container\", children: [\n        /* @__PURE__ */ jsx(\"div\", { className: \"cp-featured-left\", children: /* @__PURE__ */ jsxs(\"div\", { className: \"cp-featured-image-container\", children: [\n          /* @__PURE__ */ jsx(\n            \"img\",\n            {\n              src: getImageUrl(\n                collectionData.artworks[selectedArtwork].image\n              ),\n              alt: collectionData.artworks[selectedArtwork].title,\n              className: \"cp-featured-image\"\n            }\n          ),\n          /* @__PURE__ */ jsx(\"div\", { className: \"cp-artwork-tags\", children: collectionData.artworks[selectedArtwork].tags.map(\n            (tag, index) => /* @__PURE__ */ jsx(\"span\", { className: \"cp-artwork-tag\", children: tag }, index)\n          ) })\n        ] }) }),\n        /* @__PURE__ */ jsx(\"div\", { className: \"cp-featured-right\", children: /* @__PURE__ */ jsxs(\"div\", { className: \"cp-featured-details\", children: [\n          /* @__PURE__ */ jsx(\"h2\", { className: \"cp-featured-title\", children: collectionData.artworks[selectedArtwork].title }),\n          /* @__PURE__ */ jsxs(\"div\", { className: \"cp-artwork-metadata\", children: [\n            /* @__PURE__ */ jsxs(\"div\", { className: \"cp-metadata-item\", children: [\n              /* @__PURE__ */ jsx(\"span\", { className: \"cp-metadata-label\", children: \"Tác giả\" }),\n              /* @__PURE__ */ jsx(\"span\", { className: \"cp-metadata-value\", children: collectionData.artworks[selectedArtwork].artist })\n            ] }),\n            /* @__PURE__ */ jsxs(\"div\", { className: \"cp-metadata-item\", children: [\n              /* @__PURE__ */ jsx(\"span\", { className: \"cp-metadata-label\", children: \"Năm\" }),\n              /* @__PURE__ */ jsx(\"span\", { className: \"cp-metadata-value\", children: collectionData.artworks[selectedArtwork].year })\n            ] })\n          ] }),\n          /* @__PURE__ */ jsx(\"div\", { className: \"cp-artwork-description\", children: /* @__PURE__ */ jsx(\"p\", { children: collectionData.artworks[selectedArtwork].description }) }),\n          /* @__PURE__ */ jsxs(\"div\", { className: \"cp-artwork-location\", children: [\n            /* @__PURE__ */ jsx(\"div\", { className: \"cp-location-icon\", children: /* @__PURE__ */ jsxs(\n              \"svg\",\n              {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                width: \"20\",\n                height: \"20\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                strokeWidth: \"2\",\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                children: [\n                  /* @__PURE__ */ jsx(\"path\", { d: \"M12 22s-8-4.5-8-11.8A8 8 0 0 1 12 2a8 8 0 0 1 8 8.2c0 7.3-8 11.8-8 11.8z\" }),\n                  /* @__PURE__ */ jsx(\"circle\", { cx: \"12\", cy: \"10\", r: \"3\" })\n                ]\n              }\n            ) }),\n            /* @__PURE__ */ jsxs(\"div\", { className: \"cp-location-details\", children: [\n              /* @__PURE__ */ jsx(\"h4\", { className: \"cp-location-title\", children: \"Địa điểm\" }),\n              /* @__PURE__ */ jsx(\"p\", { className: \"cp-location-description\", children: collectionData.artworks[selectedArtwork].location })\n            ] })\n          ] }),\n          /* @__PURE__ */ jsxs(\"a\", { className: \"cp-visit-button\", href: \"/visit\", children: [\n            \"Lập lịch thăm viếng\",\n            /* @__PURE__ */ jsx(\n              \"svg\",\n              {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                width: \"18\",\n                height: \"18\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                strokeWidth: \"2\",\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                children: /* @__PURE__ */ jsx(\"path\", { d: \"M5 12h14M12 5l7 7-7 7\" })\n              }\n            )\n          ] })\n        ] }) })\n      ] }),\n      /* @__PURE__ */ jsxs(\"div\", { className: \"cp-artwork-navigation\", children: [\n        /* @__PURE__ */ jsx(\n          \"button\",\n          {\n            className: \"cp-nav-button cp-prev-button\",\n            onClick: () => navigateArtwork(\"prev\"),\n            \"aria-label\": \"Previous artwork\",\n            children: /* @__PURE__ */ jsx(\n              \"svg\",\n              {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                width: \"24\",\n                height: \"24\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                strokeWidth: \"2\",\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                children: /* @__PURE__ */ jsx(\"path\", { d: \"M19 12H5M12 19l-7-7 7-7\" })\n              }\n            )\n          }\n        ),\n        /* @__PURE__ */ jsx(\"div\", { className: \"cp-nav-indicators\", children: collectionData.artworks.map((artwork, index) => /* @__PURE__ */ jsx(\n          \"button\",\n          {\n            className: `cp-nav-indicator ${selectedArtwork === index ? \"active\" : \"\"}`,\n            onClick: () => setSelectedArtwork(index),\n            \"aria-label\": `View ${artwork.title}`\n          },\n          artwork.id\n        )) }),\n        /* @__PURE__ */ jsx(\n          \"button\",\n          {\n            className: \"cp-nav-button cp-next-button\",\n            onClick: () => navigateArtwork(\"next\"),\n            \"aria-label\": \"Next artwork\",\n            children: /* @__PURE__ */ jsx(\n              \"svg\",\n              {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                width: \"24\",\n                height: \"24\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                strokeWidth: \"2\",\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                children: /* @__PURE__ */ jsx(\"path\", { d: \"M5 12h14M12 5l7 7-7 7\" })\n              }\n            )\n          }\n        )\n      ] })\n    ] }),\n    /* @__PURE__ */ jsx(\"section\", { className: \"cp-highlights-section\", children: /* @__PURE__ */ jsxs(\"div\", { className: \"cp-highlights-container\", children: [\n      /* @__PURE__ */ jsx(\"h2\", { className: \"cp-categories-title\", children: \"Điểm Nhấn Bộ Sưu Tập\" }),\n      /* @__PURE__ */ jsx(\"p\", { className: \"cp-highlights-description\", children: \"Khám phá những tác phẩm nghệ thuật tiêu biểu nhất của chúng tôi thông qua video và hình ảnh chi tiết\" }),\n      /* @__PURE__ */ jsx(\"div\", { className: \"cp-highlights-grid\", children: collectionData.highlights.map((highlight) => /* @__PURE__ */ jsxs(\n        \"div\",\n        {\n          className: `cp-highlight-item ${highlight.type}-item`,\n          onClick: () => highlight.type === \"video\" ? openVideoModal(highlight) : openArtworkDetail(highlight),\n          \"data-highlight-id\": highlight.id,\n          children: [\n            /* @__PURE__ */ jsxs(\"div\", { className: \"cp-highlight-thumbnail\", children: [\n              /* @__PURE__ */ jsx(\n                \"img\",\n                {\n                  src: getImageUrl(highlight.image),\n                  alt: highlight.title,\n                  className: \"cp-highlight-img\",\n                  loading: \"lazy\"\n                }\n              ),\n              highlight.type === \"video\" && /* @__PURE__ */ jsxs(\"div\", { className: \"cp-play-button\", children: [\n                /* @__PURE__ */ jsxs(\"svg\", { viewBox: \"0 0 100 100\", className: \"cp-play-icon\", children: [\n                  /* @__PURE__ */ jsx(\n                    \"circle\",\n                    {\n                      cx: \"50\",\n                      cy: \"50\",\n                      r: \"45\",\n                      className: \"cp-play-circle\"\n                    }\n                  ),\n                  /* @__PURE__ */ jsx(\n                    \"polygon\",\n                    {\n                      points: \"40,30 70,50 40,70\",\n                      className: \"cp-play-triangle\"\n                    }\n                  )\n                ] }),\n                /* @__PURE__ */ jsx(\"span\", { className: \"cp-video-indicator\", children: \"WATCH VIDEO\" })\n              ] }),\n              /* @__PURE__ */ jsx(\"div\", { className: \"cp-highlight-gradient\" }),\n              /* @__PURE__ */ jsx(\"span\", { className: \"cp-highlight-category\", children: highlight.category })\n            ] }),\n            /* @__PURE__ */ jsxs(\"div\", { className: \"cp-highlight-content\", children: [\n              /* @__PURE__ */ jsx(\"h3\", { className: \"cp-highlight-title\", children: highlight.title }),\n              /* @__PURE__ */ jsx(\"p\", { className: \"cp-highlight-type\", children: highlight.type === \"video\" ? /* @__PURE__ */ jsxs(Fragment, { children: [\n                /* @__PURE__ */ jsx(\"span\", { className: \"cp-video-icon\", children: /* @__PURE__ */ jsx(\"svg\", { viewBox: \"0 0 24 24\", width: \"16\", height: \"16\", children: /* @__PURE__ */ jsx(\"path\", { d: \"M8 5v14l11-7z\", fill: \"currentColor\" }) }) }),\n                /* @__PURE__ */ jsx(\"span\", { className: \"cp-video-tag\", children: \"VIDEO\" })\n              ] }) : /* @__PURE__ */ jsx(\"span\", { className: \"cp-image-tag\", children: \"GALLERY\" }) })\n            ] })\n          ]\n        },\n        highlight.id\n      )) })\n    ] }) }),\n    artworkModalOpen && modalContent && modalContent.type === \"category\" && /* @__PURE__ */ jsx(\"div\", { className: \"cp-modal cp-category-modal\", onClick: closeModal, children: /* @__PURE__ */ jsxs(\n      \"div\",\n      {\n        className: \"cp-modal-content\",\n        onClick: (e) => e.stopPropagation(),\n        children: [\n          /* @__PURE__ */ jsx(\"button\", { className: \"cp-modal-close\", onClick: closeModal, children: /* @__PURE__ */ jsx(\"svg\", { viewBox: \"0 0 24 24\", width: \"24\", height: \"24\", children: /* @__PURE__ */ jsx(\n            \"path\",\n            {\n              d: \"M18 6L6 18M6 6l12 12\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\"\n            }\n          ) }) }),\n          /* @__PURE__ */ jsxs(\n            \"div\",\n            {\n              className: \"cp-category-hero\",\n              style: {\n                backgroundImage: `url(${getImageUrl(\n                  modalContent.category.image\n                )})`\n              },\n              children: [\n                /* @__PURE__ */ jsx(\"div\", { className: \"cp-category-hero-overlay\" }),\n                /* @__PURE__ */ jsxs(\"div\", { className: \"cp-category-hero-content\", children: [\n                  /* @__PURE__ */ jsxs(\"button\", { className: \"cp-back-button\", onClick: closeModal, children: [\n                    /* @__PURE__ */ jsx(\n                      \"svg\",\n                      {\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        width: \"24\",\n                        height: \"24\",\n                        viewBox: \"0 0 24 24\",\n                        fill: \"none\",\n                        stroke: \"currentColor\",\n                        strokeWidth: \"2\",\n                        strokeLinecap: \"round\",\n                        strokeLinejoin: \"round\",\n                        children: /* @__PURE__ */ jsx(\"path\", { d: \"M19 12H5M12 19l-7-7 7-7\" })\n                      }\n                    ),\n                    /* @__PURE__ */ jsx(\"span\", { children: \"Back to Collections\" })\n                  ] }),\n                  /* @__PURE__ */ jsx(\"h2\", { className: \"cp-category-hero-title\", children: modalContent.category.title }),\n                  /* @__PURE__ */ jsxs(\"p\", { className: \"cp-category-hero-description\", children: [\n                    \"Discover masterpieces of\",\n                    \" \",\n                    modalContent.category.title.toLowerCase(),\n                    \" from ancient to modern times\"\n                  ] })\n                ] })\n              ]\n            }\n          ),\n          /* @__PURE__ */ jsx(\"div\", { className: \"cp-category-artworks-section\", children: /* @__PURE__ */ jsxs(\"div\", { className: \"cp-category-artworks-container\", children: [\n            /* @__PURE__ */ jsxs(\"div\", { className: \"cp-category-artworks-header\", children: [\n              /* @__PURE__ */ jsx(\"h3\", { className: \"cp-category-artworks-title\", children: \"Browse Collection\" }),\n              /* @__PURE__ */ jsxs(\"p\", { className: \"cp-category-artworks-count\", children: [\n                /* @__PURE__ */ jsx(\"span\", { children: modalContent.artworks.length }),\n                \" items\"\n              ] })\n            ] }),\n            /* @__PURE__ */ jsx(\"div\", { className: \"cp-category-artworks-grid\", children: modalContent.artworks.map((artwork, index) => /* @__PURE__ */ jsxs(\n              \"div\",\n              {\n                className: \"cp-category-artwork-card\",\n                style: { \"--index\": index },\n                onClick: () => openArtworkDetail(artwork),\n                children: [\n                  /* @__PURE__ */ jsxs(\"div\", { className: \"cp-category-artwork-image-container\", children: [\n                    /* @__PURE__ */ jsx(\n                      \"img\",\n                      {\n                        src: getImageUrl(artwork.image),\n                        alt: artwork.title,\n                        loading: \"lazy\"\n                      }\n                    ),\n                    /* @__PURE__ */ jsx(\"div\", { className: \"cp-category-artwork-overlay\" })\n                  ] }),\n                  /* @__PURE__ */ jsxs(\"div\", { className: \"cp-category-artwork-info\", children: [\n                    /* @__PURE__ */ jsx(\"h3\", { className: \"cp-category-artwork-title\", children: artwork.title }),\n                    /* @__PURE__ */ jsx(\"p\", { className: \"cp-category-artwork-year\", children: artwork.year }),\n                    /* @__PURE__ */ jsx(\"div\", { className: \"cp-category-artwork-tags\", children: artwork.tags.map((tag, index2) => /* @__PURE__ */ jsx(\n                      \"span\",\n                      {\n                        className: \"cp-category-artwork-tag\",\n                        children: tag\n                      },\n                      index2\n                    )) })\n                  ] })\n                ]\n              },\n              artwork.id\n            )) })\n          ] }) })\n        ]\n      }\n    ) }),\n    artworkModalOpen && modalContent && modalContent.type !== \"category\" && /* @__PURE__ */ jsx(\"div\", { className: \"cp-modal cp-artwork-modal\", onClick: closeModal, children: /* @__PURE__ */ jsxs(\n      \"div\",\n      {\n        className: \"cp-modal-content\",\n        onClick: (e) => e.stopPropagation(),\n        children: [\n          /* @__PURE__ */ jsx(\"button\", { className: \"cp-modal-close\", onClick: closeModal, children: /* @__PURE__ */ jsx(\"svg\", { viewBox: \"0 0 24 24\", width: \"24\", height: \"24\", children: /* @__PURE__ */ jsx(\n            \"path\",\n            {\n              d: \"M18 6L6 18M6 6l12 12\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\"\n            }\n          ) }) }),\n          /* @__PURE__ */ jsxs(\"div\", { className: \"cp-artwork-modal-body\", children: [\n            /* @__PURE__ */ jsxs(\"div\", { className: \"cp-artwork-modal-image-container\", children: [\n              /* @__PURE__ */ jsx(\n                \"img\",\n                {\n                  src: getImageUrl(\n                    collectionData.artworks[selectedArtwork].image\n                  ),\n                  alt: collectionData.artworks[selectedArtwork].title,\n                  className: \"cp-artwork-modal-image\"\n                }\n              ),\n              /* @__PURE__ */ jsxs(\"div\", { className: \"cp-artwork-modal-actions\", children: [\n                /* @__PURE__ */ jsx(\n                  \"button\",\n                  {\n                    className: \"cp-artwork-action-button cp-artwork-zoom\",\n                    title: \"Phóng to\",\n                    children: /* @__PURE__ */ jsx(\"svg\", { viewBox: \"0 0 24 24\", width: \"20\", height: \"20\", children: /* @__PURE__ */ jsx(\n                      \"path\",\n                      {\n                        d: \"M15 3h6v6M9 21H3v-6M21 3l-7 7M3 21l7-7\",\n                        stroke: \"currentColor\",\n                        strokeWidth: \"2\",\n                        strokeLinecap: \"round\",\n                        strokeLinejoin: \"round\"\n                      }\n                    ) })\n                  }\n                ),\n                /* @__PURE__ */ jsx(\n                  \"button\",\n                  {\n                    className: \"cp-artwork-action-button\",\n                    onClick: () => handleDownload(collectionData.artworks[selectedArtwork]),\n                    title: \"Tải xuống\",\n                    children: /* @__PURE__ */ jsx(\"svg\", { viewBox: \"0 0 24 24\", width: \"20\", height: \"20\", children: /* @__PURE__ */ jsx(\n                      \"path\",\n                      {\n                        d: \"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4M7 10l5 5 5-5M12 15V3\",\n                        stroke: \"currentColor\",\n                        strokeWidth: \"2\",\n                        strokeLinecap: \"round\",\n                        strokeLinejoin: \"round\"\n                      }\n                    ) })\n                  }\n                )\n              ] })\n            ] }),\n            /* @__PURE__ */ jsxs(\"div\", { className: \"cp-artwork-modal-details\", children: [\n              /* @__PURE__ */ jsx(\"h3\", { className: \"cp-artwork-modal-title\", children: collectionData.artworks[selectedArtwork].title }),\n              /* @__PURE__ */ jsxs(\"div\", { className: \"cp-artwork-modal-metadata\", children: [\n                /* @__PURE__ */ jsxs(\"div\", { className: \"cp-artwork-modal-artist\", children: [\n                  /* @__PURE__ */ jsx(\"span\", { className: \"cp-metadata-label\", children: \"Nghệ sĩ:\" }),\n                  /* @__PURE__ */ jsx(\"span\", { className: \"cp-metadata-value\", children: collectionData.artworks[selectedArtwork].artist })\n                ] }),\n                /* @__PURE__ */ jsxs(\"div\", { className: \"cp-artwork-modal-year\", children: [\n                  /* @__PURE__ */ jsx(\"span\", { className: \"cp-metadata-label\", children: \"Năm:\" }),\n                  /* @__PURE__ */ jsx(\"span\", { className: \"cp-metadata-value\", children: collectionData.artworks[selectedArtwork].year })\n                ] }),\n                /* @__PURE__ */ jsxs(\"div\", { className: \"cp-artwork-modal-location\", children: [\n                  /* @__PURE__ */ jsx(\"span\", { className: \"cp-metadata-label\", children: \"Vị trí:\" }),\n                  /* @__PURE__ */ jsx(\"span\", { className: \"cp-metadata-value\", children: collectionData.artworks[selectedArtwork].location })\n                ] })\n              ] }),\n              /* @__PURE__ */ jsx(\"div\", { className: \"cp-artwork-modal-tags\", children: collectionData.artworks[selectedArtwork].tags && collectionData.artworks[selectedArtwork].tags.map(\n                (tag, index) => /* @__PURE__ */ jsx(\"span\", { className: \"cp-artwork-modal-tag\", children: tag }, index)\n              ) }),\n              /* @__PURE__ */ jsx(\"div\", { className: \"cp-artwork-modal-description\", children: /* @__PURE__ */ jsx(\"p\", { children: collectionData.artworks[selectedArtwork].description }) }),\n              /* @__PURE__ */ jsxs(\"div\", { className: \"cp-artwork-modal-visit\", children: [\n                /* @__PURE__ */ jsx(\"div\", { className: \"cp-location-icon\", children: /* @__PURE__ */ jsxs(\n                  \"svg\",\n                  {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    width: \"22\",\n                    height: \"22\",\n                    viewBox: \"0 0 24 24\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    strokeWidth: \"2\",\n                    strokeLinecap: \"round\",\n                    strokeLinejoin: \"round\",\n                    children: [\n                      /* @__PURE__ */ jsx(\"path\", { d: \"M12 22s-8-4.5-8-11.8A8 8 0 0 1 12 2a8 8 0 0 1 8 8.2c0 7.3-8 11.8-8 11.8z\" }),\n                      /* @__PURE__ */ jsx(\"circle\", { cx: \"12\", cy: \"10\", r: \"3\" })\n                    ]\n                  }\n                ) }),\n                /* @__PURE__ */ jsxs(\"div\", { className: \"cp-artwork-modal-visit-info\", children: [\n                  /* @__PURE__ */ jsx(\"h4\", { className: \"cp-visit-title\", children: \"Vị trí trưng bày\" }),\n                  /* @__PURE__ */ jsx(\"p\", { className: \"cp-visit-description\", children: collectionData.artworks[selectedArtwork].location })\n                ] })\n              ] }),\n              /* @__PURE__ */ jsxs(\"a\", { href: \"/visit\", className: \"cp-artwork-modal-cta\", children: [\n                \"Lên kế hoạch tham quan\",\n                /* @__PURE__ */ jsx(\n                  \"svg\",\n                  {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    width: \"18\",\n                    height: \"18\",\n                    viewBox: \"0 0 24 24\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    strokeWidth: \"2\",\n                    strokeLinecap: \"round\",\n                    strokeLinejoin: \"round\",\n                    children: /* @__PURE__ */ jsx(\"path\", { d: \"M5 12h14M12 5l7 7-7 7\" })\n                  }\n                )\n              ] })\n            ] })\n          ] })\n        ]\n      }\n    ) }),\n    videoModalOpen && modalContent && /* @__PURE__ */ jsx(\n      \"div\",\n      {\n        className: `cp-modal cp-video-modal ${videoModalClosing ? \"closing\" : \"\"}`,\n        onClick: handleModalBackdropClick,\n        children: /* @__PURE__ */ jsxs(\n          \"div\",\n          {\n            className: \"cp-modal-content cp-video-modal-content\",\n            onClick: (e) => e.stopPropagation(),\n            children: [\n              /* @__PURE__ */ jsx(\"button\", { className: \"cp-modal-close\", onClick: closeModal, children: /* @__PURE__ */ jsx(\"svg\", { viewBox: \"0 0 24 24\", width: \"24\", height: \"24\", children: /* @__PURE__ */ jsx(\n                \"path\",\n                {\n                  d: \"M18 6L6 18M6 6l12 12\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"2\",\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\"\n                }\n              ) }) }),\n              /* @__PURE__ */ jsx(\"div\", { className: \"cp-video-decorative-element top-left\" }),\n              /* @__PURE__ */ jsx(\"div\", { className: \"cp-video-decorative-element bottom-right\" }),\n              /* @__PURE__ */ jsx(\"div\", { className: \"cp-video-decorative-element center\" }),\n              /* @__PURE__ */ jsxs(\"div\", { className: \"cp-modal-video\", children: [\n                /* @__PURE__ */ jsxs(\"div\", { className: \"cp-video-container\", children: [\n                  /* @__PURE__ */ jsx(\"div\", { className: \"cp-video-loading\", children: /* @__PURE__ */ jsx(\"div\", { className: \"cp-video-loading-circle\" }) }),\n                  /* @__PURE__ */ jsx(\n                    \"iframe\",\n                    {\n                      className: \"cp-youtube-frame\",\n                      src: `https://www.youtube.com/embed/${modalContent.youtubeId}?autoplay=1&rel=0&modestbranding=1&showinfo=0`,\n                      title: modalContent.title,\n                      allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n                      allowFullScreen: true\n                    }\n                  )\n                ] }),\n                /* @__PURE__ */ jsxs(\"div\", { className: \"cp-modal-video-details\", children: [\n                  /* @__PURE__ */ jsxs(\"div\", { className: \"cp-modal-video-header\", children: [\n                    /* @__PURE__ */ jsx(\"h3\", { className: \"cp-modal-video-title\", children: modalContent.title }),\n                    /* @__PURE__ */ jsx(\"span\", { className: \"cp-modal-video-category\", children: modalContent.category })\n                  ] }),\n                  /* @__PURE__ */ jsx(\"p\", { className: \"cp-modal-video-description\", children: modalContent.description }),\n                  /* @__PURE__ */ jsxs(\"div\", { className: \"cp-video-related\", children: [\n                    /* @__PURE__ */ jsx(\"h4\", { className: \"cp-video-related-title\", children: \"Video Liên Quan\" }),\n                    /* @__PURE__ */ jsx(\"div\", { className: \"cp-video-related-items\", children: collectionData.highlights.filter(\n                      (item) => item.id !== modalContent.id && item.type === \"video\"\n                    ).slice(0, 5).map((item) => /* @__PURE__ */ jsxs(\n                      \"div\",\n                      {\n                        className: \"cp-video-related-item\",\n                        onClick: (e) => {\n                          e.stopPropagation();\n                          setModalContent(item);\n                        },\n                        children: [\n                          /* @__PURE__ */ jsx(\"img\", { src: getImageUrl(item.image), alt: item.title }),\n                          /* @__PURE__ */ jsx(\"p\", { className: \"cp-video-related-item-title\", children: item.title })\n                        ]\n                      },\n                      item.id\n                    )) })\n                  ] })\n                ] })\n              ] })\n            ]\n          }\n        )\n      }\n    )\n  ] });\n};\nexport default CollectionPage;\n",
      "start": 1751851850632,
      "end": 1751851851755,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "C:/Users/.Freelancer/MUSSEEDUPIN/src/pages/Collection/CollectionPage.jsx"
        ],
        "sourcesContent": [
          "import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { getImageUrl } from \"../../utils/cloudinary\";\nimport \"./CollectionPage.css\";\n\n// Collection data\nconst collectionData = {\n  heroImages: [\n    \"Cồng Chiên.webp\",\n    \"Lồng Đa Đa.webp\",\n    \"36 (2).webp\",\n    \"phunu_hero.webp\",\n    \"Chiếc Gùi.webp\",\n    \"Nồi đất.webp\",\n    \"Thông 2.webp\",\n    \"Hoa Ban Trắng.webp\",\n    \"luutrunghethuat.jpg\",\n    \"Lửa.webp\",\n    \"Gió.webp\",\n    \"Đông.webp\",\n  ],\n\n  artworks: [\n    {\n      id: \"dungcu-1\",\n      title: \"Dụng cụ âm nhạc Tây Nguyên\",\n      artist: \"Cồng chiêng\",\n      year: \"2024\",\n      image: \"Cồng Chiên.webp\",\n      description:\n        \"Musée Du Pin trưng bày các nhạc cụ truyền thống bằng đồng của các dân tộc Tây Nguyên, tiêu biểu là cồng chiêng – biểu tượng văn hóa và tín ngưỡng thiêng liêng. Âm thanh vang vọng của cồng chiêng thể hiện sự kết nối sâu sắc giữa con người và thế giới tâm linh.\",\n      location: \"Khu trưng bày nhạc cụ\",\n      tags: [\"Nhạc cụ\", \"Văn hóa\", \"Tây Nguyên\"],\n    },\n    {\n      id: \"channuoi-1\",\n      title: \"Hơi thở đại ngàn\",\n      artist: \"Lồng đa đa\",\n      year: \"2024\",\n      image: \"Lồng Đa Đa.webp\",\n      description:\n        \"Lồng đa đa của người K'ho hiện đang được trưng bày tại Musée Du Pin như một biểu tượng mộc mạc nhưng đầy tính văn hóa của đời sống dân tộc Tây Nguyên. Được đan thủ công từ tre nứa, chiếc lồng không chỉ phục vụ mục đích chăn nuôi mà còn phản ánh sự khéo léo, tỉ mỉ và mối liên kết bền chặt giữa con người với thiên nhiên núi rừng.\",\n      location: \"Khu trưng bày đời sống\",\n      tags: [\"Đời sống\", \"Văn hóa\", \"K'ho\"],\n    },\n    {\n      id: \"dieukhac-1\",\n      title: \"Hình hài bản sắc\",\n      artist: \"Tượng phụ nữ\",\n      year: \"2024\",\n      image: \"Điêu Khắc.webp\",\n      description:\n        \"Tác phẩm điêu khắc người dân tộc K'ho đang được trưng bày tại Musée Du Pin thể hiện hình ảnh phụ nữ Tây Nguyên trong dáng đứng trang nghiêm, tay cầm chiếc chiêng nhỏ – biểu tượng của âm nhạc và tín ngưỡng bản địa.\",\n      location: \"Khu trưng bày điêu khắc\",\n      tags: [\"Điêu khắc\", \"Văn hóa\", \"K'ho\"],\n    },\n    {\n      id: \"lehoi-1\",\n      title: \"Những mùa no ấm\",\n      artist: \"Ché Ghò Sành\",\n      year: \"2024\",\n      image: \"Chiếc Gùi.webp\",\n      description:\n        \"Ché Ghò Sành là một loại ché cổ nổi tiếng của Tây Nguyên, hiện đang được trưng bày tại Musée Du Pin, đây là biểu tượng của sự giàu có, quyền uy và tín ngưỡng tâm linh trong đời sống người bản địa.\",\n      location: \"Khu trưng bày lễ hội\",\n      tags: [\"Lễ hội\", \"Văn hóa\", \"K'ho\"],\n    },\n    {\n      id: \"sinhoat-1\",\n      title: \"Hơi ấm buôn làng\",\n      artist: \"Nồi đất\",\n      year: \"2024\",\n      image: \"Nồi Đất.webp\",\n      description:\n        \"Muée Du Pin trưng bày nồi đất của người K'ho, đây là biểu tượng của sự phát triển và tiến bộ của dân tộc Tây Nguyên.\",\n      location: \"Khu trưng bày đời sống\",\n      tags: [\"Đời sống\", \"Văn hóa\", \"K'ho\"],\n    },\n    {\n      id: \"sinhoat-2\",\n      title: \"Lửa thiêng đêm núi\",\n      artist: \"36 (2).webp\",\n      year: \"2024\",\n      image: \"46.webp\",\n      description:\n        \"Được khoét rỗng từ quả hồ lô khô, vật phẩm này thường được dùng để đựng nước, rượu cần hoặc làm nhạc cụ truyền thống\",\n      location: \"Khu trưng bày đời sống\",\n      tags: [\"Đời sống\", \"Văn hóa\", \"K'ho\"],\n    },\n    {\n      id: \"phuctang-1\",\n      title: \"Phức Tầng\",\n      artist: \"Thông 2\",\n      year: \"2025\",\n      image: \"Thông 2.webp\",\n      description:\n        \"Được Musée Du Pin bắt trọn khoảng khắc các hình ảnh thiên nhiên đậm sắc dân tộc K'ho, tạo nên bức tranh đẹp về đất nước Tây Nguyên.\",\n      location: \"Khu trưng bày đời sống\",\n      tags: [\"Đời sống\", \"Văn hóa\", \"Thiên nhiên\"],\n    },\n    {\n      id: \"vatlieu-1\",\n      title: \"Vật liệu\",\n      artist: \"Chất liệu K'ho\",\n      year: \"2024\",\n      image: \"Hoa Ban Trắng.webp\",\n      description:\n        \"Tại Musée Du Pin, mỗi chất liệu được chọn lựa kỹ lưỡng nhằm tôn vinh vẻ đẹp tự nhiên và bản sắc văn hóa Tây Nguyên. Các vật liệu truyền thống như gỗ, đá, đất và sợi tự nhiên không chỉ là phương tiện sáng tạo mà còn là cầu nối giữa nghệ thuật và đời sống bản địa.\",\n      location: \"Khu trưng bày vật liệu\",\n      tags: [\"Vật liệu\", \"Văn hóa\", \"K'ho\"],\n    },\n    {\n      id: \"redpine-1\",\n      title: \"Redpine Art Studio\",\n      artist: \"Musée Du Pin\",\n      year: \"2024\",\n      image: \"luutrunghethuat.jpg\",\n      description:\n        \"Redpine Art Studio là không gian lưu trú nghệ thuật độc đáo giữa rừng thông, nơi bạn có thể trải nghiệm nghệ thuật và thiên nhiên Đà Lạt.\",\n      location: \"Khu lưu trú nghệ thuật\",\n      tags: [\"Lưu trú\", \"Nghệ thuật\", \"Đà Lạt\"],\n    },\n    {\n      id: \"memory-1\",\n      title: \"Bề mặt ký ức\",\n      artist: \"Tham quan\",\n      year: \"2024\",\n      image: \"Lửa.webp\",\n      description: \"Bề mặt ký ức.\",\n      location: \"Khu trưng bày\",\n      tags: [\"Tham quan\", \"Nghệ thuật\", \"Đà Lạt\"],\n    },\n    {\n      id: \"nature-1\",\n      title: \"Thiên nhiên Đà Lạt\",\n      artist: \"Tham quan\",\n      year: \"2024\",\n      image: \"Gió.webp\",\n      description: \"Thiên nhiên Đà Lạt.\",\n      location: \"Khu trưng bày\",\n      tags: [\"Tham quan\", \"Nghệ thuật\", \"Đà Lạt\"],\n    },\n    {\n      id: \"color-1\",\n      title: \"Sắc màu Tây nguyên\",\n      artist: \"Tham quan\",\n      year: \"2024\",\n      image: \"Đông.webp\",\n      description: \"Sắc màu Tây nguyên.\",\n      location: \"Khu trưng bày\",\n      tags: [\"Tham quan\", \"Nghệ thuật\", \"Đà Lạt\"],\n    },\n  ],\n\n  categories: [\n    { id: 1, title: \"Dụng cụ âm nhạc Tây Nguyên\", image: \"Cồng Chiên.webp\" },\n    { id: 2, title: \"Hơi thở đại ngàn\", image: \"Lồng Đa Đa.webp\" },\n    { id: 3, title: \"Lửa thiêng đêm núi\", image: \"36 (2).webp\" },\n    { id: 4, title: \"Hình hài bản sắc\", image: \"phunu_hero.webp\" },\n    {\n      id: 5,\n      title: \"Những mùa no ấm\",\n      image: \"Chiếc Gùi.webp\",\n    },\n    { id: 6, title: \"Hơi ấm buôn làng\", image: \"Nồi Đất.webp\" },\n    { id: 7, title: \"Phức Tầng\", image: \"Thông 2.webp\" },\n    { id: 8, title: \"Vật liệu\", image: \"Hoa Ban Trắng.webp\" },\n    { id: 9, title: \"Redpine Art Studio\", image: \"luutrunghethuat.jpg\" },\n    {\n      id: 10,\n      title: \"Bề mặt ký ức\",\n      image: \"Lửa.webp\",\n    },\n    {\n      id: 11,\n      title: \"Thiên nhiên Đà Lạt\",\n      image: \"Gió.webp\",\n    },\n    {\n      id: 12,\n      title: \"Sắc màu Tây nguyên\",\n      image: \"Đông.webp\",\n    },\n  ],\n\n  highlights: [\n    {\n      id: 1,\n      title: \"Nhạc cụ truyền thống\",\n      category: \"Nhạc cụ\",\n      image: \"Cồng Chiên.webp\",\n      type: \"video\",\n      youtubeId: \"dQw4w9WgXcQ\",\n      description:\n        \"Khám phá âm nhạc truyền thống của người Tây Nguyên qua các nhạc cụ độc đáo.\",\n    },\n    {\n      id: 2,\n      title: \"Hình hài bản sắc\",\n      category: \"Điêu khắc\",\n      image: \"Điêu Khắc.webp\",\n      type: \"image\",\n      artwork: 1,\n      description:\n        \"Nghệ thuật điêu khắc truyền thống của người K'ho qua các tác phẩm tiêu biểu.\",\n    },\n    {\n      id: 3,\n      title: \"Hơi ấm buôn làng\",\n      category: \"Đời sống\",\n      image: \"46.webp\",\n      type: \"video\",\n      youtubeId: \"dQw4w9WgXcQ\",\n      description:\n        \"Tìm hiểu về cuộc sống hàng ngày của người K'ho qua các vật dụng sinh hoạt.\",\n    },\n    {\n      id: 4,\n      title: \"Lửa thiêng đêm núi\",\n      category: \"Lễ hội\",\n      image: \"36 (2).webp\",\n      type: \"image\",\n      artwork: 4,\n      description:\n        \"Khám phá các lễ hội truyền thống và ý nghĩa văn hóa của người K'ho.\",\n    },\n    {\n      id: 5,\n      title: \"Hơi thở đại ngàn\",\n      category: \"Chăn nuôi\",\n      image: \"Lồng Đa Đa.webp\",\n      type: \"video\",\n      youtubeId: \"dQw4w9WgXcQ\",\n      description:\n        \"Tìm hiểu về hoạt động chăn nuôi và các công cụ truyền thống của người K'ho.\",\n    },\n    {\n      id: 6,\n      title: \"Những mùa no ấm\",\n      category: \"Sinh hoạt\",\n      image: \"Chiếc Gùi.webp\",\n      type: \"image\",\n      artwork: 2,\n      description:\n        \"Khám phá các hoạt động sinh hoạt văn hóa đặc trưng của người K'ho.\",\n    },\n    {\n      id: 7,\n      title: \"Vật liệu\",\n      category: \"Vật liệu\",\n      image: \"Hoa Ban Trắng.webp\",\n      type: \"image\",\n      artwork: 1,\n      description:\n        \"Khám phá các chất liệu truyền thống và ý nghĩa văn hóa của người K'ho.\",\n    },\n  ],\n};\n\nconst CollectionPage = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // State for hero section slideshow\n  const [activeHeroSlide, setActiveHeroSlide] = useState(0);\n\n  // State for featured artwork\n  const [selectedArtwork, setSelectedArtwork] = useState(0);\n\n  // State for discover works gallery\n  const discoverWorksRef = useRef(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [startX, setStartX] = useState(0);\n  const [scrollLeft, setScrollLeft] = useState(0);\n\n  // State for modals\n  const [artworkModalOpen, setArtworkModalOpen] = useState(false);\n  const [videoModalOpen, setVideoModalOpen] = useState(false);\n  const [videoModalClosing, setVideoModalClosing] = useState(false);\n  const [modalContent, setModalContent] = useState(null);\n\n  // State for auto-scrolling functionality - DISABLED\n  // const [autoScrollEnabled, setAutoScrollEnabled] = useState(true);\n  const [containerWidth, setContainerWidth] = useState(0);\n  const [contentWidth, setContentWidth] = useState(0);\n  const [showScrollIndicator, setShowScrollIndicator] = useState(true);\n  // const [manualInteraction, setManualInteraction] = useState(false);\n  const userInteractionTimeout = useRef(null);\n\n  // State for parallax effect on category cards\n  // const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n  const categoryGridRef = useRef(null);\n\n  // State for touch events\n  const [lastTouchX, setLastTouchX] = useState(0);\n  const [lastTouchTime, setLastTouchTime] = useState(0);\n  const [touchVelocity, setTouchVelocity] = useState(0);\n\n  // State for discover section video background\n  const [isDiscoverVideoLoaded, setIsDiscoverVideoLoaded] = useState(false);\n  const discoverVideoRef = useRef(null);\n\n  // Add new state for current slide\n  const [currentSlide, setCurrentSlide] = useState(1);\n\n  // Handle auto-rotating hero slideshow\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setActiveHeroSlide(\n        (prev) => (prev + 1) % collectionData.heroImages.length\n      );\n    }, 5000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Go to specific slide\n  const goToHeroSlide = (index) => {\n    setActiveHeroSlide(index);\n  };\n\n  // Handle section animations with debounce for better performance\n  useEffect(() => {\n    const animateSections = () => {\n      const sections = document.querySelectorAll(\".animate-section\");\n\n      sections.forEach((section) => {\n        const sectionTop = section.getBoundingClientRect().top;\n        const windowHeight = window.innerHeight;\n\n        if (sectionTop < windowHeight * 0.75) {\n          section.classList.add(\"visible\");\n        }\n      });\n    };\n\n    // Debounce function to limit frequency of scroll event handling\n    const debounce = (func, wait = 10, immediate = true) => {\n      let timeout;\n      return function () {\n        const context = this,\n          args = arguments;\n        const later = function () {\n          timeout = null;\n          if (!immediate) func.apply(context, args);\n        };\n        const callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n      };\n    };\n\n    // Run once on mount\n    animateSections();\n\n    // Add scroll listener with debounce for better performance\n    const debouncedAnimateSections = debounce(animateSections, 15);\n    window.addEventListener(\"scroll\", debouncedAnimateSections, {\n      passive: true,\n    });\n\n    return () => {\n      window.removeEventListener(\"scroll\", debouncedAnimateSections);\n    };\n  }, []);\n\n  // Use a more efficient intersection observer with fewer callbacks\n  useEffect(() => {\n    // Detect if we're on a mobile device to apply optimizations\n    const isMobile = window.innerWidth <= 768;\n\n    const observerOptions = {\n      threshold: isMobile ? 0.1 : 0.15, // Lower threshold on mobile for earlier loading\n      rootMargin: isMobile ? \"100px\" : \"0px\", // Bigger margin on mobile\n    };\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          entry.target.classList.add(\"visible\");\n          // Unobserve after animation to save resources\n          observer.unobserve(entry.target);\n        }\n      });\n    }, observerOptions);\n\n    // Only observe elements that are not already visible\n    document\n      .querySelectorAll(\".animate-section:not(.visible)\")\n      .forEach((section) => {\n        observer.observe(section);\n      });\n\n    return () => {\n      // Cleanup\n      observer.disconnect();\n    };\n  }, []);\n\n  // Handle artwork selection\n  const handleArtworkSelect = (index) => {\n    setSelectedArtwork(index);\n    document.getElementById(\"featured-artwork\").scrollIntoView({\n      behavior: \"smooth\",\n    });\n  };\n\n  // Navigate through featured artworks\n  const navigateArtwork = (direction) => {\n    if (direction === \"prev\") {\n      setSelectedArtwork(\n        (prev) =>\n          (prev - 1 + collectionData.artworks.length) %\n          collectionData.artworks.length\n      );\n    } else {\n      setSelectedArtwork((prev) => (prev + 1) % collectionData.artworks.length);\n    }\n  };\n\n  // Handle category selection - navigate to a new route instead of opening modal\n  const handleCategorySelect = (category, event) => {\n    // Add click animation effect before navigation\n    const card = event.currentTarget;\n    card.style.transition = \"transform 0.5s cubic-bezier(0.19, 1, 0.22, 1)\";\n    card.style.transform = \"scale(1.05) translateY(-15px)\";\n    card.style.opacity = \"0.8\";\n\n    // Use setTimeout to allow the animation to complete before navigation\n    setTimeout(() => {\n      // Navigate to the correct route that matches App.jsx: /collection/:category\n      navigate(`/collection/${category.id}`);\n    }, 400);\n  };\n\n  // Open artwork detail modal\n  const openArtworkDetail = (highlight) => {\n    // Find the artwork index based on the referenced ID\n    const artworkIndex = collectionData.artworks.findIndex(\n      (artwork) => artwork.id === highlight.artwork\n    );\n\n    if (artworkIndex !== -1) {\n      // Set the selected artwork\n      setSelectedArtwork(artworkIndex);\n\n      // Scroll to the featured artwork section with smooth animation\n      document.getElementById(\"featured-artwork\").scrollIntoView({\n        behavior: \"smooth\",\n      });\n    }\n  };\n\n  // Open video modal with enhanced animation\n  const openVideoModal = (highlight) => {\n    // Add a more elaborate animation sequence to the clicked item\n    const highlightElement = document.querySelector(\n      `[data-highlight-id=\"${highlight.id}\"]`\n    );\n\n    if (highlightElement) {\n      // Add pulse effect to play button\n      const playButton = highlightElement.querySelector(\".cp-play-button\");\n      let ripple = null;\n\n      if (playButton) {\n        playButton.style.transform = \"translate(-50%, -50%) scale(1.2)\";\n        playButton.style.opacity = \"1\";\n\n        // Create ripple effect\n        ripple = document.createElement(\"div\");\n        ripple.className = \"cp-video-ripple\";\n        ripple.style.position = \"absolute\";\n        ripple.style.top = \"50%\";\n        ripple.style.left = \"50%\";\n        ripple.style.transform = \"translate(-50%, -50%)\";\n        ripple.style.width = \"80px\";\n        ripple.style.height = \"80px\";\n        ripple.style.borderRadius = \"50%\";\n        ripple.style.background = \"rgba(255, 255, 255, 0.2)\";\n        ripple.style.zIndex = \"10\";\n        ripple.style.animation =\n          \"ripple-out 0.6s cubic-bezier(0.19, 1, 0.22, 1) forwards\";\n\n        highlightElement.appendChild(ripple);\n      }\n\n      // Add opening animation class\n      highlightElement.classList.add(\"video-opening\");\n\n      // Apply transform to the image for zoom effect\n      const img = highlightElement.querySelector(\".cp-highlight-img\");\n      if (img) {\n        img.style.transform = \"scale(1.15)\";\n      }\n\n      // Apply fade to the gradient\n      const gradient = highlightElement.querySelector(\".cp-highlight-gradient\");\n      if (gradient) {\n        gradient.style.opacity = \"0.9\";\n      }\n\n      // Clean up animations after delay before opening modal\n      setTimeout(() => {\n        if (ripple) ripple.remove();\n        highlightElement.classList.remove(\"video-opening\");\n\n        // Reset styles\n        if (img) img.style.transform = \"\";\n        if (gradient) gradient.style.opacity = \"\";\n        if (playButton) {\n          playButton.style.transform = \"\";\n          playButton.style.opacity = \"\";\n        }\n\n        // Now open the modal\n        setModalContent(highlight);\n        setVideoModalOpen(true);\n        document.body.style.overflow = \"hidden\"; // Prevent scrolling\n      }, 600);\n    } else {\n      // Fallback if element not found\n      setModalContent(highlight);\n      setVideoModalOpen(true);\n      document.body.style.overflow = \"hidden\";\n    }\n  };\n\n  // Close modals with animation\n  const closeModal = () => {\n    if (videoModalOpen) {\n      setVideoModalClosing(true);\n      setTimeout(() => {\n        setVideoModalOpen(false);\n        setVideoModalClosing(false);\n        setModalContent(null);\n        document.body.style.overflow = \"auto\"; // Re-enable scrolling\n      }, 300);\n    } else {\n      setArtworkModalOpen(false);\n      document.body.style.overflow = \"auto\";\n    }\n  };\n\n  // Handle modal backdrop click to close\n  const handleModalBackdropClick = (e) => {\n    if (e.target.classList.contains(\"cp-modal\")) {\n      closeModal();\n    }\n  };\n\n  // Handle download artwork\n  const handleDownload = (artwork) => {\n    const link = document.createElement(\"a\");\n    link.href = getImageUrl(artwork.image);\n    link.download = `${artwork.title.replace(/\\s+/g, \"-\").toLowerCase()}.jpg`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Handle mouse events for dragging the gallery\n  const handleMouseDown = (e) => {\n    setIsDragging(true);\n    setStartX(e.pageX - discoverWorksRef.current.offsetLeft);\n    setScrollLeft(discoverWorksRef.current.scrollLeft);\n    setShowScrollIndicator(false);\n  };\n\n  const handleMouseUp = () => {\n    setIsDragging(false);\n\n    // Set a timeout to auto-resume scrolling after manual interaction\n    if (userInteractionTimeout.current) {\n      clearTimeout(userInteractionTimeout.current);\n    }\n    userInteractionTimeout.current = setTimeout(() => {\n      setShowScrollIndicator(true);\n    }, 2000);\n  };\n\n  const handleMouseMove = useCallback(\n    (e) => {\n      if (!isDragging || !discoverWorksRef.current) return;\n      e.preventDefault();\n\n      const x = e.pageX - discoverWorksRef.current.offsetLeft;\n      const walk = (x - startX) * 2;\n\n      requestAnimationFrame(() => {\n        if (discoverWorksRef.current) {\n          discoverWorksRef.current.scrollLeft = scrollLeft - walk;\n        }\n      });\n    },\n    [isDragging, startX, scrollLeft]\n  );\n\n  // Handle touch events for mobile\n  const handleTouchStart = (e) => {\n    setIsDragging(true);\n    setStartX(e.touches[0].clientX);\n    setScrollLeft(discoverWorksRef.current.scrollLeft);\n    setShowScrollIndicator(false);\n    setLastTouchX(e.touches[0].clientX);\n    setLastTouchTime(Date.now());\n  };\n\n  const handleTouchMove = (e) => {\n    if (!isDragging || !discoverWorksRef.current) return;\n    e.preventDefault();\n    const touchX = e.touches[0].clientX;\n    const diff = startX - touchX;\n\n    // Calculate velocity\n    const now = Date.now();\n    const deltaTime = now - lastTouchTime;\n    const deltaX = touchX - lastTouchX;\n    setTouchVelocity(deltaX / deltaTime);\n\n    // Update last position and time\n    setLastTouchX(touchX);\n    setLastTouchTime(now);\n\n    // Update scroll position with improved sensitivity and smoothing\n    const sensitivity = 1.2;\n    const currentScroll = discoverWorksRef.current.scrollLeft;\n    const newPosition = currentScroll + diff * sensitivity;\n    setStartX(touchX);\n\n    // Add resistance at edges\n    if (newPosition < 0) {\n      discoverWorksRef.current.scrollLeft = Math.max(\n        newPosition * 0.5,\n        -containerWidth * 0.1\n      );\n    } else if (newPosition > contentWidth - containerWidth) {\n      const overscroll = newPosition - (contentWidth - containerWidth);\n      discoverWorksRef.current.scrollLeft =\n        contentWidth - containerWidth + overscroll * 0.5;\n    } else {\n      discoverWorksRef.current.scrollLeft = newPosition;\n    }\n  };\n\n  const handleTouchEnd = () => {\n    setIsDragging(false);\n\n    // Apply momentum scrolling\n    if (Math.abs(touchVelocity) > 0.5) {\n      const momentum = touchVelocity * 100;\n      const targetScroll = discoverWorksRef.current.scrollLeft + momentum;\n\n      // Animate to target with easing\n      const startScroll = discoverWorksRef.current.scrollLeft;\n      const startTime = Date.now();\n      const duration = 500;\n\n      const animateMomentum = () => {\n        const elapsed = Date.now() - startTime;\n        const progress = Math.min(elapsed / duration, 1);\n\n        // Easing function\n        const easeOut = (t) => 1 - Math.pow(1 - t, 3);\n        const currentProgress = easeOut(progress);\n\n        const newScroll =\n          startScroll + (targetScroll - startScroll) * currentProgress;\n\n        if (discoverWorksRef.current) {\n          // Add resistance at edges with smooth bounce\n          if (newScroll < 0) {\n            discoverWorksRef.current.scrollLeft = Math.max(newScroll * 0.5, 0);\n          } else if (newScroll > contentWidth - containerWidth) {\n            const overscroll = newScroll - (contentWidth - containerWidth);\n            discoverWorksRef.current.scrollLeft =\n              contentWidth - containerWidth + overscroll * 0.5;\n          } else {\n            discoverWorksRef.current.scrollLeft = newScroll;\n          }\n        }\n\n        if (progress < 1) {\n          requestAnimationFrame(animateMomentum);\n        } else {\n          // Resume auto-scroll after momentum ends and 1s delay\n          setTimeout(() => {\n            setShowScrollIndicator(true);\n          }, 1000);\n        }\n      };\n\n      requestAnimationFrame(animateMomentum);\n    } else {\n      // If no momentum, resume auto-scroll after 1s\n      setTimeout(() => {\n        setShowScrollIndicator(true);\n      }, 1000);\n    }\n  };\n\n  // Handle pause on hover handlers\n  const handleMouseEnter = () => {\n    setShowScrollIndicator(false);\n  };\n\n  const handleMouseLeave = () => {\n    if (!isDragging) {\n      setShowScrollIndicator(true);\n    }\n\n    // Reset manual interaction flag after timeout\n    if (!isDragging) {\n      if (userInteractionTimeout.current) {\n        clearTimeout(userInteractionTimeout.current);\n      }\n      userInteractionTimeout.current = setTimeout(() => {\n        setShowScrollIndicator(true);\n      }, 2000);\n    }\n  };\n\n  // Auto-scrolling functionality DISABLED - Users will manually drag/swipe\n\n  // Optimize resize handling\n  useEffect(() => {\n    if (!discoverWorksRef.current) return;\n\n    const calculateWidths = () => {\n      requestAnimationFrame(() => {\n        if (discoverWorksRef.current) {\n          setContainerWidth(discoverWorksRef.current.clientWidth);\n          setContentWidth(discoverWorksRef.current.scrollWidth);\n        }\n      });\n    };\n\n    const debouncedCalculateWidths = debounce(calculateWidths, 250);\n\n    calculateWidths();\n    window.addEventListener(\"resize\", debouncedCalculateWidths);\n\n    return () => {\n      window.removeEventListener(\"resize\", debouncedCalculateWidths);\n    };\n  }, []);\n\n  // Debounce function\n  const debounce = (func, wait) => {\n    let timeout;\n    return function executedFunction(...args) {\n      const later = () => {\n        clearTimeout(timeout);\n        func(...args);\n      };\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  };\n\n  // Update scroll position handler\n  const handleScroll = useCallback(() => {\n    if (!discoverWorksRef.current) return;\n\n    const scrollLeft = discoverWorksRef.current.scrollLeft;\n    const itemWidth = 300; // Width of each item\n    const currentItem = Math.round(scrollLeft / itemWidth) + 1;\n    setCurrentSlide(currentItem);\n  }, []);\n\n  // Add scroll event listener\n  useEffect(() => {\n    const scrollContainer = discoverWorksRef.current;\n    if (scrollContainer) {\n      scrollContainer.addEventListener(\"scroll\", handleScroll);\n      return () => scrollContainer.removeEventListener(\"scroll\", handleScroll);\n    }\n  }, [handleScroll]);\n\n  // Update navigation handlers\n  const handlePrevClick = () => {\n    if (!discoverWorksRef.current) return;\n    const itemWidth = 300;\n    discoverWorksRef.current.scrollLeft -= itemWidth;\n  };\n\n  const handleNextClick = () => {\n    if (!discoverWorksRef.current) return;\n    const itemWidth = 300;\n    discoverWorksRef.current.scrollLeft += itemWidth;\n  };\n\n  // Optimize image loading in discover works section\n  const renderDiscoverWorkItem = useCallback(\n    (artwork, index) => (\n      <div\n        key={artwork.id}\n        className=\"cp-discover-artwork-item\"\n        style={{\n          animationDelay: `${index * 0.1}s`,\n        }}\n        onClick={() => handleArtworkSelect(index)}\n      >\n        <div className=\"artwork-frame\">\n          <div className=\"artwork-image-container\">\n            <img\n              src={getImageUrl(artwork.image)}\n              alt={artwork.title}\n              className=\"artwork-image\"\n              loading={index < 4 ? \"eager\" : \"lazy\"}\n              decoding=\"async\"\n              width=\"100%\"\n              height=\"100%\"\n            />\n            <div className=\"artwork-info-overlay\">\n              <h3 className=\"artwork-title\">{artwork.title}</h3>\n              <p className=\"artwork-year\">{artwork.year}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    ),\n    [handleArtworkSelect]\n  );\n\n  // Optimize mouse movement handler with throttling to improve performance\n  const handleCategoryMouseMove = () => {\n    // Removed unused variables and parameter to fix linter errors\n  };\n\n  // Scroll to anchor section if state.scrollTo is present\n  useEffect(() => {\n    if (location.state && location.state.scrollTo) {\n      const el = document.getElementById(location.state.scrollTo);\n      if (el) {\n        setTimeout(() => {\n          el.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n        }, 200);\n      }\n    }\n  }, [location.state]);\n\n  // Handle discover section video loading\n  useEffect(() => {\n    if (discoverVideoRef.current) {\n      discoverVideoRef.current.addEventListener(\"loadeddata\", () => {\n        setIsDiscoverVideoLoaded(true);\n      });\n    }\n  }, []);\n\n  return (\n    <div className=\"collection-page\">\n      {/* Hero Section */}\n      <section className=\"cp-hero animate-section\">\n        <div\n          className=\"cp-hero-slides-container\"\n          style={{\n            display: \"flex\",\n            width: \"500%\",\n            height: \"100%\",\n            position: \"absolute\",\n            top: \"0\",\n            left: \"0\",\n            transform: `translateX(-${activeHeroSlide * 20}%)`,\n            transition: \"transform 0.8s cubic-bezier(0.4, 0, 0.2, 1)\",\n          }}\n        >\n          {collectionData.heroImages.map((image, index) => (\n            <div\n              key={index}\n              className={`cp-hero-slide ${\n                activeHeroSlide === index ? \"active\" : \"\"\n              }`}\n              style={{\n                width: \"20%\",\n                height: \"100%\",\n                flexShrink: 0,\n                position: \"relative\",\n                zIndex: index === activeHeroSlide ? 10 : 1,\n              }}\n            >\n              <div className=\"cp-hero-image-container\">\n                <img\n                  src={image.includes(\"http\") ? image : getImageUrl(image)}\n                  alt={`Hero slide ${index + 1}`}\n                  className=\"cp-hero-image\"\n                  loading={index === 0 ? \"eager\" : \"lazy\"}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n        <div className=\"cp-hero-overlay\"></div>\n\n        {/* Hero Slide Indicators */}\n        <div className=\"cp-hero-indicators\">\n          {collectionData.heroImages.map((_, index) => (\n            <button\n              key={index}\n              className={`cp-hero-indicator ${\n                activeHeroSlide === index ? \"active\" : \"\"\n              }`}\n              onClick={() => goToHeroSlide(index)}\n              aria-label={`Go to slide ${index + 1}`}\n            />\n          ))}\n        </div>\n\n        <div className=\"cp-hero-content\">\n          <h1 className=\"cp-hero-title\">\n            <span className=\"translated-text\">KHÁM PHÁ BỘ SƯU TẬP</span>\n          </h1>\n          <p className=\"cp-hero-subtitle\">\n            <span className=\"translated-text\">\n              Khám phá các kiệt tác từ khắp nơi, trải dài qua hàng nghìn năm\n              sáng tạo của con người\n            </span>\n          </p>\n        </div>\n\n        <div\n          className=\"diagonal-divider bottom enhanced\"\n          style={{ backgroundColor: \"transparent\" }}\n        ></div>\n      </section>\n\n      {/* Discover the Works Section */}\n      <section className=\"cp-discover-section animate-section\">\n        <div className=\"cp-discover-video-container\">\n          <video\n            ref={discoverVideoRef}\n            autoPlay\n            muted\n            loop\n            playsInline\n            className={`cp-discover-video ${\n              isDiscoverVideoLoaded ? \"loaded\" : \"\"\n            }`}\n          >\n            <source\n              src=\"https://res.cloudinary.com/dn0br7hj0/video/upload/v1748787810/about/Hero_Abouts_Resize.mp4\"\n              type=\"video/mp4\"\n            />\n          </video>\n          <div className=\"cp-discover-overlay\"></div>\n        </div>\n\n        <div className=\"cp-discover-content\">\n          <div className=\"cp-section-header\">\n            <h2 className=\"cp-section-title\">Khám Phá Tác Phẩm</h2>\n            <div className=\"cp-section-divider\"></div>\n          </div>\n\n          <div className=\"cp-discover-container\">\n            <div className=\"cp-discover-gradient-left\"></div>\n            <div className=\"cp-discover-gradient-right\"></div>\n\n            <button\n              className=\"cp-discover-nav cp-discover-prev\"\n              onClick={handlePrevClick}\n              aria-label=\"Previous artworks\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n              >\n                <path d=\"M15 18l-6-6 6-6\" />\n              </svg>\n            </button>\n\n            <button\n              className=\"cp-discover-nav cp-discover-next\"\n              onClick={handleNextClick}\n              aria-label=\"Next artworks\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n              >\n                <path d=\"M9 18l6-6-6-6\" />\n              </svg>\n            </button>\n\n            {/* <div className=\"cp-discover-counter\">\n              <span className=\"current\">{currentSlide}</span>\n              <span className=\"separator\">/</span>\n              <span className=\"total\">{collectionData.artworks.length}</span>\n            </div> */}\n\n            <div\n              className={`cp-discover-works cp-wavy-gallery ${\n                isDragging ? \"dragging\" : \"\"\n              }`}\n              ref={discoverWorksRef}\n              onMouseDown={handleMouseDown}\n              onMouseUp={handleMouseUp}\n              onMouseLeave={(e) => {\n                handleMouseUp();\n                handleMouseLeave(e);\n              }}\n              onMouseMove={handleMouseMove}\n              onTouchStart={handleTouchStart}\n              onTouchMove={handleTouchMove}\n              onTouchEnd={handleTouchEnd}\n              onMouseEnter={handleMouseEnter}\n            >\n              <div className=\"cp-discover-inner-container\">\n                {collectionData.artworks.map((artwork, index) =>\n                  renderDiscoverWorkItem(artwork, index)\n                )}\n              </div>\n            </div>\n\n            <div\n              className={`cp-scroll-indicator ${\n                !showScrollIndicator ? \"hidden\" : \"\"\n              }`}\n            >\n              <div className=\"cp-scroll-text\">Trượt để khám phá</div>\n              <div className=\"cp-scroll-arrows-indicator\">\n                <span></span>\n                <span></span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Complete Collection Section */}\n      <section className=\"cp-categories-section\" id=\"complete-collection\">\n        <div className=\"cp-categories-container\">\n          <div className=\"cp-categories-header\">\n            <h2 className=\"cp-categories-title\">Bộ Sưu Tập Hoàn Chỉnh</h2>\n            <p className=\"cp-categories-description\">\n              Khám phá bộ sưu tập đa dạng của chúng tôi được tổ chức theo từng\n              danh mục\n            </p>\n          </div>\n\n          <div\n            className=\"cp-categories-grid\"\n            ref={categoryGridRef}\n            onMouseMove={handleCategoryMouseMove}\n          >\n            {collectionData.categories.map((category) => (\n              <div\n                key={category.id}\n                className=\"cp-category-card\"\n                onClick={(e) => handleCategorySelect(category, e)}\n              >\n                <div className=\"cp-category-image-container\">\n                  <img\n                    src={getImageUrl(category.image)}\n                    alt={category.title}\n                    className=\"cp-category-image\"\n                    loading=\"lazy\"\n                  />\n                  <div className=\"cp-category-overlay\"></div>\n                </div>\n                <h3 className=\"cp-category-title\">{category.title}</h3>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Featured Artwork Section */}\n      <section className=\"cp-featured-artwork-section\" id=\"featured-artwork\">\n        <div className=\"cp-featured-container\">\n          <div className=\"cp-featured-left\">\n            <div className=\"cp-featured-image-container\">\n              <img\n                src={getImageUrl(\n                  collectionData.artworks[selectedArtwork].image\n                )}\n                alt={collectionData.artworks[selectedArtwork].title}\n                className=\"cp-featured-image\"\n              />\n              <div className=\"cp-artwork-tags\">\n                {collectionData.artworks[selectedArtwork].tags.map(\n                  (tag, index) => (\n                    <span key={index} className=\"cp-artwork-tag\">\n                      {tag}\n                    </span>\n                  )\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"cp-featured-right\">\n            <div className=\"cp-featured-details\">\n              <h2 className=\"cp-featured-title\">\n                {collectionData.artworks[selectedArtwork].title}\n              </h2>\n\n              <div className=\"cp-artwork-metadata\">\n                <div className=\"cp-metadata-item\">\n                  <span className=\"cp-metadata-label\">Tác giả</span>\n                  <span className=\"cp-metadata-value\">\n                    {collectionData.artworks[selectedArtwork].artist}\n                  </span>\n                </div>\n\n                <div className=\"cp-metadata-item\">\n                  <span className=\"cp-metadata-label\">Năm</span>\n                  <span className=\"cp-metadata-value\">\n                    {collectionData.artworks[selectedArtwork].year}\n                  </span>\n                </div>\n\n                {/* <div className=\"cp-metadata-item\">\n                  <span className=\"cp-metadata-label\">Địa điểm</span>\n                  <span className=\"cp-metadata-value\">\n                    {collectionData.artworks[selectedArtwork].location}\n                  </span>\n                </div> */}\n              </div>\n\n              <div className=\"cp-artwork-description\">\n                <p>{collectionData.artworks[selectedArtwork].description}</p>\n              </div>\n\n              <div className=\"cp-artwork-location\">\n                <div className=\"cp-location-icon\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"20\"\n                    height=\"20\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                  >\n                    <path d=\"M12 22s-8-4.5-8-11.8A8 8 0 0 1 12 2a8 8 0 0 1 8 8.2c0 7.3-8 11.8-8 11.8z\"></path>\n                    <circle cx=\"12\" cy=\"10\" r=\"3\"></circle>\n                  </svg>\n                </div>\n\n                <div className=\"cp-location-details\">\n                  <h4 className=\"cp-location-title\">Địa điểm</h4>\n                  <p className=\"cp-location-description\">\n                    {collectionData.artworks[selectedArtwork].location}\n                  </p>\n                </div>\n              </div>\n\n              <a className=\"cp-visit-button\" href=\"/visit\">\n                Lập lịch thăm viếng\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"18\"\n                  height=\"18\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                >\n                  <path d=\"M5 12h14M12 5l7 7-7 7\"></path>\n                </svg>\n              </a>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"cp-artwork-navigation\">\n          <button\n            className=\"cp-nav-button cp-prev-button\"\n            onClick={() => navigateArtwork(\"prev\")}\n            aria-label=\"Previous artwork\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            >\n              <path d=\"M19 12H5M12 19l-7-7 7-7\"></path>\n            </svg>\n          </button>\n\n          <div className=\"cp-nav-indicators\">\n            {collectionData.artworks.map((artwork, index) => (\n              <button\n                key={artwork.id}\n                className={`cp-nav-indicator ${\n                  selectedArtwork === index ? \"active\" : \"\"\n                }`}\n                onClick={() => setSelectedArtwork(index)}\n                aria-label={`View ${artwork.title}`}\n              ></button>\n            ))}\n          </div>\n\n          <button\n            className=\"cp-nav-button cp-next-button\"\n            onClick={() => navigateArtwork(\"next\")}\n            aria-label=\"Next artwork\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            >\n              <path d=\"M5 12h14M12 5l7 7-7 7\"></path>\n            </svg>\n          </button>\n        </div>\n      </section>\n\n      {/* Immersive Collection Highlights Section */}\n      <section className=\"cp-highlights-section\">\n        <div className=\"cp-highlights-container\">\n          <h2 className=\"cp-categories-title\">Điểm Nhấn Bộ Sưu Tập</h2>\n          <p className=\"cp-highlights-description\">\n            Khám phá những tác phẩm nghệ thuật tiêu biểu nhất của chúng tôi\n            thông qua video và hình ảnh chi tiết\n          </p>\n\n          <div className=\"cp-highlights-grid\">\n            {collectionData.highlights.map((highlight) => (\n              <div\n                key={highlight.id}\n                className={`cp-highlight-item ${highlight.type}-item`}\n                onClick={() =>\n                  highlight.type === \"video\"\n                    ? openVideoModal(highlight)\n                    : openArtworkDetail(highlight)\n                }\n                data-highlight-id={highlight.id}\n              >\n                <div className=\"cp-highlight-thumbnail\">\n                  <img\n                    src={getImageUrl(highlight.image)}\n                    alt={highlight.title}\n                    className=\"cp-highlight-img\"\n                    loading=\"lazy\"\n                  />\n\n                  {highlight.type === \"video\" && (\n                    <div className=\"cp-play-button\">\n                      <svg viewBox=\"0 0 100 100\" className=\"cp-play-icon\">\n                        <circle\n                          cx=\"50\"\n                          cy=\"50\"\n                          r=\"45\"\n                          className=\"cp-play-circle\"\n                        ></circle>\n                        <polygon\n                          points=\"40,30 70,50 40,70\"\n                          className=\"cp-play-triangle\"\n                        ></polygon>\n                      </svg>\n                      <span className=\"cp-video-indicator\">WATCH VIDEO</span>\n                    </div>\n                  )}\n\n                  <div className=\"cp-highlight-gradient\"></div>\n                  <span className=\"cp-highlight-category\">\n                    {highlight.category}\n                  </span>\n                </div>\n\n                <div className=\"cp-highlight-content\">\n                  <h3 className=\"cp-highlight-title\">{highlight.title}</h3>\n                  <p className=\"cp-highlight-type\">\n                    {highlight.type === \"video\" ? (\n                      <>\n                        <span className=\"cp-video-icon\">\n                          <svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n                            <path d=\"M8 5v14l11-7z\" fill=\"currentColor\"></path>\n                          </svg>\n                        </span>\n                        <span className=\"cp-video-tag\">VIDEO</span>\n                      </>\n                    ) : (\n                      <span className=\"cp-image-tag\">GALLERY</span>\n                    )}\n                  </p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Artwork Category Modal */}\n      {artworkModalOpen && modalContent && modalContent.type === \"category\" && (\n        <div className=\"cp-modal cp-category-modal\" onClick={closeModal}>\n          <div\n            className=\"cp-modal-content\"\n            onClick={(e) => e.stopPropagation()}\n          >\n            <button className=\"cp-modal-close\" onClick={closeModal}>\n              <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                <path\n                  d=\"M18 6L6 18M6 6l12 12\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                ></path>\n              </svg>\n            </button>\n\n            {/* Enhanced Category Hero Section */}\n            <div\n              className=\"cp-category-hero\"\n              style={{\n                backgroundImage: `url(${getImageUrl(\n                  modalContent.category.image\n                )})`,\n              }}\n            >\n              <div className=\"cp-category-hero-overlay\"></div>\n              <div className=\"cp-category-hero-content\">\n                <button className=\"cp-back-button\" onClick={closeModal}>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                  >\n                    <path d=\"M19 12H5M12 19l-7-7 7-7\"></path>\n                  </svg>\n                  <span>Back to Collections</span>\n                </button>\n\n                <h2 className=\"cp-category-hero-title\">\n                  {modalContent.category.title}\n                </h2>\n                <p className=\"cp-category-hero-description\">\n                  Discover masterpieces of{\" \"}\n                  {modalContent.category.title.toLowerCase()} from ancient to\n                  modern times\n                </p>\n              </div>\n            </div>\n\n            {/* Category Artworks Section */}\n            <div className=\"cp-category-artworks-section\">\n              <div className=\"cp-category-artworks-container\">\n                <div className=\"cp-category-artworks-header\">\n                  <h3 className=\"cp-category-artworks-title\">\n                    Browse Collection\n                  </h3>\n                  <p className=\"cp-category-artworks-count\">\n                    <span>{modalContent.artworks.length}</span> items\n                  </p>\n                </div>\n\n                <div className=\"cp-category-artworks-grid\">\n                  {modalContent.artworks.map((artwork, index) => (\n                    <div\n                      key={artwork.id}\n                      className=\"cp-category-artwork-card\"\n                      style={{ \"--index\": index }}\n                      onClick={() => openArtworkDetail(artwork)}\n                    >\n                      <div className=\"cp-category-artwork-image-container\">\n                        <img\n                          src={getImageUrl(artwork.image)}\n                          alt={artwork.title}\n                          loading=\"lazy\"\n                        />\n                        <div className=\"cp-category-artwork-overlay\"></div>\n                      </div>\n                      <div className=\"cp-category-artwork-info\">\n                        <h3 className=\"cp-category-artwork-title\">\n                          {artwork.title}\n                        </h3>\n                        <p className=\"cp-category-artwork-year\">\n                          {artwork.year}\n                        </p>\n                        <div className=\"cp-category-artwork-tags\">\n                          {artwork.tags.map((tag, index) => (\n                            <span\n                              key={index}\n                              className=\"cp-category-artwork-tag\"\n                            >\n                              {tag}\n                            </span>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Artwork Detail Modal */}\n      {artworkModalOpen && modalContent && modalContent.type !== \"category\" && (\n        <div className=\"cp-modal cp-artwork-modal\" onClick={closeModal}>\n          <div\n            className=\"cp-modal-content\"\n            onClick={(e) => e.stopPropagation()}\n          >\n            <button className=\"cp-modal-close\" onClick={closeModal}>\n              <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                <path\n                  d=\"M18 6L6 18M6 6l12 12\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                ></path>\n              </svg>\n            </button>\n\n            <div className=\"cp-artwork-modal-body\">\n              <div className=\"cp-artwork-modal-image-container\">\n                <img\n                  src={getImageUrl(\n                    collectionData.artworks[selectedArtwork].image\n                  )}\n                  alt={collectionData.artworks[selectedArtwork].title}\n                  className=\"cp-artwork-modal-image\"\n                />\n\n                <div className=\"cp-artwork-modal-actions\">\n                  <button\n                    className=\"cp-artwork-action-button cp-artwork-zoom\"\n                    title=\"Phóng to\"\n                  >\n                    <svg viewBox=\"0 0 24 24\" width=\"20\" height=\"20\">\n                      <path\n                        d=\"M15 3h6v6M9 21H3v-6M21 3l-7 7M3 21l7-7\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"2\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                      ></path>\n                    </svg>\n                  </button>\n\n                  <button\n                    className=\"cp-artwork-action-button\"\n                    onClick={() =>\n                      handleDownload(collectionData.artworks[selectedArtwork])\n                    }\n                    title=\"Tải xuống\"\n                  >\n                    <svg viewBox=\"0 0 24 24\" width=\"20\" height=\"20\">\n                      <path\n                        d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4M7 10l5 5 5-5M12 15V3\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"2\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                      ></path>\n                    </svg>\n                  </button>\n                </div>\n              </div>\n\n              <div className=\"cp-artwork-modal-details\">\n                <h3 className=\"cp-artwork-modal-title\">\n                  {collectionData.artworks[selectedArtwork].title}\n                </h3>\n\n                <div className=\"cp-artwork-modal-metadata\">\n                  <div className=\"cp-artwork-modal-artist\">\n                    <span className=\"cp-metadata-label\">Nghệ sĩ:</span>\n                    <span className=\"cp-metadata-value\">\n                      {collectionData.artworks[selectedArtwork].artist}\n                    </span>\n                  </div>\n\n                  <div className=\"cp-artwork-modal-year\">\n                    <span className=\"cp-metadata-label\">Năm:</span>\n                    <span className=\"cp-metadata-value\">\n                      {collectionData.artworks[selectedArtwork].year}\n                    </span>\n                  </div>\n\n                  <div className=\"cp-artwork-modal-location\">\n                    <span className=\"cp-metadata-label\">Vị trí:</span>\n                    <span className=\"cp-metadata-value\">\n                      {collectionData.artworks[selectedArtwork].location}\n                    </span>\n                  </div>\n                </div>\n\n                <div className=\"cp-artwork-modal-tags\">\n                  {collectionData.artworks[selectedArtwork].tags &&\n                    collectionData.artworks[selectedArtwork].tags.map(\n                      (tag, index) => (\n                        <span key={index} className=\"cp-artwork-modal-tag\">\n                          {tag}\n                        </span>\n                      )\n                    )}\n                </div>\n\n                <div className=\"cp-artwork-modal-description\">\n                  <p>{collectionData.artworks[selectedArtwork].description}</p>\n                </div>\n\n                <div className=\"cp-artwork-modal-visit\">\n                  <div className=\"cp-location-icon\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"22\"\n                      height=\"22\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth=\"2\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    >\n                      <path d=\"M12 22s-8-4.5-8-11.8A8 8 0 0 1 12 2a8 8 0 0 1 8 8.2c0 7.3-8 11.8-8 11.8z\"></path>\n                      <circle cx=\"12\" cy=\"10\" r=\"3\"></circle>\n                    </svg>\n                  </div>\n\n                  <div className=\"cp-artwork-modal-visit-info\">\n                    <h4 className=\"cp-visit-title\">Vị trí trưng bày</h4>\n                    <p className=\"cp-visit-description\">\n                      {collectionData.artworks[selectedArtwork].location}\n                    </p>\n                  </div>\n                </div>\n\n                <a href=\"/visit\" className=\"cp-artwork-modal-cta\">\n                  Lên kế hoạch tham quan\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"18\"\n                    height=\"18\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                  >\n                    <path d=\"M5 12h14M12 5l7 7-7 7\"></path>\n                  </svg>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Enhanced Video Modal with YouTube embedding */}\n      {videoModalOpen && modalContent && (\n        <div\n          className={`cp-modal cp-video-modal ${\n            videoModalClosing ? \"closing\" : \"\"\n          }`}\n          onClick={handleModalBackdropClick}\n        >\n          <div\n            className=\"cp-modal-content cp-video-modal-content\"\n            onClick={(e) => e.stopPropagation()}\n          >\n            <button className=\"cp-modal-close\" onClick={closeModal}>\n              <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                <path\n                  d=\"M18 6L6 18M6 6l12 12\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                ></path>\n              </svg>\n            </button>\n\n            {/* Artistic Decorative Elements */}\n            <div className=\"cp-video-decorative-element top-left\"></div>\n            <div className=\"cp-video-decorative-element bottom-right\"></div>\n            <div className=\"cp-video-decorative-element center\"></div>\n\n            <div className=\"cp-modal-video\">\n              <div className=\"cp-video-container\">\n                {/* Loading indicator */}\n                <div className=\"cp-video-loading\">\n                  <div className=\"cp-video-loading-circle\"></div>\n                </div>\n\n                {/* YouTube iframe */}\n                <iframe\n                  className=\"cp-youtube-frame\"\n                  src={`https://www.youtube.com/embed/${modalContent.youtubeId}?autoplay=1&rel=0&modestbranding=1&showinfo=0`}\n                  title={modalContent.title}\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                  allowFullScreen\n                ></iframe>\n              </div>\n\n              <div className=\"cp-modal-video-details\">\n                <div className=\"cp-modal-video-header\">\n                  <h3 className=\"cp-modal-video-title\">{modalContent.title}</h3>\n                  <span className=\"cp-modal-video-category\">\n                    {modalContent.category}\n                  </span>\n                </div>\n                <p className=\"cp-modal-video-description\">\n                  {modalContent.description}\n                </p>\n\n                {/* Related Videos Section */}\n                <div className=\"cp-video-related\">\n                  <h4 className=\"cp-video-related-title\">Video Liên Quan</h4>\n                  <div className=\"cp-video-related-items\">\n                    {collectionData.highlights\n                      .filter(\n                        (item) =>\n                          item.id !== modalContent.id && item.type === \"video\"\n                      )\n                      .slice(0, 5)\n                      .map((item) => (\n                        <div\n                          key={item.id}\n                          className=\"cp-video-related-item\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            setModalContent(item);\n                          }}\n                        >\n                          <img src={getImageUrl(item.image)} alt={item.title} />\n                          <p className=\"cp-video-related-item-title\">\n                            {item.title}\n                          </p>\n                        </div>\n                      ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CollectionPage;\n"
        ],
        "mappings": "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",
        "names": [
          "debounce",
          "scrollLeft",
          "index"
        ]
      }
    },
    {
      "name": "vite:worker",
      "start": 1751851851755,
      "end": 1751851851755,
      "order": "normal-normal"
    },
    {
      "name": "vite:define",
      "start": 1751851851755,
      "end": 1751851851756,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-html",
      "start": 1751851851756,
      "end": 1751851851756,
      "order": "normal-normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1751851851756,
      "end": 1751851851756,
      "order": "normal-normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1751851851756,
      "end": 1751851851756,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1751851851756,
      "end": 1751851851756,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1751851851756,
      "end": 1751851851756,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1751851851756,
      "end": 1751851851757,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1751851851757,
      "end": 1751851851757,
      "order": "normal"
    }
  ]
}
