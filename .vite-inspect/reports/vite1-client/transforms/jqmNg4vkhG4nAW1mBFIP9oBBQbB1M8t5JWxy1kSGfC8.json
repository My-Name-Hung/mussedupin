{
  "resolvedId": "C:/Users/.Freelancer/ONLINE/src/pages/ExhibitionDetail/ExhibitionDetail.jsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import React, { useEffect, useMemo, useState } from \"react\";\nimport { IoIosArrowBack, IoMdClose } from \"react-icons/io\";\nimport {\n  MdKeyboardArrowRight,\n  MdKeyboardDoubleArrowRight,\n} from \"react-icons/md\";\nimport { RiArrowDropDownLine } from \"react-icons/ri\";\nimport { Link, useParams } from \"react-router-dom\";\nimport \"swiper/css\";\nimport \"swiper/css/navigation\";\nimport \"swiper/css/pagination\";\nimport { Navigation, Pagination } from \"swiper/modules\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { exhibitionsData } from \"../Exhibitions/Exhibitions\";\nimport \"./ExhibitionDetail.css\";\n\nconst ExhibitionDetail = () => {\n  const { exhibitionId } = useParams();\n  const [exhibition, setExhibition] = useState(null);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  const [showFilters, setShowFilters] = useState(false);\n  const [sortOrder, setSortOrder] = useState(\"default\");\n  const [showSortDropdown, setShowSortDropdown] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [previewCount, setPreviewCount] = useState(0);\n  const [selectedFilters, setSelectedFilters] = useState({\n    price: [0, 1000000],\n    productNames: [],\n    searchTerm: \"\",\n  });\n  const [openSections, setOpenSections] = useState({\n    price: false,\n    productNames: false,\n  });\n\n  useEffect(() => {\n    const currentExhibition = exhibitionsData.find(\n      (ex) => ex.id === parseInt(exhibitionId)\n    );\n    setExhibition(currentExhibition);\n    if (currentExhibition) {\n      setFilteredProducts(currentExhibition.products);\n      setPreviewCount(currentExhibition.products.length);\n    }\n  }, [exhibitionId]);\n\n  // Calculate price range from products\n  const priceRange = useMemo(() => {\n    if (!exhibition) return { min: 0, max: 1000000 };\n    const prices = exhibition.products.map((product) =>\n      parseInt(product.price.replace(/[^\\d]/g, \"\"))\n    );\n    return {\n      min: 0,\n      max: Math.max(...prices),\n    };\n  }, [exhibition]);\n\n  // Format price for display\n  const formatPrice = (price) => {\n    return new Intl.NumberFormat(\"vi-VN\", {\n      style: \"currency\",\n      currency: \"VND\",\n    }).format(price);\n  };\n\n  // Toggle section open/close\n  const toggleSection = (section) => {\n    setOpenSections((prev) => ({\n      ...prev,\n      [section]: !prev[section],\n    }));\n  };\n\n  // Update preview count whenever filters change\n  useEffect(() => {\n    if (!exhibition) return;\n\n    const filtered = filterProducts(exhibition.products, selectedFilters);\n    setPreviewCount(filtered.length);\n  }, [selectedFilters, exhibition]);\n\n  // Filter products based on current filters\n  const filterProducts = (products, filters) => {\n    return products.filter((product) => {\n      const price = parseInt(product.price.replace(/[^\\d]/g, \"\"));\n      const priceMatch = price >= filters.price[0] && price <= filters.price[1];\n\n      const nameMatch =\n        filters.productNames.length === 0 ||\n        filters.productNames.includes(product.title);\n\n      const searchMatch =\n        !filters.searchTerm ||\n        product.title.toLowerCase().includes(filters.searchTerm.toLowerCase());\n\n      return priceMatch && nameMatch && searchMatch;\n    });\n  };\n\n  // Apply filters\n  const applyFilters = () => {\n    if (!exhibition) return;\n\n    const filtered = filterProducts(exhibition.products, selectedFilters);\n    setFilteredProducts(filtered);\n    setShowFilters(false);\n  };\n\n  // Reset filters\n  const resetFilters = () => {\n    if (!exhibition) return;\n\n    const initialFilters = {\n      price: [priceRange.min, priceRange.max],\n      productNames: [],\n      searchTerm: \"\",\n    };\n    setSelectedFilters(initialFilters);\n    setFilteredProducts(exhibition.products);\n    setPreviewCount(exhibition.products.length);\n  };\n\n  if (!exhibition) {\n    return <div>Loading...</div>;\n  }\n\n  // Handle sort change\n  const handleSortChange = (order) => {\n    setSortOrder(order);\n    setShowSortDropdown(false);\n\n    const sorted = [...filteredProducts].sort((a, b) => {\n      if (order === \"default\") {\n        return 0;\n      }\n      const priceA = parseInt(a.price.replace(/\\D/g, \"\"));\n      const priceB = parseInt(b.price.replace(/\\D/g, \"\"));\n      return order === \"asc\" ? priceA - priceB : priceB - priceA;\n    });\n    setFilteredProducts(sorted);\n  };\n\n  // Pagination\n  const productsPerPage = 10;\n  const totalPages = Math.ceil(filteredProducts.length / productsPerPage);\n  const currentProducts = filteredProducts.slice(\n    (currentPage - 1) * productsPerPage,\n    currentPage * productsPerPage\n  );\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n    window.scrollTo(0, 0);\n  };\n\n  return (\n    <div className=\"exhibition-detail-page\">\n      <Link\n        to=\"/contents/exhibitions\"\n        className=\"exhibition-detail-page-back-button\"\n      >\n        <IoIosArrowBack />\n        <span>Quay lại</span>\n      </Link>\n\n      <div className=\"exhibition-detail-page-hero\">\n        <div\n          className=\"exhibition-detail-page-hero-background\"\n          style={{ backgroundImage: `url(${exhibition.image})` }}\n        >\n          <div className=\"exhibition-detail-page-hero-overlay\"></div>\n        </div>\n        <div className=\"exhibition-detail-page-hero-content\">\n          <h1 className=\"exhibition-detail-page-hero-title\">\n            {exhibition.title}\n          </h1>\n          <p className=\"exhibition-detail-page-hero-date\">{exhibition.date}</p>\n          <img\n            src={exhibition.image}\n            alt={exhibition.title}\n            className=\"exhibition-detail-page-hero-image\"\n          />\n        </div>\n      </div>\n\n      <section className=\"exhibition-detail-page-product\">\n        <h2 className=\"exhibition-detail-page-section-title\">\n          Sản phẩm nổi bật\n        </h2>\n        <Swiper\n          modules={[Navigation, Pagination]}\n          spaceBetween={30}\n          slidesPerView={4}\n          navigation\n          pagination={{\n            clickable: true,\n            renderBullet: function (index, className) {\n              return '<span class=\"' + className + '\"></span>';\n            },\n          }}\n          autoplay={false}\n          breakpoints={{\n            320: {\n              slidesPerView: 1,\n              spaceBetween: 20,\n            },\n            480: {\n              slidesPerView: 2,\n              spaceBetween: 20,\n            },\n            768: {\n              slidesPerView: 3,\n              spaceBetween: 30,\n            },\n            1024: {\n              slidesPerView: 4,\n              spaceBetween: 30,\n            },\n          }}\n        >\n          {exhibition.products.map((product) => (\n            <SwiperSlide key={product.title}>\n              <Link\n                to={`/product/${product.title}`}\n                className=\"exhibition-detail-page-item\"\n              >\n                <div className=\"exhibition-detail-page-product-image\">\n                  <img src={product.image} alt={product.title} />\n                </div>\n                <h3 className=\"exhibition-detail-page-product-title\">\n                  {product.title}\n                </h3>\n                <p className=\"exhibition-detail-page-product-price\">\n                  {product.price}\n                </p>\n              </Link>\n            </SwiperSlide>\n          ))}\n        </Swiper>\n      </section>\n\n      <section className=\"exhibition-detail-page-info\">\n        <div className=\"exhibition-detail-page-info-container\">\n          <div className=\"exhibition-detail-page-info-image\">\n            <img src={exhibition.image} alt={exhibition.title} />\n          </div>\n          <div className=\"exhibition-detail-page-info-content\">\n            <h2 className=\"exhibition-detail-page-info-title\">\n              {exhibition.title}\n            </h2>\n            <p className=\"exhibition-detail-page-info-description\">\n              Triển lãm {exhibition.title} là một sự kiện nghệ thuật đặc biệt,\n              mang đến cho khách tham quan cơ hội khám phá và trải nghiệm những\n              tác phẩm độc đáo và ý nghĩa.\n            </p>\n            <div className=\"exhibition-detail-page-stats\">\n              <div className=\"exhibition-detail-page-stat-item\">\n                <h3>{exhibition.products.length}</h3>\n                <p>Sản phẩm</p>\n              </div>\n              <div className=\"exhibition-detail-page-stat-item\">\n                <h3>\n                  {exhibition.status === \"inprogress\"\n                    ? \"Đang diễn ra\"\n                    : \"Đã kết thúc\"}\n                </h3>\n                <p>Trạng thái</p>\n              </div>\n              <div className=\"exhibition-detail-page-stat-item\">\n                <h3>{exhibition.date}</h3>\n                <p>Thời gian</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"exhibition-detail-page-all-products\">\n        <h2 className=\"exhibition-detail-page-all-products-title\">\n          Tất cả sản phẩm\n        </h2>\n\n        <div className=\"exhibition-detail-page-sort\">\n          <div className=\"exhibition-detail-page-total-products\">\n            <span className=\"exhibition-detail-page-total-count\">\n              {filteredProducts.length}\n            </span>\n            <span>sản phẩm</span>\n          </div>\n          <div className=\"exhibition-detail-page-sort-dropdown\">\n            <div\n              className={`exhibition-detail-page-sort-header ${\n                showSortDropdown ? \"active\" : \"\"\n              }`}\n              onClick={() => setShowSortDropdown(!showSortDropdown)}\n            >\n              <span>\n                Sắp xếp theo:{\" \"}\n                {sortOrder === \"asc\"\n                  ? \"giá tăng dần\"\n                  : sortOrder === \"desc\"\n                  ? \"giá giảm dần\"\n                  : \"lựa chọn của chúng tôi\"}\n              </span>\n              <RiArrowDropDownLine\n                className={showSortDropdown ? \"rotated\" : \"\"}\n              />\n            </div>\n            {showSortDropdown && (\n              <div className=\"exhibition-detail-page-sort-menu\">\n                <div\n                  className={`exhibition-detail-page-sort-option ${\n                    sortOrder === \"default\" ? \"active\" : \"\"\n                  }`}\n                  onClick={() => handleSortChange(\"default\")}\n                >\n                  <strong>lựa chọn của chúng tôi</strong>\n                </div>\n                <div\n                  className={`exhibition-detail-page-sort-option ${\n                    sortOrder === \"asc\" ? \"active\" : \"\"\n                  }`}\n                  onClick={() => handleSortChange(\"asc\")}\n                >\n                  giá tăng dần\n                </div>\n                <div\n                  className={`exhibition-detail-page-sort-option ${\n                    sortOrder === \"desc\" ? \"active\" : \"\"\n                  }`}\n                  onClick={() => handleSortChange(\"desc\")}\n                >\n                  giá giảm dần\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"exhibition-detail-page-products-grid\">\n          {currentProducts.map((product) => (\n            <Link\n              to={`/product/${product.title}`}\n              className=\"exhibition-detail-page-product-card\"\n              key={product.title}\n            >\n              <img src={product.image} alt={product.title} />\n              <div className=\"exhibition-detail-page-product-content\">\n                <h3>{product.title}</h3>\n                <p>{product.price}</p>\n              </div>\n            </Link>\n          ))}\n        </div>\n\n        <div className=\"exhibition-detail-page-pager\">\n          {Array.from({ length: totalPages }, (_, i) => (\n            <button\n              key={i + 1}\n              className={currentPage === i + 1 ? \"active\" : \"\"}\n              onClick={() => handlePageChange(i + 1)}\n            >\n              {i + 1}\n            </button>\n          ))}\n          <button\n            onClick={() =>\n              handlePageChange(Math.min(currentPage + 1, totalPages))\n            }\n            disabled={currentPage === totalPages}\n          >\n            <MdKeyboardArrowRight />\n          </button>\n          <button\n            onClick={() =>\n              handlePageChange(Math.min(currentPage + 10, totalPages))\n            }\n            disabled={currentPage + 10 > totalPages}\n          >\n            <MdKeyboardDoubleArrowRight />\n          </button>\n        </div>\n      </section>\n\n      <button\n        className=\"exhibition-detail-page-filter-button\"\n        onClick={() => {\n          setShowFilters(true);\n          if (!showFilters) {\n            resetFilters();\n          }\n        }}\n      >\n        {showFilters ? `Kết quả (${previewCount})` : \"Bộ lọc\"}\n      </button>\n\n      {showFilters && (\n        <div className=\"exhibition-detail-page-filters-modal\">\n          <div className=\"exhibition-detail-page-filters-content\">\n            <div className=\"exhibition-detail-page-filters-header\">\n              <h2 className=\"exhibition-detail-page-filters-title\">Bộ lọc</h2>\n              <button\n                className=\"exhibition-detail-page-close-filters\"\n                onClick={() => setShowFilters(false)}\n                aria-label=\"Đóng bộ lọc\"\n              >\n                <IoMdClose />\n              </button>\n            </div>\n\n            {/* Search Input */}\n            <div className=\"exhibition-detail-page-search-section\">\n              <input\n                type=\"text\"\n                placeholder=\"Tìm kiếm sản phẩm...\"\n                value={selectedFilters.searchTerm}\n                onChange={(e) => {\n                  setSelectedFilters((prev) => ({\n                    ...prev,\n                    searchTerm: e.target.value,\n                  }));\n                }}\n                className=\"exhibition-detail-page-search-input\"\n              />\n            </div>\n\n            {/* Price Range Section */}\n            <div className=\"exhibition-detail-page-filter-section\">\n              <div\n                className=\"exhibition-detail-page-filter-header\"\n                onClick={() => toggleSection(\"price\")}\n              >\n                <h3>Giá cả</h3>\n                <RiArrowDropDownLine\n                  className={openSections.price ? \"rotated\" : \"\"}\n                />\n              </div>\n              {openSections.price && (\n                <div className=\"exhibition-detail-page-price-range\">\n                  <div className=\"exhibition-detail-page-price-inputs\">\n                    <input\n                      type=\"range\"\n                      min={priceRange.min}\n                      max={priceRange.max}\n                      value={selectedFilters.price[0]}\n                      onChange={(e) => {\n                        const minValue = parseInt(e.target.value);\n                        setSelectedFilters((prev) => ({\n                          ...prev,\n                          price: [\n                            Math.min(minValue, prev.price[1]),\n                            prev.price[1],\n                          ],\n                        }));\n                      }}\n                    />\n                    <input\n                      type=\"range\"\n                      min={priceRange.min}\n                      max={priceRange.max}\n                      value={selectedFilters.price[1]}\n                      onChange={(e) => {\n                        const maxValue = parseInt(e.target.value);\n                        setSelectedFilters((prev) => ({\n                          ...prev,\n                          price: [\n                            prev.price[0],\n                            Math.max(maxValue, prev.price[0]),\n                          ],\n                        }));\n                      }}\n                    />\n                  </div>\n                  <div className=\"exhibition-detail-page-price-values\">\n                    <span>{formatPrice(selectedFilters.price[0])}</span>\n                    <span>{formatPrice(selectedFilters.price[1])}</span>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* Product Names Section */}\n            <div className=\"exhibition-detail-page-filter-section\">\n              <div\n                className=\"exhibition-detail-page-filter-header\"\n                onClick={() => toggleSection(\"productNames\")}\n              >\n                <h3>Sản phẩm</h3>\n                <RiArrowDropDownLine\n                  className={openSections.productNames ? \"rotated\" : \"\"}\n                />\n              </div>\n              {openSections.productNames && (\n                <div className=\"exhibition-detail-page-filter-options\">\n                  {exhibition.products\n                    .filter((product) =>\n                      product.title\n                        .toLowerCase()\n                        .includes(selectedFilters.searchTerm.toLowerCase())\n                    )\n                    .map((product) => (\n                      <label\n                        key={product.title}\n                        className=\"exhibition-detail-page-filter-option\"\n                      >\n                        <input\n                          type=\"checkbox\"\n                          checked={selectedFilters.productNames.includes(\n                            product.title\n                          )}\n                          onChange={(e) => {\n                            const newNames = e.target.checked\n                              ? [...selectedFilters.productNames, product.title]\n                              : selectedFilters.productNames.filter(\n                                  (name) => name !== product.title\n                                );\n                            setSelectedFilters((prev) => ({\n                              ...prev,\n                              productNames: newNames,\n                            }));\n                          }}\n                        />\n                        <span>{product.title}</span>\n                        <span className=\"price\">{product.price}</span>\n                      </label>\n                    ))}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <button\n            className=\"exhibition-detail-page-apply-filters\"\n            onClick={applyFilters}\n            disabled={previewCount === 0}\n          >\n            Kết quả ({previewCount})\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ExhibitionDetail;\n",
      "start": 1751302170743,
      "end": 1751302170912,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1751302170912,
      "end": 1751302170912,
      "order": "pre"
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { IoIosArrowBack, IoMdClose } from \"react-icons/io\";\nimport {\n  MdKeyboardArrowRight,\n  MdKeyboardDoubleArrowRight\n} from \"react-icons/md\";\nimport { RiArrowDropDownLine } from \"react-icons/ri\";\nimport { Link, useParams } from \"react-router-dom\";\nimport \"swiper/css\";\nimport \"swiper/css/navigation\";\nimport \"swiper/css/pagination\";\nimport { Navigation, Pagination } from \"swiper/modules\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { exhibitionsData } from \"../Exhibitions/Exhibitions\";\nimport \"./ExhibitionDetail.css\";\nconst ExhibitionDetail = () => {\n  const { exhibitionId } = useParams();\n  const [exhibition, setExhibition] = useState(null);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  const [showFilters, setShowFilters] = useState(false);\n  const [sortOrder, setSortOrder] = useState(\"default\");\n  const [showSortDropdown, setShowSortDropdown] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [previewCount, setPreviewCount] = useState(0);\n  const [selectedFilters, setSelectedFilters] = useState({\n    price: [0, 1e6],\n    productNames: [],\n    searchTerm: \"\"\n  });\n  const [openSections, setOpenSections] = useState({\n    price: false,\n    productNames: false\n  });\n  useEffect(() => {\n    const currentExhibition = exhibitionsData.find(\n      (ex) => ex.id === parseInt(exhibitionId)\n    );\n    setExhibition(currentExhibition);\n    if (currentExhibition) {\n      setFilteredProducts(currentExhibition.products);\n      setPreviewCount(currentExhibition.products.length);\n    }\n  }, [exhibitionId]);\n  const priceRange = useMemo(() => {\n    if (!exhibition) return { min: 0, max: 1e6 };\n    const prices = exhibition.products.map(\n      (product) => parseInt(product.price.replace(/[^\\d]/g, \"\"))\n    );\n    return {\n      min: 0,\n      max: Math.max(...prices)\n    };\n  }, [exhibition]);\n  const formatPrice = (price) => {\n    return new Intl.NumberFormat(\"vi-VN\", {\n      style: \"currency\",\n      currency: \"VND\"\n    }).format(price);\n  };\n  const toggleSection = (section) => {\n    setOpenSections((prev) => ({\n      ...prev,\n      [section]: !prev[section]\n    }));\n  };\n  useEffect(() => {\n    if (!exhibition) return;\n    const filtered = filterProducts(exhibition.products, selectedFilters);\n    setPreviewCount(filtered.length);\n  }, [selectedFilters, exhibition]);\n  const filterProducts = (products, filters) => {\n    return products.filter((product) => {\n      const price = parseInt(product.price.replace(/[^\\d]/g, \"\"));\n      const priceMatch = price >= filters.price[0] && price <= filters.price[1];\n      const nameMatch = filters.productNames.length === 0 || filters.productNames.includes(product.title);\n      const searchMatch = !filters.searchTerm || product.title.toLowerCase().includes(filters.searchTerm.toLowerCase());\n      return priceMatch && nameMatch && searchMatch;\n    });\n  };\n  const applyFilters = () => {\n    if (!exhibition) return;\n    const filtered = filterProducts(exhibition.products, selectedFilters);\n    setFilteredProducts(filtered);\n    setShowFilters(false);\n  };\n  const resetFilters = () => {\n    if (!exhibition) return;\n    const initialFilters = {\n      price: [priceRange.min, priceRange.max],\n      productNames: [],\n      searchTerm: \"\"\n    };\n    setSelectedFilters(initialFilters);\n    setFilteredProducts(exhibition.products);\n    setPreviewCount(exhibition.products.length);\n  };\n  if (!exhibition) {\n    return /* @__PURE__ */ jsx(\"div\", { children: \"Loading...\" });\n  }\n  const handleSortChange = (order) => {\n    setSortOrder(order);\n    setShowSortDropdown(false);\n    const sorted = [...filteredProducts].sort((a, b) => {\n      if (order === \"default\") {\n        return 0;\n      }\n      const priceA = parseInt(a.price.replace(/\\D/g, \"\"));\n      const priceB = parseInt(b.price.replace(/\\D/g, \"\"));\n      return order === \"asc\" ? priceA - priceB : priceB - priceA;\n    });\n    setFilteredProducts(sorted);\n  };\n  const productsPerPage = 10;\n  const totalPages = Math.ceil(filteredProducts.length / productsPerPage);\n  const currentProducts = filteredProducts.slice(\n    (currentPage - 1) * productsPerPage,\n    currentPage * productsPerPage\n  );\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n    window.scrollTo(0, 0);\n  };\n  return /* @__PURE__ */ jsxs(\"div\", { className: \"exhibition-detail-page\", children: [\n    /* @__PURE__ */ jsxs(\n      Link,\n      {\n        to: \"/contents/exhibitions\",\n        className: \"exhibition-detail-page-back-button\",\n        children: [\n          /* @__PURE__ */ jsx(IoIosArrowBack, {}),\n          /* @__PURE__ */ jsx(\"span\", { children: \"Quay lại\" })\n        ]\n      }\n    ),\n    /* @__PURE__ */ jsxs(\"div\", { className: \"exhibition-detail-page-hero\", children: [\n      /* @__PURE__ */ jsx(\n        \"div\",\n        {\n          className: \"exhibition-detail-page-hero-background\",\n          style: { backgroundImage: `url(${exhibition.image})` },\n          children: /* @__PURE__ */ jsx(\"div\", { className: \"exhibition-detail-page-hero-overlay\" })\n        }\n      ),\n      /* @__PURE__ */ jsxs(\"div\", { className: \"exhibition-detail-page-hero-content\", children: [\n        /* @__PURE__ */ jsx(\"h1\", { className: \"exhibition-detail-page-hero-title\", children: exhibition.title }),\n        /* @__PURE__ */ jsx(\"p\", { className: \"exhibition-detail-page-hero-date\", children: exhibition.date }),\n        /* @__PURE__ */ jsx(\n          \"img\",\n          {\n            src: exhibition.image,\n            alt: exhibition.title,\n            className: \"exhibition-detail-page-hero-image\"\n          }\n        )\n      ] })\n    ] }),\n    /* @__PURE__ */ jsxs(\"section\", { className: \"exhibition-detail-page-product\", children: [\n      /* @__PURE__ */ jsx(\"h2\", { className: \"exhibition-detail-page-section-title\", children: \"Sản phẩm nổi bật\" }),\n      /* @__PURE__ */ jsx(\n        Swiper,\n        {\n          modules: [Navigation, Pagination],\n          spaceBetween: 30,\n          slidesPerView: 4,\n          navigation: true,\n          pagination: {\n            clickable: true,\n            renderBullet: function(index, className) {\n              return '<span class=\"' + className + '\"></span>';\n            }\n          },\n          autoplay: false,\n          breakpoints: {\n            320: {\n              slidesPerView: 1,\n              spaceBetween: 20\n            },\n            480: {\n              slidesPerView: 2,\n              spaceBetween: 20\n            },\n            768: {\n              slidesPerView: 3,\n              spaceBetween: 30\n            },\n            1024: {\n              slidesPerView: 4,\n              spaceBetween: 30\n            }\n          },\n          children: exhibition.products.map((product) => /* @__PURE__ */ jsx(SwiperSlide, { children: /* @__PURE__ */ jsxs(\n            Link,\n            {\n              to: `/product/${product.title}`,\n              className: \"exhibition-detail-page-item\",\n              children: [\n                /* @__PURE__ */ jsx(\"div\", { className: \"exhibition-detail-page-product-image\", children: /* @__PURE__ */ jsx(\"img\", { src: product.image, alt: product.title }) }),\n                /* @__PURE__ */ jsx(\"h3\", { className: \"exhibition-detail-page-product-title\", children: product.title }),\n                /* @__PURE__ */ jsx(\"p\", { className: \"exhibition-detail-page-product-price\", children: product.price })\n              ]\n            }\n          ) }, product.title))\n        }\n      )\n    ] }),\n    /* @__PURE__ */ jsx(\"section\", { className: \"exhibition-detail-page-info\", children: /* @__PURE__ */ jsxs(\"div\", { className: \"exhibition-detail-page-info-container\", children: [\n      /* @__PURE__ */ jsx(\"div\", { className: \"exhibition-detail-page-info-image\", children: /* @__PURE__ */ jsx(\"img\", { src: exhibition.image, alt: exhibition.title }) }),\n      /* @__PURE__ */ jsxs(\"div\", { className: \"exhibition-detail-page-info-content\", children: [\n        /* @__PURE__ */ jsx(\"h2\", { className: \"exhibition-detail-page-info-title\", children: exhibition.title }),\n        /* @__PURE__ */ jsxs(\"p\", { className: \"exhibition-detail-page-info-description\", children: [\n          \"Triển lãm \",\n          exhibition.title,\n          \" là một sự kiện nghệ thuật đặc biệt, mang đến cho khách tham quan cơ hội khám phá và trải nghiệm những tác phẩm độc đáo và ý nghĩa.\"\n        ] }),\n        /* @__PURE__ */ jsxs(\"div\", { className: \"exhibition-detail-page-stats\", children: [\n          /* @__PURE__ */ jsxs(\"div\", { className: \"exhibition-detail-page-stat-item\", children: [\n            /* @__PURE__ */ jsx(\"h3\", { children: exhibition.products.length }),\n            /* @__PURE__ */ jsx(\"p\", { children: \"Sản phẩm\" })\n          ] }),\n          /* @__PURE__ */ jsxs(\"div\", { className: \"exhibition-detail-page-stat-item\", children: [\n            /* @__PURE__ */ jsx(\"h3\", { children: exhibition.status === \"inprogress\" ? \"Đang diễn ra\" : \"Đã kết thúc\" }),\n            /* @__PURE__ */ jsx(\"p\", { children: \"Trạng thái\" })\n          ] }),\n          /* @__PURE__ */ jsxs(\"div\", { className: \"exhibition-detail-page-stat-item\", children: [\n            /* @__PURE__ */ jsx(\"h3\", { children: exhibition.date }),\n            /* @__PURE__ */ jsx(\"p\", { children: \"Thời gian\" })\n          ] })\n        ] })\n      ] })\n    ] }) }),\n    /* @__PURE__ */ jsxs(\"section\", { className: \"exhibition-detail-page-all-products\", children: [\n      /* @__PURE__ */ jsx(\"h2\", { className: \"exhibition-detail-page-all-products-title\", children: \"Tất cả sản phẩm\" }),\n      /* @__PURE__ */ jsxs(\"div\", { className: \"exhibition-detail-page-sort\", children: [\n        /* @__PURE__ */ jsxs(\"div\", { className: \"exhibition-detail-page-total-products\", children: [\n          /* @__PURE__ */ jsx(\"span\", { className: \"exhibition-detail-page-total-count\", children: filteredProducts.length }),\n          /* @__PURE__ */ jsx(\"span\", { children: \"sản phẩm\" })\n        ] }),\n        /* @__PURE__ */ jsxs(\"div\", { className: \"exhibition-detail-page-sort-dropdown\", children: [\n          /* @__PURE__ */ jsxs(\n            \"div\",\n            {\n              className: `exhibition-detail-page-sort-header ${showSortDropdown ? \"active\" : \"\"}`,\n              onClick: () => setShowSortDropdown(!showSortDropdown),\n              children: [\n                /* @__PURE__ */ jsxs(\"span\", { children: [\n                  \"Sắp xếp theo:\",\n                  \" \",\n                  sortOrder === \"asc\" ? \"giá tăng dần\" : sortOrder === \"desc\" ? \"giá giảm dần\" : \"lựa chọn của chúng tôi\"\n                ] }),\n                /* @__PURE__ */ jsx(\n                  RiArrowDropDownLine,\n                  {\n                    className: showSortDropdown ? \"rotated\" : \"\"\n                  }\n                )\n              ]\n            }\n          ),\n          showSortDropdown && /* @__PURE__ */ jsxs(\"div\", { className: \"exhibition-detail-page-sort-menu\", children: [\n            /* @__PURE__ */ jsx(\n              \"div\",\n              {\n                className: `exhibition-detail-page-sort-option ${sortOrder === \"default\" ? \"active\" : \"\"}`,\n                onClick: () => handleSortChange(\"default\"),\n                children: /* @__PURE__ */ jsx(\"strong\", { children: \"lựa chọn của chúng tôi\" })\n              }\n            ),\n            /* @__PURE__ */ jsx(\n              \"div\",\n              {\n                className: `exhibition-detail-page-sort-option ${sortOrder === \"asc\" ? \"active\" : \"\"}`,\n                onClick: () => handleSortChange(\"asc\"),\n                children: \"giá tăng dần\"\n              }\n            ),\n            /* @__PURE__ */ jsx(\n              \"div\",\n              {\n                className: `exhibition-detail-page-sort-option ${sortOrder === \"desc\" ? \"active\" : \"\"}`,\n                onClick: () => handleSortChange(\"desc\"),\n                children: \"giá giảm dần\"\n              }\n            )\n          ] })\n        ] })\n      ] }),\n      /* @__PURE__ */ jsx(\"div\", { className: \"exhibition-detail-page-products-grid\", children: currentProducts.map((product) => /* @__PURE__ */ jsxs(\n        Link,\n        {\n          to: `/product/${product.title}`,\n          className: \"exhibition-detail-page-product-card\",\n          children: [\n            /* @__PURE__ */ jsx(\"img\", { src: product.image, alt: product.title }),\n            /* @__PURE__ */ jsxs(\"div\", { className: \"exhibition-detail-page-product-content\", children: [\n              /* @__PURE__ */ jsx(\"h3\", { children: product.title }),\n              /* @__PURE__ */ jsx(\"p\", { children: product.price })\n            ] })\n          ]\n        },\n        product.title\n      )) }),\n      /* @__PURE__ */ jsxs(\"div\", { className: \"exhibition-detail-page-pager\", children: [\n        Array.from({ length: totalPages }, (_, i) => /* @__PURE__ */ jsx(\n          \"button\",\n          {\n            className: currentPage === i + 1 ? \"active\" : \"\",\n            onClick: () => handlePageChange(i + 1),\n            children: i + 1\n          },\n          i + 1\n        )),\n        /* @__PURE__ */ jsx(\n          \"button\",\n          {\n            onClick: () => handlePageChange(Math.min(currentPage + 1, totalPages)),\n            disabled: currentPage === totalPages,\n            children: /* @__PURE__ */ jsx(MdKeyboardArrowRight, {})\n          }\n        ),\n        /* @__PURE__ */ jsx(\n          \"button\",\n          {\n            onClick: () => handlePageChange(Math.min(currentPage + 10, totalPages)),\n            disabled: currentPage + 10 > totalPages,\n            children: /* @__PURE__ */ jsx(MdKeyboardDoubleArrowRight, {})\n          }\n        )\n      ] })\n    ] }),\n    /* @__PURE__ */ jsx(\n      \"button\",\n      {\n        className: \"exhibition-detail-page-filter-button\",\n        onClick: () => {\n          setShowFilters(true);\n          if (!showFilters) {\n            resetFilters();\n          }\n        },\n        children: showFilters ? `Kết quả (${previewCount})` : \"Bộ lọc\"\n      }\n    ),\n    showFilters && /* @__PURE__ */ jsxs(\"div\", { className: \"exhibition-detail-page-filters-modal\", children: [\n      /* @__PURE__ */ jsxs(\"div\", { className: \"exhibition-detail-page-filters-content\", children: [\n        /* @__PURE__ */ jsxs(\"div\", { className: \"exhibition-detail-page-filters-header\", children: [\n          /* @__PURE__ */ jsx(\"h2\", { className: \"exhibition-detail-page-filters-title\", children: \"Bộ lọc\" }),\n          /* @__PURE__ */ jsx(\n            \"button\",\n            {\n              className: \"exhibition-detail-page-close-filters\",\n              onClick: () => setShowFilters(false),\n              \"aria-label\": \"Đóng bộ lọc\",\n              children: /* @__PURE__ */ jsx(IoMdClose, {})\n            }\n          )\n        ] }),\n        /* @__PURE__ */ jsx(\"div\", { className: \"exhibition-detail-page-search-section\", children: /* @__PURE__ */ jsx(\n          \"input\",\n          {\n            type: \"text\",\n            placeholder: \"Tìm kiếm sản phẩm...\",\n            value: selectedFilters.searchTerm,\n            onChange: (e) => {\n              setSelectedFilters((prev) => ({\n                ...prev,\n                searchTerm: e.target.value\n              }));\n            },\n            className: \"exhibition-detail-page-search-input\"\n          }\n        ) }),\n        /* @__PURE__ */ jsxs(\"div\", { className: \"exhibition-detail-page-filter-section\", children: [\n          /* @__PURE__ */ jsxs(\n            \"div\",\n            {\n              className: \"exhibition-detail-page-filter-header\",\n              onClick: () => toggleSection(\"price\"),\n              children: [\n                /* @__PURE__ */ jsx(\"h3\", { children: \"Giá cả\" }),\n                /* @__PURE__ */ jsx(\n                  RiArrowDropDownLine,\n                  {\n                    className: openSections.price ? \"rotated\" : \"\"\n                  }\n                )\n              ]\n            }\n          ),\n          openSections.price && /* @__PURE__ */ jsxs(\"div\", { className: \"exhibition-detail-page-price-range\", children: [\n            /* @__PURE__ */ jsxs(\"div\", { className: \"exhibition-detail-page-price-inputs\", children: [\n              /* @__PURE__ */ jsx(\n                \"input\",\n                {\n                  type: \"range\",\n                  min: priceRange.min,\n                  max: priceRange.max,\n                  value: selectedFilters.price[0],\n                  onChange: (e) => {\n                    const minValue = parseInt(e.target.value);\n                    setSelectedFilters((prev) => ({\n                      ...prev,\n                      price: [\n                        Math.min(minValue, prev.price[1]),\n                        prev.price[1]\n                      ]\n                    }));\n                  }\n                }\n              ),\n              /* @__PURE__ */ jsx(\n                \"input\",\n                {\n                  type: \"range\",\n                  min: priceRange.min,\n                  max: priceRange.max,\n                  value: selectedFilters.price[1],\n                  onChange: (e) => {\n                    const maxValue = parseInt(e.target.value);\n                    setSelectedFilters((prev) => ({\n                      ...prev,\n                      price: [\n                        prev.price[0],\n                        Math.max(maxValue, prev.price[0])\n                      ]\n                    }));\n                  }\n                }\n              )\n            ] }),\n            /* @__PURE__ */ jsxs(\"div\", { className: \"exhibition-detail-page-price-values\", children: [\n              /* @__PURE__ */ jsx(\"span\", { children: formatPrice(selectedFilters.price[0]) }),\n              /* @__PURE__ */ jsx(\"span\", { children: formatPrice(selectedFilters.price[1]) })\n            ] })\n          ] })\n        ] }),\n        /* @__PURE__ */ jsxs(\"div\", { className: \"exhibition-detail-page-filter-section\", children: [\n          /* @__PURE__ */ jsxs(\n            \"div\",\n            {\n              className: \"exhibition-detail-page-filter-header\",\n              onClick: () => toggleSection(\"productNames\"),\n              children: [\n                /* @__PURE__ */ jsx(\"h3\", { children: \"Sản phẩm\" }),\n                /* @__PURE__ */ jsx(\n                  RiArrowDropDownLine,\n                  {\n                    className: openSections.productNames ? \"rotated\" : \"\"\n                  }\n                )\n              ]\n            }\n          ),\n          openSections.productNames && /* @__PURE__ */ jsx(\"div\", { className: \"exhibition-detail-page-filter-options\", children: exhibition.products.filter(\n            (product) => product.title.toLowerCase().includes(selectedFilters.searchTerm.toLowerCase())\n          ).map((product) => /* @__PURE__ */ jsxs(\n            \"label\",\n            {\n              className: \"exhibition-detail-page-filter-option\",\n              children: [\n                /* @__PURE__ */ jsx(\n                  \"input\",\n                  {\n                    type: \"checkbox\",\n                    checked: selectedFilters.productNames.includes(\n                      product.title\n                    ),\n                    onChange: (e) => {\n                      const newNames = e.target.checked ? [...selectedFilters.productNames, product.title] : selectedFilters.productNames.filter(\n                        (name) => name !== product.title\n                      );\n                      setSelectedFilters((prev) => ({\n                        ...prev,\n                        productNames: newNames\n                      }));\n                    }\n                  }\n                ),\n                /* @__PURE__ */ jsx(\"span\", { children: product.title }),\n                /* @__PURE__ */ jsx(\"span\", { className: \"price\", children: product.price })\n              ]\n            },\n            product.title\n          )) })\n        ] })\n      ] }),\n      /* @__PURE__ */ jsxs(\n        \"button\",\n        {\n          className: \"exhibition-detail-page-apply-filters\",\n          onClick: applyFilters,\n          disabled: previewCount === 0,\n          children: [\n            \"Kết quả (\",\n            previewCount,\n            \")\"\n          ]\n        }\n      )\n    ] })\n  ] });\n};\nexport default ExhibitionDetail;\n",
      "start": 1751302170912,
      "end": 1751302170982,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "C:/Users/.Freelancer/ONLINE/src/pages/ExhibitionDetail/ExhibitionDetail.jsx"
        ],
        "sourcesContent": [
          "import React, { useEffect, useMemo, useState } from \"react\";\nimport { IoIosArrowBack, IoMdClose } from \"react-icons/io\";\nimport {\n  MdKeyboardArrowRight,\n  MdKeyboardDoubleArrowRight,\n} from \"react-icons/md\";\nimport { RiArrowDropDownLine } from \"react-icons/ri\";\nimport { Link, useParams } from \"react-router-dom\";\nimport \"swiper/css\";\nimport \"swiper/css/navigation\";\nimport \"swiper/css/pagination\";\nimport { Navigation, Pagination } from \"swiper/modules\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { exhibitionsData } from \"../Exhibitions/Exhibitions\";\nimport \"./ExhibitionDetail.css\";\n\nconst ExhibitionDetail = () => {\n  const { exhibitionId } = useParams();\n  const [exhibition, setExhibition] = useState(null);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  const [showFilters, setShowFilters] = useState(false);\n  const [sortOrder, setSortOrder] = useState(\"default\");\n  const [showSortDropdown, setShowSortDropdown] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [previewCount, setPreviewCount] = useState(0);\n  const [selectedFilters, setSelectedFilters] = useState({\n    price: [0, 1000000],\n    productNames: [],\n    searchTerm: \"\",\n  });\n  const [openSections, setOpenSections] = useState({\n    price: false,\n    productNames: false,\n  });\n\n  useEffect(() => {\n    const currentExhibition = exhibitionsData.find(\n      (ex) => ex.id === parseInt(exhibitionId)\n    );\n    setExhibition(currentExhibition);\n    if (currentExhibition) {\n      setFilteredProducts(currentExhibition.products);\n      setPreviewCount(currentExhibition.products.length);\n    }\n  }, [exhibitionId]);\n\n  // Calculate price range from products\n  const priceRange = useMemo(() => {\n    if (!exhibition) return { min: 0, max: 1000000 };\n    const prices = exhibition.products.map((product) =>\n      parseInt(product.price.replace(/[^\\d]/g, \"\"))\n    );\n    return {\n      min: 0,\n      max: Math.max(...prices),\n    };\n  }, [exhibition]);\n\n  // Format price for display\n  const formatPrice = (price) => {\n    return new Intl.NumberFormat(\"vi-VN\", {\n      style: \"currency\",\n      currency: \"VND\",\n    }).format(price);\n  };\n\n  // Toggle section open/close\n  const toggleSection = (section) => {\n    setOpenSections((prev) => ({\n      ...prev,\n      [section]: !prev[section],\n    }));\n  };\n\n  // Update preview count whenever filters change\n  useEffect(() => {\n    if (!exhibition) return;\n\n    const filtered = filterProducts(exhibition.products, selectedFilters);\n    setPreviewCount(filtered.length);\n  }, [selectedFilters, exhibition]);\n\n  // Filter products based on current filters\n  const filterProducts = (products, filters) => {\n    return products.filter((product) => {\n      const price = parseInt(product.price.replace(/[^\\d]/g, \"\"));\n      const priceMatch = price >= filters.price[0] && price <= filters.price[1];\n\n      const nameMatch =\n        filters.productNames.length === 0 ||\n        filters.productNames.includes(product.title);\n\n      const searchMatch =\n        !filters.searchTerm ||\n        product.title.toLowerCase().includes(filters.searchTerm.toLowerCase());\n\n      return priceMatch && nameMatch && searchMatch;\n    });\n  };\n\n  // Apply filters\n  const applyFilters = () => {\n    if (!exhibition) return;\n\n    const filtered = filterProducts(exhibition.products, selectedFilters);\n    setFilteredProducts(filtered);\n    setShowFilters(false);\n  };\n\n  // Reset filters\n  const resetFilters = () => {\n    if (!exhibition) return;\n\n    const initialFilters = {\n      price: [priceRange.min, priceRange.max],\n      productNames: [],\n      searchTerm: \"\",\n    };\n    setSelectedFilters(initialFilters);\n    setFilteredProducts(exhibition.products);\n    setPreviewCount(exhibition.products.length);\n  };\n\n  if (!exhibition) {\n    return <div>Loading...</div>;\n  }\n\n  // Handle sort change\n  const handleSortChange = (order) => {\n    setSortOrder(order);\n    setShowSortDropdown(false);\n\n    const sorted = [...filteredProducts].sort((a, b) => {\n      if (order === \"default\") {\n        return 0;\n      }\n      const priceA = parseInt(a.price.replace(/\\D/g, \"\"));\n      const priceB = parseInt(b.price.replace(/\\D/g, \"\"));\n      return order === \"asc\" ? priceA - priceB : priceB - priceA;\n    });\n    setFilteredProducts(sorted);\n  };\n\n  // Pagination\n  const productsPerPage = 10;\n  const totalPages = Math.ceil(filteredProducts.length / productsPerPage);\n  const currentProducts = filteredProducts.slice(\n    (currentPage - 1) * productsPerPage,\n    currentPage * productsPerPage\n  );\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n    window.scrollTo(0, 0);\n  };\n\n  return (\n    <div className=\"exhibition-detail-page\">\n      <Link\n        to=\"/contents/exhibitions\"\n        className=\"exhibition-detail-page-back-button\"\n      >\n        <IoIosArrowBack />\n        <span>Quay lại</span>\n      </Link>\n\n      <div className=\"exhibition-detail-page-hero\">\n        <div\n          className=\"exhibition-detail-page-hero-background\"\n          style={{ backgroundImage: `url(${exhibition.image})` }}\n        >\n          <div className=\"exhibition-detail-page-hero-overlay\"></div>\n        </div>\n        <div className=\"exhibition-detail-page-hero-content\">\n          <h1 className=\"exhibition-detail-page-hero-title\">\n            {exhibition.title}\n          </h1>\n          <p className=\"exhibition-detail-page-hero-date\">{exhibition.date}</p>\n          <img\n            src={exhibition.image}\n            alt={exhibition.title}\n            className=\"exhibition-detail-page-hero-image\"\n          />\n        </div>\n      </div>\n\n      <section className=\"exhibition-detail-page-product\">\n        <h2 className=\"exhibition-detail-page-section-title\">\n          Sản phẩm nổi bật\n        </h2>\n        <Swiper\n          modules={[Navigation, Pagination]}\n          spaceBetween={30}\n          slidesPerView={4}\n          navigation\n          pagination={{\n            clickable: true,\n            renderBullet: function (index, className) {\n              return '<span class=\"' + className + '\"></span>';\n            },\n          }}\n          autoplay={false}\n          breakpoints={{\n            320: {\n              slidesPerView: 1,\n              spaceBetween: 20,\n            },\n            480: {\n              slidesPerView: 2,\n              spaceBetween: 20,\n            },\n            768: {\n              slidesPerView: 3,\n              spaceBetween: 30,\n            },\n            1024: {\n              slidesPerView: 4,\n              spaceBetween: 30,\n            },\n          }}\n        >\n          {exhibition.products.map((product) => (\n            <SwiperSlide key={product.title}>\n              <Link\n                to={`/product/${product.title}`}\n                className=\"exhibition-detail-page-item\"\n              >\n                <div className=\"exhibition-detail-page-product-image\">\n                  <img src={product.image} alt={product.title} />\n                </div>\n                <h3 className=\"exhibition-detail-page-product-title\">\n                  {product.title}\n                </h3>\n                <p className=\"exhibition-detail-page-product-price\">\n                  {product.price}\n                </p>\n              </Link>\n            </SwiperSlide>\n          ))}\n        </Swiper>\n      </section>\n\n      <section className=\"exhibition-detail-page-info\">\n        <div className=\"exhibition-detail-page-info-container\">\n          <div className=\"exhibition-detail-page-info-image\">\n            <img src={exhibition.image} alt={exhibition.title} />\n          </div>\n          <div className=\"exhibition-detail-page-info-content\">\n            <h2 className=\"exhibition-detail-page-info-title\">\n              {exhibition.title}\n            </h2>\n            <p className=\"exhibition-detail-page-info-description\">\n              Triển lãm {exhibition.title} là một sự kiện nghệ thuật đặc biệt,\n              mang đến cho khách tham quan cơ hội khám phá và trải nghiệm những\n              tác phẩm độc đáo và ý nghĩa.\n            </p>\n            <div className=\"exhibition-detail-page-stats\">\n              <div className=\"exhibition-detail-page-stat-item\">\n                <h3>{exhibition.products.length}</h3>\n                <p>Sản phẩm</p>\n              </div>\n              <div className=\"exhibition-detail-page-stat-item\">\n                <h3>\n                  {exhibition.status === \"inprogress\"\n                    ? \"Đang diễn ra\"\n                    : \"Đã kết thúc\"}\n                </h3>\n                <p>Trạng thái</p>\n              </div>\n              <div className=\"exhibition-detail-page-stat-item\">\n                <h3>{exhibition.date}</h3>\n                <p>Thời gian</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"exhibition-detail-page-all-products\">\n        <h2 className=\"exhibition-detail-page-all-products-title\">\n          Tất cả sản phẩm\n        </h2>\n\n        <div className=\"exhibition-detail-page-sort\">\n          <div className=\"exhibition-detail-page-total-products\">\n            <span className=\"exhibition-detail-page-total-count\">\n              {filteredProducts.length}\n            </span>\n            <span>sản phẩm</span>\n          </div>\n          <div className=\"exhibition-detail-page-sort-dropdown\">\n            <div\n              className={`exhibition-detail-page-sort-header ${\n                showSortDropdown ? \"active\" : \"\"\n              }`}\n              onClick={() => setShowSortDropdown(!showSortDropdown)}\n            >\n              <span>\n                Sắp xếp theo:{\" \"}\n                {sortOrder === \"asc\"\n                  ? \"giá tăng dần\"\n                  : sortOrder === \"desc\"\n                  ? \"giá giảm dần\"\n                  : \"lựa chọn của chúng tôi\"}\n              </span>\n              <RiArrowDropDownLine\n                className={showSortDropdown ? \"rotated\" : \"\"}\n              />\n            </div>\n            {showSortDropdown && (\n              <div className=\"exhibition-detail-page-sort-menu\">\n                <div\n                  className={`exhibition-detail-page-sort-option ${\n                    sortOrder === \"default\" ? \"active\" : \"\"\n                  }`}\n                  onClick={() => handleSortChange(\"default\")}\n                >\n                  <strong>lựa chọn của chúng tôi</strong>\n                </div>\n                <div\n                  className={`exhibition-detail-page-sort-option ${\n                    sortOrder === \"asc\" ? \"active\" : \"\"\n                  }`}\n                  onClick={() => handleSortChange(\"asc\")}\n                >\n                  giá tăng dần\n                </div>\n                <div\n                  className={`exhibition-detail-page-sort-option ${\n                    sortOrder === \"desc\" ? \"active\" : \"\"\n                  }`}\n                  onClick={() => handleSortChange(\"desc\")}\n                >\n                  giá giảm dần\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"exhibition-detail-page-products-grid\">\n          {currentProducts.map((product) => (\n            <Link\n              to={`/product/${product.title}`}\n              className=\"exhibition-detail-page-product-card\"\n              key={product.title}\n            >\n              <img src={product.image} alt={product.title} />\n              <div className=\"exhibition-detail-page-product-content\">\n                <h3>{product.title}</h3>\n                <p>{product.price}</p>\n              </div>\n            </Link>\n          ))}\n        </div>\n\n        <div className=\"exhibition-detail-page-pager\">\n          {Array.from({ length: totalPages }, (_, i) => (\n            <button\n              key={i + 1}\n              className={currentPage === i + 1 ? \"active\" : \"\"}\n              onClick={() => handlePageChange(i + 1)}\n            >\n              {i + 1}\n            </button>\n          ))}\n          <button\n            onClick={() =>\n              handlePageChange(Math.min(currentPage + 1, totalPages))\n            }\n            disabled={currentPage === totalPages}\n          >\n            <MdKeyboardArrowRight />\n          </button>\n          <button\n            onClick={() =>\n              handlePageChange(Math.min(currentPage + 10, totalPages))\n            }\n            disabled={currentPage + 10 > totalPages}\n          >\n            <MdKeyboardDoubleArrowRight />\n          </button>\n        </div>\n      </section>\n\n      <button\n        className=\"exhibition-detail-page-filter-button\"\n        onClick={() => {\n          setShowFilters(true);\n          if (!showFilters) {\n            resetFilters();\n          }\n        }}\n      >\n        {showFilters ? `Kết quả (${previewCount})` : \"Bộ lọc\"}\n      </button>\n\n      {showFilters && (\n        <div className=\"exhibition-detail-page-filters-modal\">\n          <div className=\"exhibition-detail-page-filters-content\">\n            <div className=\"exhibition-detail-page-filters-header\">\n              <h2 className=\"exhibition-detail-page-filters-title\">Bộ lọc</h2>\n              <button\n                className=\"exhibition-detail-page-close-filters\"\n                onClick={() => setShowFilters(false)}\n                aria-label=\"Đóng bộ lọc\"\n              >\n                <IoMdClose />\n              </button>\n            </div>\n\n            {/* Search Input */}\n            <div className=\"exhibition-detail-page-search-section\">\n              <input\n                type=\"text\"\n                placeholder=\"Tìm kiếm sản phẩm...\"\n                value={selectedFilters.searchTerm}\n                onChange={(e) => {\n                  setSelectedFilters((prev) => ({\n                    ...prev,\n                    searchTerm: e.target.value,\n                  }));\n                }}\n                className=\"exhibition-detail-page-search-input\"\n              />\n            </div>\n\n            {/* Price Range Section */}\n            <div className=\"exhibition-detail-page-filter-section\">\n              <div\n                className=\"exhibition-detail-page-filter-header\"\n                onClick={() => toggleSection(\"price\")}\n              >\n                <h3>Giá cả</h3>\n                <RiArrowDropDownLine\n                  className={openSections.price ? \"rotated\" : \"\"}\n                />\n              </div>\n              {openSections.price && (\n                <div className=\"exhibition-detail-page-price-range\">\n                  <div className=\"exhibition-detail-page-price-inputs\">\n                    <input\n                      type=\"range\"\n                      min={priceRange.min}\n                      max={priceRange.max}\n                      value={selectedFilters.price[0]}\n                      onChange={(e) => {\n                        const minValue = parseInt(e.target.value);\n                        setSelectedFilters((prev) => ({\n                          ...prev,\n                          price: [\n                            Math.min(minValue, prev.price[1]),\n                            prev.price[1],\n                          ],\n                        }));\n                      }}\n                    />\n                    <input\n                      type=\"range\"\n                      min={priceRange.min}\n                      max={priceRange.max}\n                      value={selectedFilters.price[1]}\n                      onChange={(e) => {\n                        const maxValue = parseInt(e.target.value);\n                        setSelectedFilters((prev) => ({\n                          ...prev,\n                          price: [\n                            prev.price[0],\n                            Math.max(maxValue, prev.price[0]),\n                          ],\n                        }));\n                      }}\n                    />\n                  </div>\n                  <div className=\"exhibition-detail-page-price-values\">\n                    <span>{formatPrice(selectedFilters.price[0])}</span>\n                    <span>{formatPrice(selectedFilters.price[1])}</span>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* Product Names Section */}\n            <div className=\"exhibition-detail-page-filter-section\">\n              <div\n                className=\"exhibition-detail-page-filter-header\"\n                onClick={() => toggleSection(\"productNames\")}\n              >\n                <h3>Sản phẩm</h3>\n                <RiArrowDropDownLine\n                  className={openSections.productNames ? \"rotated\" : \"\"}\n                />\n              </div>\n              {openSections.productNames && (\n                <div className=\"exhibition-detail-page-filter-options\">\n                  {exhibition.products\n                    .filter((product) =>\n                      product.title\n                        .toLowerCase()\n                        .includes(selectedFilters.searchTerm.toLowerCase())\n                    )\n                    .map((product) => (\n                      <label\n                        key={product.title}\n                        className=\"exhibition-detail-page-filter-option\"\n                      >\n                        <input\n                          type=\"checkbox\"\n                          checked={selectedFilters.productNames.includes(\n                            product.title\n                          )}\n                          onChange={(e) => {\n                            const newNames = e.target.checked\n                              ? [...selectedFilters.productNames, product.title]\n                              : selectedFilters.productNames.filter(\n                                  (name) => name !== product.title\n                                );\n                            setSelectedFilters((prev) => ({\n                              ...prev,\n                              productNames: newNames,\n                            }));\n                          }}\n                        />\n                        <span>{product.title}</span>\n                        <span className=\"price\">{product.price}</span>\n                      </label>\n                    ))}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <button\n            className=\"exhibition-detail-page-apply-filters\"\n            onClick={applyFilters}\n            disabled={previewCount === 0}\n          >\n            Kết quả ({previewCount})\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ExhibitionDetail;\n"
        ],
        "mappings": "AA4HW,cAkCL,YAlCK;AA5HX,OAAO,SAAS,WAAW,SAAS,gBAAgB;AACpD,SAAS,gBAAgB,iBAAiB;AAC1C;AAAA,EACE;AAAA,EACA;AAAA,OACK;AACP,SAAS,2BAA2B;AACpC,SAAS,MAAM,iBAAiB;AAChC,OAAO;AACP,OAAO;AACP,OAAO;AACP,SAAS,YAAY,kBAAkB;AACvC,SAAS,QAAQ,mBAAmB;AACpC,SAAS,uBAAuB;AAChC,OAAO;AAEP,MAAM,mBAAmB,MAAM;AAC7B,QAAM,EAAE,aAAa,IAAI,UAAU;AACnC,QAAM,CAAC,YAAY,aAAa,IAAI,SAAS,IAAI;AACjD,QAAM,CAAC,kBAAkB,mBAAmB,IAAI,SAAS,CAAC,CAAC;AAC3D,QAAM,CAAC,aAAa,cAAc,IAAI,SAAS,KAAK;AACpD,QAAM,CAAC,WAAW,YAAY,IAAI,SAAS,SAAS;AACpD,QAAM,CAAC,kBAAkB,mBAAmB,IAAI,SAAS,KAAK;AAC9D,QAAM,CAAC,aAAa,cAAc,IAAI,SAAS,CAAC;AAChD,QAAM,CAAC,cAAc,eAAe,IAAI,SAAS,CAAC;AAClD,QAAM,CAAC,iBAAiB,kBAAkB,IAAI,SAAS;AAAA,IACrD,OAAO,CAAC,GAAG,GAAO;AAAA,IAClB,cAAc,CAAC;AAAA,IACf,YAAY;AAAA,EACd,CAAC;AACD,QAAM,CAAC,cAAc,eAAe,IAAI,SAAS;AAAA,IAC/C,OAAO;AAAA,IACP,cAAc;AAAA,EAChB,CAAC;AAED,YAAU,MAAM;AACd,UAAM,oBAAoB,gBAAgB;AAAA,MACxC,CAAC,OAAO,GAAG,OAAO,SAAS,YAAY;AAAA,IACzC;AACA,kBAAc,iBAAiB;AAC/B,QAAI,mBAAmB;AACrB,0BAAoB,kBAAkB,QAAQ;AAC9C,sBAAgB,kBAAkB,SAAS,MAAM;AAAA,IACnD;AAAA,EACF,GAAG,CAAC,YAAY,CAAC;AAGjB,QAAM,aAAa,QAAQ,MAAM;AAC/B,QAAI,CAAC,WAAY,QAAO,EAAE,KAAK,GAAG,KAAK,IAAQ;AAC/C,UAAM,SAAS,WAAW,SAAS;AAAA,MAAI,CAAC,YACtC,SAAS,QAAQ,MAAM,QAAQ,UAAU,EAAE,CAAC;AAAA,IAC9C;AACA,WAAO;AAAA,MACL,KAAK;AAAA,MACL,KAAK,KAAK,IAAI,GAAG,MAAM;AAAA,IACzB;AAAA,EACF,GAAG,CAAC,UAAU,CAAC;AAGf,QAAM,cAAc,CAAC,UAAU;AAC7B,WAAO,IAAI,KAAK,aAAa,SAAS;AAAA,MACpC,OAAO;AAAA,MACP,UAAU;AAAA,IACZ,CAAC,EAAE,OAAO,KAAK;AAAA,EACjB;AAGA,QAAM,gBAAgB,CAAC,YAAY;AACjC,oBAAgB,CAAC,UAAU;AAAA,MACzB,GAAG;AAAA,MACH,CAAC,OAAO,GAAG,CAAC,KAAK,OAAO;AAAA,IAC1B,EAAE;AAAA,EACJ;AAGA,YAAU,MAAM;AACd,QAAI,CAAC,WAAY;AAEjB,UAAM,WAAW,eAAe,WAAW,UAAU,eAAe;AACpE,oBAAgB,SAAS,MAAM;AAAA,EACjC,GAAG,CAAC,iBAAiB,UAAU,CAAC;AAGhC,QAAM,iBAAiB,CAAC,UAAU,YAAY;AAC5C,WAAO,SAAS,OAAO,CAAC,YAAY;AAClC,YAAM,QAAQ,SAAS,QAAQ,MAAM,QAAQ,UAAU,EAAE,CAAC;AAC1D,YAAM,aAAa,SAAS,QAAQ,MAAM,CAAC,KAAK,SAAS,QAAQ,MAAM,CAAC;AAExE,YAAM,YACJ,QAAQ,aAAa,WAAW,KAChC,QAAQ,aAAa,SAAS,QAAQ,KAAK;AAE7C,YAAM,cACJ,CAAC,QAAQ,cACT,QAAQ,MAAM,YAAY,EAAE,SAAS,QAAQ,WAAW,YAAY,CAAC;AAEvE,aAAO,cAAc,aAAa;AAAA,IACpC,CAAC;AAAA,EACH;AAGA,QAAM,eAAe,MAAM;AACzB,QAAI,CAAC,WAAY;AAEjB,UAAM,WAAW,eAAe,WAAW,UAAU,eAAe;AACpE,wBAAoB,QAAQ;AAC5B,mBAAe,KAAK;AAAA,EACtB;AAGA,QAAM,eAAe,MAAM;AACzB,QAAI,CAAC,WAAY;AAEjB,UAAM,iBAAiB;AAAA,MACrB,OAAO,CAAC,WAAW,KAAK,WAAW,GAAG;AAAA,MACtC,cAAc,CAAC;AAAA,MACf,YAAY;AAAA,IACd;AACA,uBAAmB,cAAc;AACjC,wBAAoB,WAAW,QAAQ;AACvC,oBAAgB,WAAW,SAAS,MAAM;AAAA,EAC5C;AAEA,MAAI,CAAC,YAAY;AACf,WAAO,oBAAC,SAAI,wBAAU;AAAA,EACxB;AAGA,QAAM,mBAAmB,CAAC,UAAU;AAClC,iBAAa,KAAK;AAClB,wBAAoB,KAAK;AAEzB,UAAM,SAAS,CAAC,GAAG,gBAAgB,EAAE,KAAK,CAAC,GAAG,MAAM;AAClD,UAAI,UAAU,WAAW;AACvB,eAAO;AAAA,MACT;AACA,YAAM,SAAS,SAAS,EAAE,MAAM,QAAQ,OAAO,EAAE,CAAC;AAClD,YAAM,SAAS,SAAS,EAAE,MAAM,QAAQ,OAAO,EAAE,CAAC;AAClD,aAAO,UAAU,QAAQ,SAAS,SAAS,SAAS;AAAA,IACtD,CAAC;AACD,wBAAoB,MAAM;AAAA,EAC5B;AAGA,QAAM,kBAAkB;AACxB,QAAM,aAAa,KAAK,KAAK,iBAAiB,SAAS,eAAe;AACtE,QAAM,kBAAkB,iBAAiB;AAAA,KACtC,cAAc,KAAK;AAAA,IACpB,cAAc;AAAA,EAChB;AAEA,QAAM,mBAAmB,CAAC,SAAS;AACjC,mBAAe,IAAI;AACnB,WAAO,SAAS,GAAG,CAAC;AAAA,EACtB;AAEA,SACE,qBAAC,SAAI,WAAU,0BACb;AAAA;AAAA,MAAC;AAAA;AAAA,QACC,IAAG;AAAA,QACH,WAAU;AAAA,QAEV;AAAA,8BAAC,kBAAe;AAAA,UAChB,oBAAC,UAAK,sBAAQ;AAAA;AAAA;AAAA,IAChB;AAAA,IAEA,qBAAC,SAAI,WAAU,+BACb;AAAA;AAAA,QAAC;AAAA;AAAA,UACC,WAAU;AAAA,UACV,OAAO,EAAE,iBAAiB,OAAO,WAAW,KAAK,IAAI;AAAA,UAErD,8BAAC,SAAI,WAAU,uCAAsC;AAAA;AAAA,MACvD;AAAA,MACA,qBAAC,SAAI,WAAU,uCACb;AAAA,4BAAC,QAAG,WAAU,qCACX,qBAAW,OACd;AAAA,QACA,oBAAC,OAAE,WAAU,oCAAoC,qBAAW,MAAK;AAAA,QACjE;AAAA,UAAC;AAAA;AAAA,YACC,KAAK,WAAW;AAAA,YAChB,KAAK,WAAW;AAAA,YAChB,WAAU;AAAA;AAAA,QACZ;AAAA,SACF;AAAA,OACF;AAAA,IAEA,qBAAC,aAAQ,WAAU,kCACjB;AAAA,0BAAC,QAAG,WAAU,wCAAuC,8BAErD;AAAA,MACA;AAAA,QAAC;AAAA;AAAA,UACC,SAAS,CAAC,YAAY,UAAU;AAAA,UAChC,cAAc;AAAA,UACd,eAAe;AAAA,UACf,YAAU;AAAA,UACV,YAAY;AAAA,YACV,WAAW;AAAA,YACX,cAAc,SAAU,OAAO,WAAW;AACxC,qBAAO,kBAAkB,YAAY;AAAA,YACvC;AAAA,UACF;AAAA,UACA,UAAU;AAAA,UACV,aAAa;AAAA,YACX,KAAK;AAAA,cACH,eAAe;AAAA,cACf,cAAc;AAAA,YAChB;AAAA,YACA,KAAK;AAAA,cACH,eAAe;AAAA,cACf,cAAc;AAAA,YAChB;AAAA,YACA,KAAK;AAAA,cACH,eAAe;AAAA,cACf,cAAc;AAAA,YAChB;AAAA,YACA,MAAM;AAAA,cACJ,eAAe;AAAA,cACf,cAAc;AAAA,YAChB;AAAA,UACF;AAAA,UAEC,qBAAW,SAAS,IAAI,CAAC,YACxB,oBAAC,eACC;AAAA,YAAC;AAAA;AAAA,cACC,IAAI,YAAY,QAAQ,KAAK;AAAA,cAC7B,WAAU;AAAA,cAEV;AAAA,oCAAC,SAAI,WAAU,wCACb,8BAAC,SAAI,KAAK,QAAQ,OAAO,KAAK,QAAQ,OAAO,GAC/C;AAAA,gBACA,oBAAC,QAAG,WAAU,wCACX,kBAAQ,OACX;AAAA,gBACA,oBAAC,OAAE,WAAU,wCACV,kBAAQ,OACX;AAAA;AAAA;AAAA,UACF,KAdgB,QAAQ,KAe1B,CACD;AAAA;AAAA,MACH;AAAA,OACF;AAAA,IAEA,oBAAC,aAAQ,WAAU,+BACjB,+BAAC,SAAI,WAAU,yCACb;AAAA,0BAAC,SAAI,WAAU,qCACb,8BAAC,SAAI,KAAK,WAAW,OAAO,KAAK,WAAW,OAAO,GACrD;AAAA,MACA,qBAAC,SAAI,WAAU,uCACb;AAAA,4BAAC,QAAG,WAAU,qCACX,qBAAW,OACd;AAAA,QACA,qBAAC,OAAE,WAAU,2CAA0C;AAAA;AAAA,UAC1C,WAAW;AAAA,UAAM;AAAA,WAG9B;AAAA,QACA,qBAAC,SAAI,WAAU,gCACb;AAAA,+BAAC,SAAI,WAAU,oCACb;AAAA,gCAAC,QAAI,qBAAW,SAAS,QAAO;AAAA,YAChC,oBAAC,OAAE,sBAAQ;AAAA,aACb;AAAA,UACA,qBAAC,SAAI,WAAU,oCACb;AAAA,gCAAC,QACE,qBAAW,WAAW,eACnB,iBACA,eACN;AAAA,YACA,oBAAC,OAAE,wBAAU;AAAA,aACf;AAAA,UACA,qBAAC,SAAI,WAAU,oCACb;AAAA,gCAAC,QAAI,qBAAW,MAAK;AAAA,YACrB,oBAAC,OAAE,uBAAS;AAAA,aACd;AAAA,WACF;AAAA,SACF;AAAA,OACF,GACF;AAAA,IAEA,qBAAC,aAAQ,WAAU,uCACjB;AAAA,0BAAC,QAAG,WAAU,6CAA4C,6BAE1D;AAAA,MAEA,qBAAC,SAAI,WAAU,+BACb;AAAA,6BAAC,SAAI,WAAU,yCACb;AAAA,8BAAC,UAAK,WAAU,sCACb,2BAAiB,QACpB;AAAA,UACA,oBAAC,UAAK,sBAAQ;AAAA,WAChB;AAAA,QACA,qBAAC,SAAI,WAAU,wCACb;AAAA;AAAA,YAAC;AAAA;AAAA,cACC,WAAW,sCACT,mBAAmB,WAAW,EAChC;AAAA,cACA,SAAS,MAAM,oBAAoB,CAAC,gBAAgB;AAAA,cAEpD;AAAA,qCAAC,UAAK;AAAA;AAAA,kBACU;AAAA,kBACb,cAAc,QACX,iBACA,cAAc,SACd,iBACA;AAAA,mBACN;AAAA,gBACA;AAAA,kBAAC;AAAA;AAAA,oBACC,WAAW,mBAAmB,YAAY;AAAA;AAAA,gBAC5C;AAAA;AAAA;AAAA,UACF;AAAA,UACC,oBACC,qBAAC,SAAI,WAAU,oCACb;AAAA;AAAA,cAAC;AAAA;AAAA,gBACC,WAAW,sCACT,cAAc,YAAY,WAAW,EACvC;AAAA,gBACA,SAAS,MAAM,iBAAiB,SAAS;AAAA,gBAEzC,8BAAC,YAAO,oCAAsB;AAAA;AAAA,YAChC;AAAA,YACA;AAAA,cAAC;AAAA;AAAA,gBACC,WAAW,sCACT,cAAc,QAAQ,WAAW,EACnC;AAAA,gBACA,SAAS,MAAM,iBAAiB,KAAK;AAAA,gBACtC;AAAA;AAAA,YAED;AAAA,YACA;AAAA,cAAC;AAAA;AAAA,gBACC,WAAW,sCACT,cAAc,SAAS,WAAW,EACpC;AAAA,gBACA,SAAS,MAAM,iBAAiB,MAAM;AAAA,gBACvC;AAAA;AAAA,YAED;AAAA,aACF;AAAA,WAEJ;AAAA,SACF;AAAA,MAEA,oBAAC,SAAI,WAAU,wCACZ,0BAAgB,IAAI,CAAC,YACpB;AAAA,QAAC;AAAA;AAAA,UACC,IAAI,YAAY,QAAQ,KAAK;AAAA,UAC7B,WAAU;AAAA,UAGV;AAAA,gCAAC,SAAI,KAAK,QAAQ,OAAO,KAAK,QAAQ,OAAO;AAAA,YAC7C,qBAAC,SAAI,WAAU,0CACb;AAAA,kCAAC,QAAI,kBAAQ,OAAM;AAAA,cACnB,oBAAC,OAAG,kBAAQ,OAAM;AAAA,eACpB;AAAA;AAAA;AAAA,QANK,QAAQ;AAAA,MAOf,CACD,GACH;AAAA,MAEA,qBAAC,SAAI,WAAU,gCACZ;AAAA,cAAM,KAAK,EAAE,QAAQ,WAAW,GAAG,CAAC,GAAG,MACtC;AAAA,UAAC;AAAA;AAAA,YAEC,WAAW,gBAAgB,IAAI,IAAI,WAAW;AAAA,YAC9C,SAAS,MAAM,iBAAiB,IAAI,CAAC;AAAA,YAEpC,cAAI;AAAA;AAAA,UAJA,IAAI;AAAA,QAKX,CACD;AAAA,QACD;AAAA,UAAC;AAAA;AAAA,YACC,SAAS,MACP,iBAAiB,KAAK,IAAI,cAAc,GAAG,UAAU,CAAC;AAAA,YAExD,UAAU,gBAAgB;AAAA,YAE1B,8BAAC,wBAAqB;AAAA;AAAA,QACxB;AAAA,QACA;AAAA,UAAC;AAAA;AAAA,YACC,SAAS,MACP,iBAAiB,KAAK,IAAI,cAAc,IAAI,UAAU,CAAC;AAAA,YAEzD,UAAU,cAAc,KAAK;AAAA,YAE7B,8BAAC,8BAA2B;AAAA;AAAA,QAC9B;AAAA,SACF;AAAA,OACF;AAAA,IAEA;AAAA,MAAC;AAAA;AAAA,QACC,WAAU;AAAA,QACV,SAAS,MAAM;AACb,yBAAe,IAAI;AACnB,cAAI,CAAC,aAAa;AAChB,yBAAa;AAAA,UACf;AAAA,QACF;AAAA,QAEC,wBAAc,YAAY,YAAY,MAAM;AAAA;AAAA,IAC/C;AAAA,IAEC,eACC,qBAAC,SAAI,WAAU,wCACb;AAAA,2BAAC,SAAI,WAAU,0CACb;AAAA,6BAAC,SAAI,WAAU,yCACb;AAAA,8BAAC,QAAG,WAAU,wCAAuC,oBAAM;AAAA,UAC3D;AAAA,YAAC;AAAA;AAAA,cACC,WAAU;AAAA,cACV,SAAS,MAAM,eAAe,KAAK;AAAA,cACnC,cAAW;AAAA,cAEX,8BAAC,aAAU;AAAA;AAAA,UACb;AAAA,WACF;AAAA,QAGA,oBAAC,SAAI,WAAU,yCACb;AAAA,UAAC;AAAA;AAAA,YACC,MAAK;AAAA,YACL,aAAY;AAAA,YACZ,OAAO,gBAAgB;AAAA,YACvB,UAAU,CAAC,MAAM;AACf,iCAAmB,CAAC,UAAU;AAAA,gBAC5B,GAAG;AAAA,gBACH,YAAY,EAAE,OAAO;AAAA,cACvB,EAAE;AAAA,YACJ;AAAA,YACA,WAAU;AAAA;AAAA,QACZ,GACF;AAAA,QAGA,qBAAC,SAAI,WAAU,yCACb;AAAA;AAAA,YAAC;AAAA;AAAA,cACC,WAAU;AAAA,cACV,SAAS,MAAM,cAAc,OAAO;AAAA,cAEpC;AAAA,oCAAC,QAAG,oBAAM;AAAA,gBACV;AAAA,kBAAC;AAAA;AAAA,oBACC,WAAW,aAAa,QAAQ,YAAY;AAAA;AAAA,gBAC9C;AAAA;AAAA;AAAA,UACF;AAAA,UACC,aAAa,SACZ,qBAAC,SAAI,WAAU,sCACb;AAAA,iCAAC,SAAI,WAAU,uCACb;AAAA;AAAA,gBAAC;AAAA;AAAA,kBACC,MAAK;AAAA,kBACL,KAAK,WAAW;AAAA,kBAChB,KAAK,WAAW;AAAA,kBAChB,OAAO,gBAAgB,MAAM,CAAC;AAAA,kBAC9B,UAAU,CAAC,MAAM;AACf,0BAAM,WAAW,SAAS,EAAE,OAAO,KAAK;AACxC,uCAAmB,CAAC,UAAU;AAAA,sBAC5B,GAAG;AAAA,sBACH,OAAO;AAAA,wBACL,KAAK,IAAI,UAAU,KAAK,MAAM,CAAC,CAAC;AAAA,wBAChC,KAAK,MAAM,CAAC;AAAA,sBACd;AAAA,oBACF,EAAE;AAAA,kBACJ;AAAA;AAAA,cACF;AAAA,cACA;AAAA,gBAAC;AAAA;AAAA,kBACC,MAAK;AAAA,kBACL,KAAK,WAAW;AAAA,kBAChB,KAAK,WAAW;AAAA,kBAChB,OAAO,gBAAgB,MAAM,CAAC;AAAA,kBAC9B,UAAU,CAAC,MAAM;AACf,0BAAM,WAAW,SAAS,EAAE,OAAO,KAAK;AACxC,uCAAmB,CAAC,UAAU;AAAA,sBAC5B,GAAG;AAAA,sBACH,OAAO;AAAA,wBACL,KAAK,MAAM,CAAC;AAAA,wBACZ,KAAK,IAAI,UAAU,KAAK,MAAM,CAAC,CAAC;AAAA,sBAClC;AAAA,oBACF,EAAE;AAAA,kBACJ;AAAA;AAAA,cACF;AAAA,eACF;AAAA,YACA,qBAAC,SAAI,WAAU,uCACb;AAAA,kCAAC,UAAM,sBAAY,gBAAgB,MAAM,CAAC,CAAC,GAAE;AAAA,cAC7C,oBAAC,UAAM,sBAAY,gBAAgB,MAAM,CAAC,CAAC,GAAE;AAAA,eAC/C;AAAA,aACF;AAAA,WAEJ;AAAA,QAGA,qBAAC,SAAI,WAAU,yCACb;AAAA;AAAA,YAAC;AAAA;AAAA,cACC,WAAU;AAAA,cACV,SAAS,MAAM,cAAc,cAAc;AAAA,cAE3C;AAAA,oCAAC,QAAG,sBAAQ;AAAA,gBACZ;AAAA,kBAAC;AAAA;AAAA,oBACC,WAAW,aAAa,eAAe,YAAY;AAAA;AAAA,gBACrD;AAAA;AAAA;AAAA,UACF;AAAA,UACC,aAAa,gBACZ,oBAAC,SAAI,WAAU,yCACZ,qBAAW,SACT;AAAA,YAAO,CAAC,YACP,QAAQ,MACL,YAAY,EACZ,SAAS,gBAAgB,WAAW,YAAY,CAAC;AAAA,UACtD,EACC,IAAI,CAAC,YACJ;AAAA,YAAC;AAAA;AAAA,cAEC,WAAU;AAAA,cAEV;AAAA;AAAA,kBAAC;AAAA;AAAA,oBACC,MAAK;AAAA,oBACL,SAAS,gBAAgB,aAAa;AAAA,sBACpC,QAAQ;AAAA,oBACV;AAAA,oBACA,UAAU,CAAC,MAAM;AACf,4BAAM,WAAW,EAAE,OAAO,UACtB,CAAC,GAAG,gBAAgB,cAAc,QAAQ,KAAK,IAC/C,gBAAgB,aAAa;AAAA,wBAC3B,CAAC,SAAS,SAAS,QAAQ;AAAA,sBAC7B;AACJ,yCAAmB,CAAC,UAAU;AAAA,wBAC5B,GAAG;AAAA,wBACH,cAAc;AAAA,sBAChB,EAAE;AAAA,oBACJ;AAAA;AAAA,gBACF;AAAA,gBACA,oBAAC,UAAM,kBAAQ,OAAM;AAAA,gBACrB,oBAAC,UAAK,WAAU,SAAS,kBAAQ,OAAM;AAAA;AAAA;AAAA,YArBlC,QAAQ;AAAA,UAsBf,CACD,GACL;AAAA,WAEJ;AAAA,SACF;AAAA,MAEA;AAAA,QAAC;AAAA;AAAA,UACC,WAAU;AAAA,UACV,SAAS;AAAA,UACT,UAAU,iBAAiB;AAAA,UAC5B;AAAA;AAAA,YACW;AAAA,YAAa;AAAA;AAAA;AAAA,MACzB;AAAA,OACF;AAAA,KAEJ;AAEJ;AAEA,eAAe;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1751302170982,
      "end": 1751302170982,
      "order": "normal-normal"
    },
    {
      "name": "vite:define",
      "start": 1751302170982,
      "end": 1751302170982,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-html",
      "start": 1751302170983,
      "end": 1751302170983,
      "order": "normal-normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1751302170983,
      "end": 1751302170983,
      "order": "normal-normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1751302170983,
      "end": 1751302170983,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1751302170983,
      "end": 1751302170983,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1751302170983,
      "end": 1751302170983,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1751302170983,
      "end": 1751302170983,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1751302170983,
      "end": 1751302170983,
      "order": "normal"
    }
  ]
}
