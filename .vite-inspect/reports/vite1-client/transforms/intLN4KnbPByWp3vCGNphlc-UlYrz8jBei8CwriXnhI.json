{
  "resolvedId": "C:/Users/.Freelancer/TICKET/src/components/Auth/ForgotPasswordModal.jsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import React, { useState } from \"react\";\nimport { FaEye, FaEyeSlash, FaTimes } from \"react-icons/fa\";\nimport \"./ForgotPasswordModal.css\";\n\nconst ForgotPasswordModal = ({ isOpen, onClose }) => {\n  const [email, setEmail] = useState(\"\");\n  const [resetCode, setResetCode] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [step, setStep] = useState(1); // 1: email, 2: reset code, 3: new password\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const showMessage = (message, isError = false) => {\n    if (isError) {\n      setError(message);\n      setSuccess(\"\");\n    } else {\n      setSuccess(message);\n      setError(\"\");\n    }\n\n    setTimeout(() => {\n      setError(\"\");\n      setSuccess(\"\");\n    }, 2500);\n  };\n\n  const handleSendCode = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\n        \"https://mussedupin.onrender.com/api/auth/forgot-password\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ email }),\n        }\n      );\n\n      const data = await response.json();\n\n      if (data.success) {\n        showMessage(data.message);\n        setStep(2);\n      } else {\n        showMessage(data.message, true);\n      }\n    } catch (error) {\n      showMessage(\"Không thể gửi mã xác nhận. Vui lòng thử lại sau.\", true);\n    }\n  };\n\n  const handleVerifyCode = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\n        \"https://mussedupin.onrender.com/api/auth/verify-reset-code\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ email, resetCode }),\n        }\n      );\n\n      const data = await response.json();\n\n      if (data.success) {\n        showMessage(data.message);\n        setStep(3);\n      } else {\n        showMessage(data.message, true);\n      }\n    } catch (error) {\n      showMessage(\"Không thể xác thực mã. Vui lòng thử lại sau.\", true);\n    }\n  };\n\n  const handleResetPassword = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\n        \"https://mussedupin.onrender.com/api/auth/reset-password\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ email, resetCode, newPassword }),\n        }\n      );\n\n      const data = await response.json();\n\n      if (data.success) {\n        showMessage(data.message);\n        setTimeout(() => {\n          onClose();\n        }, 2500);\n      } else {\n        showMessage(data.message, true);\n      }\n    } catch (error) {\n      showMessage(\"Không thể đặt lại mật khẩu. Vui lòng thử lại sau.\", true);\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-container\">\n        <button className=\"close-button\" onClick={onClose}>\n          <FaTimes />\n        </button>\n\n        <h2 className=\"modal-title\">Quên mật khẩu?</h2>\n        <p className=\"modal-subtitle\">\n          {step === 1\n            ? \"Vui lòng nhập địa chỉ email bạn đã sử dụng khi tạo tài khoản.\"\n            : step === 2\n            ? \"Nhập mã xác nhận 6 chữ số đã được gửi đến email của bạn.\"\n            : \"Nhập mật khẩu mới cho tài khoản của bạn.\"}\n        </p>\n\n        {error && <div className=\"error-message\">{error}</div>}\n        {success && <div className=\"success-message\">{success}</div>}\n\n        {step === 1 && (\n          <form onSubmit={handleSendCode} className=\"forgot-password-form\">\n            <div className=\"form-group\">\n              <label>* Địa chỉ Email</label>\n              <input\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder=\"Nhập địa chỉ email\"\n                required\n              />\n            </div>\n\n            <button type=\"submit\" className=\"submit-button\">\n              Gửi mã xác nhận\n            </button>\n          </form>\n        )}\n\n        {step === 2 && (\n          <form onSubmit={handleVerifyCode} className=\"forgot-password-form\">\n            <div className=\"form-group\">\n              <label>* Mã xác nhận</label>\n              <input\n                type=\"text\"\n                value={resetCode}\n                onChange={(e) => setResetCode(e.target.value)}\n                placeholder=\"Nhập mã 6 chữ số\"\n                required\n                pattern=\"[0-9]{6}\"\n                maxLength=\"6\"\n              />\n            </div>\n\n            <button type=\"submit\" className=\"submit-button\">\n              Xác nhận\n            </button>\n          </form>\n        )}\n\n        {step === 3 && (\n          <form onSubmit={handleResetPassword} className=\"forgot-password-form\">\n            <div className=\"form-group\">\n              <label>* Mật khẩu mới</label>\n              <div className=\"password-input\">\n                <input\n                  type={showPassword ? \"text\" : \"password\"}\n                  value={newPassword}\n                  onChange={(e) => setNewPassword(e.target.value)}\n                  placeholder=\"Nhập mật khẩu mới\"\n                  required\n                  minLength=\"6\"\n                />\n                <button\n                  type=\"button\"\n                  className=\"password-toggle\"\n                  onClick={() => setShowPassword(!showPassword)}\n                >\n                  {showPassword ? <FaEyeSlash /> : <FaEye />}\n                </button>\n              </div>\n            </div>\n\n            <button type=\"submit\" className=\"submit-button\">\n              Đặt lại mật khẩu\n            </button>\n          </form>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ForgotPasswordModal;\n",
      "start": 1751092509101,
      "end": 1751092509954,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1751092509954,
      "end": 1751092509954,
      "order": "pre"
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport React, { useState } from \"react\";\nimport { FaEye, FaEyeSlash, FaTimes } from \"react-icons/fa\";\nimport \"./ForgotPasswordModal.css\";\nconst ForgotPasswordModal = ({ isOpen, onClose }) => {\n  const [email, setEmail] = useState(\"\");\n  const [resetCode, setResetCode] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [step, setStep] = useState(1);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const showMessage = (message, isError = false) => {\n    if (isError) {\n      setError(message);\n      setSuccess(\"\");\n    } else {\n      setSuccess(message);\n      setError(\"\");\n    }\n    setTimeout(() => {\n      setError(\"\");\n      setSuccess(\"\");\n    }, 2500);\n  };\n  const handleSendCode = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\n        \"https://mussedupin.onrender.com/api/auth/forgot-password\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({ email })\n        }\n      );\n      const data = await response.json();\n      if (data.success) {\n        showMessage(data.message);\n        setStep(2);\n      } else {\n        showMessage(data.message, true);\n      }\n    } catch (error2) {\n      showMessage(\"Không thể gửi mã xác nhận. Vui lòng thử lại sau.\", true);\n    }\n  };\n  const handleVerifyCode = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\n        \"https://mussedupin.onrender.com/api/auth/verify-reset-code\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({ email, resetCode })\n        }\n      );\n      const data = await response.json();\n      if (data.success) {\n        showMessage(data.message);\n        setStep(3);\n      } else {\n        showMessage(data.message, true);\n      }\n    } catch (error2) {\n      showMessage(\"Không thể xác thực mã. Vui lòng thử lại sau.\", true);\n    }\n  };\n  const handleResetPassword = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\n        \"https://mussedupin.onrender.com/api/auth/reset-password\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({ email, resetCode, newPassword })\n        }\n      );\n      const data = await response.json();\n      if (data.success) {\n        showMessage(data.message);\n        setTimeout(() => {\n          onClose();\n        }, 2500);\n      } else {\n        showMessage(data.message, true);\n      }\n    } catch (error2) {\n      showMessage(\"Không thể đặt lại mật khẩu. Vui lòng thử lại sau.\", true);\n    }\n  };\n  if (!isOpen) return null;\n  return /* @__PURE__ */ jsx(\"div\", { className: \"modal-overlay\", children: /* @__PURE__ */ jsxs(\"div\", { className: \"modal-container\", children: [\n    /* @__PURE__ */ jsx(\"button\", { className: \"close-button\", onClick: onClose, children: /* @__PURE__ */ jsx(FaTimes, {}) }),\n    /* @__PURE__ */ jsx(\"h2\", { className: \"modal-title\", children: \"Quên mật khẩu?\" }),\n    /* @__PURE__ */ jsx(\"p\", { className: \"modal-subtitle\", children: step === 1 ? \"Vui lòng nhập địa chỉ email bạn đã sử dụng khi tạo tài khoản.\" : step === 2 ? \"Nhập mã xác nhận 6 chữ số đã được gửi đến email của bạn.\" : \"Nhập mật khẩu mới cho tài khoản của bạn.\" }),\n    error && /* @__PURE__ */ jsx(\"div\", { className: \"error-message\", children: error }),\n    success && /* @__PURE__ */ jsx(\"div\", { className: \"success-message\", children: success }),\n    step === 1 && /* @__PURE__ */ jsxs(\"form\", { onSubmit: handleSendCode, className: \"forgot-password-form\", children: [\n      /* @__PURE__ */ jsxs(\"div\", { className: \"form-group\", children: [\n        /* @__PURE__ */ jsx(\"label\", { children: \"* Địa chỉ Email\" }),\n        /* @__PURE__ */ jsx(\n          \"input\",\n          {\n            type: \"email\",\n            value: email,\n            onChange: (e) => setEmail(e.target.value),\n            placeholder: \"Nhập địa chỉ email\",\n            required: true\n          }\n        )\n      ] }),\n      /* @__PURE__ */ jsx(\"button\", { type: \"submit\", className: \"submit-button\", children: \"Gửi mã xác nhận\" })\n    ] }),\n    step === 2 && /* @__PURE__ */ jsxs(\"form\", { onSubmit: handleVerifyCode, className: \"forgot-password-form\", children: [\n      /* @__PURE__ */ jsxs(\"div\", { className: \"form-group\", children: [\n        /* @__PURE__ */ jsx(\"label\", { children: \"* Mã xác nhận\" }),\n        /* @__PURE__ */ jsx(\n          \"input\",\n          {\n            type: \"text\",\n            value: resetCode,\n            onChange: (e) => setResetCode(e.target.value),\n            placeholder: \"Nhập mã 6 chữ số\",\n            required: true,\n            pattern: \"[0-9]{6}\",\n            maxLength: \"6\"\n          }\n        )\n      ] }),\n      /* @__PURE__ */ jsx(\"button\", { type: \"submit\", className: \"submit-button\", children: \"Xác nhận\" })\n    ] }),\n    step === 3 && /* @__PURE__ */ jsxs(\"form\", { onSubmit: handleResetPassword, className: \"forgot-password-form\", children: [\n      /* @__PURE__ */ jsxs(\"div\", { className: \"form-group\", children: [\n        /* @__PURE__ */ jsx(\"label\", { children: \"* Mật khẩu mới\" }),\n        /* @__PURE__ */ jsxs(\"div\", { className: \"password-input\", children: [\n          /* @__PURE__ */ jsx(\n            \"input\",\n            {\n              type: showPassword ? \"text\" : \"password\",\n              value: newPassword,\n              onChange: (e) => setNewPassword(e.target.value),\n              placeholder: \"Nhập mật khẩu mới\",\n              required: true,\n              minLength: \"6\"\n            }\n          ),\n          /* @__PURE__ */ jsx(\n            \"button\",\n            {\n              type: \"button\",\n              className: \"password-toggle\",\n              onClick: () => setShowPassword(!showPassword),\n              children: showPassword ? /* @__PURE__ */ jsx(FaEyeSlash, {}) : /* @__PURE__ */ jsx(FaEye, {})\n            }\n          )\n        ] })\n      ] }),\n      /* @__PURE__ */ jsx(\"button\", { type: \"submit\", className: \"submit-button\", children: \"Đặt lại mật khẩu\" })\n    ] })\n  ] }) });\n};\nexport default ForgotPasswordModal;\n",
      "start": 1751092509954,
      "end": 1751092510060,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "C:/Users/.Freelancer/TICKET/src/components/Auth/ForgotPasswordModal.jsx"
        ],
        "sourcesContent": [
          "import React, { useState } from \"react\";\nimport { FaEye, FaEyeSlash, FaTimes } from \"react-icons/fa\";\nimport \"./ForgotPasswordModal.css\";\n\nconst ForgotPasswordModal = ({ isOpen, onClose }) => {\n  const [email, setEmail] = useState(\"\");\n  const [resetCode, setResetCode] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [step, setStep] = useState(1); // 1: email, 2: reset code, 3: new password\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const showMessage = (message, isError = false) => {\n    if (isError) {\n      setError(message);\n      setSuccess(\"\");\n    } else {\n      setSuccess(message);\n      setError(\"\");\n    }\n\n    setTimeout(() => {\n      setError(\"\");\n      setSuccess(\"\");\n    }, 2500);\n  };\n\n  const handleSendCode = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\n        \"https://mussedupin.onrender.com/api/auth/forgot-password\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ email }),\n        }\n      );\n\n      const data = await response.json();\n\n      if (data.success) {\n        showMessage(data.message);\n        setStep(2);\n      } else {\n        showMessage(data.message, true);\n      }\n    } catch (error) {\n      showMessage(\"Không thể gửi mã xác nhận. Vui lòng thử lại sau.\", true);\n    }\n  };\n\n  const handleVerifyCode = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\n        \"https://mussedupin.onrender.com/api/auth/verify-reset-code\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ email, resetCode }),\n        }\n      );\n\n      const data = await response.json();\n\n      if (data.success) {\n        showMessage(data.message);\n        setStep(3);\n      } else {\n        showMessage(data.message, true);\n      }\n    } catch (error) {\n      showMessage(\"Không thể xác thực mã. Vui lòng thử lại sau.\", true);\n    }\n  };\n\n  const handleResetPassword = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\n        \"https://mussedupin.onrender.com/api/auth/reset-password\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ email, resetCode, newPassword }),\n        }\n      );\n\n      const data = await response.json();\n\n      if (data.success) {\n        showMessage(data.message);\n        setTimeout(() => {\n          onClose();\n        }, 2500);\n      } else {\n        showMessage(data.message, true);\n      }\n    } catch (error) {\n      showMessage(\"Không thể đặt lại mật khẩu. Vui lòng thử lại sau.\", true);\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-container\">\n        <button className=\"close-button\" onClick={onClose}>\n          <FaTimes />\n        </button>\n\n        <h2 className=\"modal-title\">Quên mật khẩu?</h2>\n        <p className=\"modal-subtitle\">\n          {step === 1\n            ? \"Vui lòng nhập địa chỉ email bạn đã sử dụng khi tạo tài khoản.\"\n            : step === 2\n            ? \"Nhập mã xác nhận 6 chữ số đã được gửi đến email của bạn.\"\n            : \"Nhập mật khẩu mới cho tài khoản của bạn.\"}\n        </p>\n\n        {error && <div className=\"error-message\">{error}</div>}\n        {success && <div className=\"success-message\">{success}</div>}\n\n        {step === 1 && (\n          <form onSubmit={handleSendCode} className=\"forgot-password-form\">\n            <div className=\"form-group\">\n              <label>* Địa chỉ Email</label>\n              <input\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder=\"Nhập địa chỉ email\"\n                required\n              />\n            </div>\n\n            <button type=\"submit\" className=\"submit-button\">\n              Gửi mã xác nhận\n            </button>\n          </form>\n        )}\n\n        {step === 2 && (\n          <form onSubmit={handleVerifyCode} className=\"forgot-password-form\">\n            <div className=\"form-group\">\n              <label>* Mã xác nhận</label>\n              <input\n                type=\"text\"\n                value={resetCode}\n                onChange={(e) => setResetCode(e.target.value)}\n                placeholder=\"Nhập mã 6 chữ số\"\n                required\n                pattern=\"[0-9]{6}\"\n                maxLength=\"6\"\n              />\n            </div>\n\n            <button type=\"submit\" className=\"submit-button\">\n              Xác nhận\n            </button>\n          </form>\n        )}\n\n        {step === 3 && (\n          <form onSubmit={handleResetPassword} className=\"forgot-password-form\">\n            <div className=\"form-group\">\n              <label>* Mật khẩu mới</label>\n              <div className=\"password-input\">\n                <input\n                  type={showPassword ? \"text\" : \"password\"}\n                  value={newPassword}\n                  onChange={(e) => setNewPassword(e.target.value)}\n                  placeholder=\"Nhập mật khẩu mới\"\n                  required\n                  minLength=\"6\"\n                />\n                <button\n                  type=\"button\"\n                  className=\"password-toggle\"\n                  onClick={() => setShowPassword(!showPassword)}\n                >\n                  {showPassword ? <FaEyeSlash /> : <FaEye />}\n                </button>\n              </div>\n            </div>\n\n            <button type=\"submit\" className=\"submit-button\">\n              Đặt lại mật khẩu\n            </button>\n          </form>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ForgotPasswordModal;\n"
        ],
        "mappings": "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",
        "names": [
          "error"
        ]
      }
    },
    {
      "name": "vite:worker",
      "start": 1751092510060,
      "end": 1751092510060,
      "order": "normal-normal"
    },
    {
      "name": "vite:define",
      "start": 1751092510060,
      "end": 1751092510060,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-html",
      "start": 1751092510060,
      "end": 1751092510060,
      "order": "normal-normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1751092510061,
      "end": 1751092510061,
      "order": "normal-normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1751092510061,
      "end": 1751092510061,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1751092510062,
      "end": 1751092510062,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1751092510062,
      "end": 1751092510062,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1751092510062,
      "end": 1751092510063,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1751092510063,
      "end": 1751092510063,
      "order": "normal"
    }
  ]
}
