{
  "resolvedId": "C:/Users/.Freelancer/MUSSEEDUPIN/node_modules/react-i18next/dist/es/utils.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "export const warn = (i18n, code, msg, rest) => {\n  const args = [msg, {\n    code,\n    ...(rest || {})\n  }];\n  if (i18n?.services?.logger?.forward) {\n    return i18n.services.logger.forward(args, 'warn', 'react-i18next::', true);\n  }\n  if (isString(args[0])) args[0] = `react-i18next:: ${args[0]}`;\n  if (i18n?.services?.logger?.warn) {\n    i18n.services.logger.warn(...args);\n  } else if (console?.warn) {\n    console.warn(...args);\n  }\n};\nconst alreadyWarned = {};\nexport const warnOnce = (i18n, code, msg, rest) => {\n  if (isString(msg) && alreadyWarned[msg]) return;\n  if (isString(msg)) alreadyWarned[msg] = new Date();\n  warn(i18n, code, msg, rest);\n};\nconst loadedClb = (i18n, cb) => () => {\n  if (i18n.isInitialized) {\n    cb();\n  } else {\n    const initialized = () => {\n      setTimeout(() => {\n        i18n.off('initialized', initialized);\n      }, 0);\n      cb();\n    };\n    i18n.on('initialized', initialized);\n  }\n};\nexport const loadNamespaces = (i18n, ns, cb) => {\n  i18n.loadNamespaces(ns, loadedClb(i18n, cb));\n};\nexport const loadLanguages = (i18n, lng, ns, cb) => {\n  if (isString(ns)) ns = [ns];\n  if (i18n.options.preload && i18n.options.preload.indexOf(lng) > -1) return loadNamespaces(i18n, ns, cb);\n  ns.forEach(n => {\n    if (i18n.options.ns.indexOf(n) < 0) i18n.options.ns.push(n);\n  });\n  i18n.loadLanguages(lng, loadedClb(i18n, cb));\n};\nexport const hasLoadedNamespace = (ns, i18n, options = {}) => {\n  if (!i18n.languages || !i18n.languages.length) {\n    warnOnce(i18n, 'NO_LANGUAGES', 'i18n.languages were undefined or empty', {\n      languages: i18n.languages\n    });\n    return true;\n  }\n  return i18n.hasLoadedNamespace(ns, {\n    lng: options.lng,\n    precheck: (i18nInstance, loadNotPending) => {\n      if (options.bindI18n?.indexOf('languageChanging') > -1 && i18nInstance.services.backendConnector.backend && i18nInstance.isLanguageChangingTo && !loadNotPending(i18nInstance.isLanguageChangingTo, ns)) return false;\n    }\n  });\n};\nexport const getDisplayName = Component => Component.displayName || Component.name || (isString(Component) && Component.length > 0 ? Component : 'Unknown');\nexport const isString = obj => typeof obj === 'string';\nexport const isObject = obj => typeof obj === 'object' && obj !== null;",
      "start": 1751851852120,
      "end": 1751851852996,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1751851852996,
      "end": 1751851852996,
      "order": "pre"
    },
    {
      "name": "vite:esbuild",
      "start": 1751851852996,
      "end": 1751851852996,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1751851852996,
      "end": 1751851852996,
      "order": "normal-normal"
    },
    {
      "name": "vite:define",
      "start": 1751851852996,
      "end": 1751851852996,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-html",
      "start": 1751851852996,
      "end": 1751851852996,
      "order": "normal-normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1751851852996,
      "end": 1751851852996,
      "order": "normal-normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1751851852996,
      "end": 1751851852996,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1751851852997,
      "end": 1751851852997,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1751851852997,
      "end": 1751851852997,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1751851852997,
      "end": 1751851852997,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1751851852997,
      "end": 1751851852997,
      "order": "normal"
    }
  ]
}
