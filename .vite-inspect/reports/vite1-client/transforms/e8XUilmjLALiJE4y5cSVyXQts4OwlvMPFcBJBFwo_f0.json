{
  "resolvedId": "C:/Users/.Freelancer/ONLINE/node_modules/framer-motion/dist/es/animation/hooks/animation-controls.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { invariant } from 'motion-utils';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { animateVisualElement } from '../interfaces/visual-element.mjs';\n\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    let hasMounted = false;\n    /**\n     * A collection of linked component animation controls.\n     */\n    const subscribers = new Set();\n    const controls = {\n        subscribe(visualElement) {\n            subscribers.add(visualElement);\n            return () => void subscribers.delete(visualElement);\n        },\n        start(definition, transitionOverride) {\n            invariant(hasMounted, \"controls.start() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            const animations = [];\n            subscribers.forEach((visualElement) => {\n                animations.push(animateVisualElement(visualElement, definition, {\n                    transitionOverride,\n                }));\n            });\n            return Promise.all(animations);\n        },\n        set(definition) {\n            invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach((visualElement) => {\n                setValues(visualElement, definition);\n            });\n        },\n        stop() {\n            subscribers.forEach((visualElement) => {\n                stopAnimation(visualElement);\n            });\n        },\n        mount() {\n            hasMounted = true;\n            return () => {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\nexport { animationControls, setValues };\n",
      "start": 1751092510943,
      "end": 1751092511104,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1751092511105,
      "end": 1751092511105,
      "order": "pre"
    },
    {
      "name": "vite:esbuild",
      "start": 1751092511105,
      "end": 1751092511105,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1751092511105,
      "end": 1751092511105,
      "order": "normal-normal"
    },
    {
      "name": "vite:define",
      "start": 1751092511105,
      "end": 1751092511105,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-html",
      "start": 1751092511105,
      "end": 1751092511105,
      "order": "normal-normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1751092511105,
      "end": 1751092511105,
      "order": "normal-normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1751092511105,
      "end": 1751092511105,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1751092511105,
      "end": 1751092511105,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1751092511105,
      "end": 1751092511105,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1751092511105,
      "end": 1751092511105,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1751092511105,
      "end": 1751092511105,
      "order": "normal"
    }
  ]
}
