{
  "resolvedId": "C:/Users/.Freelancer/mussedupin-0f2501a9a053b0e75502c49e74876d2dc852c693/node_modules/react-leaflet/lib/Tooltip.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createElementObject, createOverlayComponent } from '@react-leaflet/core';\nimport { Tooltip as LeafletTooltip } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Tooltip = createOverlayComponent(function createTooltip(props, context) {\n    const tooltip = new LeafletTooltip(props, context.overlayContainer);\n    return createElementObject(tooltip, context);\n}, function useTooltipLifecycle(element, context, { position }, setOpen) {\n    useEffect(function addTooltip() {\n        const container = context.overlayContainer;\n        if (container == null) {\n            return;\n        }\n        const { instance } = element;\n        const onTooltipOpen = (event)=>{\n            if (event.tooltip === instance) {\n                if (position != null) {\n                    instance.setLatLng(position);\n                }\n                instance.update();\n                setOpen(true);\n            }\n        };\n        const onTooltipClose = (event)=>{\n            if (event.tooltip === instance) {\n                setOpen(false);\n            }\n        };\n        container.on({\n            tooltipopen: onTooltipOpen,\n            tooltipclose: onTooltipClose\n        });\n        container.bindTooltip(instance);\n        return function removeTooltip() {\n            container.off({\n                tooltipopen: onTooltipOpen,\n                tooltipclose: onTooltipClose\n            });\n            // @ts-ignore protected property\n            if (container._map != null) {\n                container.unbindTooltip();\n            }\n        };\n    }, [\n        element,\n        context,\n        setOpen,\n        position\n    ]);\n});\n",
      "start": 1750873707785,
      "end": 1750873708662,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1750873708662,
      "end": 1750873708662,
      "order": "pre"
    },
    {
      "name": "vite:esbuild",
      "start": 1750873708662,
      "end": 1750873708662,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1750873708662,
      "end": 1750873708662,
      "order": "normal-normal"
    },
    {
      "name": "vite:define",
      "start": 1750873708662,
      "end": 1750873708662,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750873708662,
      "end": 1750873708662,
      "order": "normal-normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1750873708662,
      "end": 1750873708662,
      "order": "normal-normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1750873708662,
      "end": 1750873708662,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750873708662,
      "end": 1750873708662,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750873708663,
      "end": 1750873708663,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750873708663,
      "end": 1750873708663,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750873708663,
      "end": 1750873708663,
      "order": "normal"
    }
  ]
}
