{
  "resolvedId": "C:/Users/.Freelancer/ONLINE/node_modules/framer-motion/dist/es/utils/use-cycle.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { wrap } from 'motion-utils';\nimport { useRef, useState, useCallback } from 'react';\n\n/**\n * Cycles through a series of visual properties. Can be used to toggle between or cycle through animations. It works similar to `useState` in React. It is provided an initial array of possible states, and returns an array of two arguments.\n *\n * An index value can be passed to the returned `cycle` function to cycle to a specific index.\n *\n * ```jsx\n * import * as React from \"react\"\n * import { motion, useCycle } from \"framer-motion\"\n *\n * export const MyComponent = () => {\n *   const [x, cycleX] = useCycle(0, 50, 100)\n *\n *   return (\n *     <motion.div\n *       animate={{ x: x }}\n *       onTap={() => cycleX()}\n *      />\n *    )\n * }\n * ```\n *\n * @param items - items to cycle through\n * @returns [currentState, cycleState]\n *\n * @public\n */\nfunction useCycle(...items) {\n    const index = useRef(0);\n    const [item, setItem] = useState(items[index.current]);\n    const runCycle = useCallback((next) => {\n        index.current =\n            typeof next !== \"number\"\n                ? wrap(0, items.length, index.current + 1)\n                : next;\n        setItem(items[index.current]);\n    }, \n    // The array will change on each call, but by putting items.length at\n    // the front of this array, we guarantee the dependency comparison will match up\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [items.length, ...items]);\n    return [item, runCycle];\n}\n\nexport { useCycle };\n",
      "start": 1751092511105,
      "end": 1751092511329,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1751092511329,
      "end": 1751092511329,
      "order": "pre"
    },
    {
      "name": "vite:esbuild",
      "start": 1751092511329,
      "end": 1751092511329,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1751092511329,
      "end": 1751092511329,
      "order": "normal-normal"
    },
    {
      "name": "vite:define",
      "start": 1751092511329,
      "end": 1751092511329,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-html",
      "start": 1751092511329,
      "end": 1751092511329,
      "order": "normal-normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1751092511329,
      "end": 1751092511329,
      "order": "normal-normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1751092511329,
      "end": 1751092511329,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1751092511329,
      "end": 1751092511329,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1751092511330,
      "end": 1751092511338,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1751092511338,
      "end": 1751092511338,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1751092511338,
      "end": 1751092511338,
      "order": "normal"
    }
  ]
}
