{
  "resolvedId": "C:/Users/.Freelancer/ONLINE/node_modules/crypto-js/mode-ctr.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Counter block mode.\n\t */\n\tCryptoJS.mode.CTR = (function () {\n\t    var CTR = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = CTR.Encryptor = CTR.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            var keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Increment counter\n\t            counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTR.Decryptor = Encryptor;\n\n\t    return CTR;\n\t}());\n\n\n\treturn CryptoJS.mode.CTR;\n\n}));",
      "start": 1750779204383,
      "end": 1750779204957,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1750779204957,
      "end": 1750779204957,
      "order": "pre"
    },
    {
      "name": "vite:esbuild",
      "start": 1750779204957,
      "end": 1750779204957,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1750779204957,
      "end": 1750779204957,
      "order": "normal-normal"
    },
    {
      "name": "vite:define",
      "start": 1750779204957,
      "end": 1750779204957,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750779204957,
      "end": 1750779204957,
      "order": "normal-normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1750779204957,
      "end": 1750779204957,
      "order": "normal-normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1750779204957,
      "end": 1750779204957,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750779206032,
      "end": 1750779206033,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750779206033,
      "end": 1750779206033,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750779206033,
      "end": 1750779206033,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750779206033,
      "end": 1750779206033,
      "order": "normal"
    }
  ]
}
