{
  "resolvedId": "C:/Users/.Freelancer/ONLINE/src/pages/Artists/Artists.jsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import React, { useMemo, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { sampleProducts } from \"../CategoryDetail/CategoryDetail\";\nimport \"./Artists.css\";\n\nconst Artists = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const artists = useMemo(() => {\n    // Get unique artists and count their products\n    const artistCounts = {};\n\n    // Iterate through each category and its products\n    Object.values(sampleProducts).forEach((products) => {\n      products.forEach((product) => {\n        artistCounts[product.artist] = (artistCounts[product.artist] || 0) + 1;\n      });\n    });\n\n    // Convert to array and sort by count\n    return Object.entries(artistCounts)\n      .map(([name, count]) => ({\n        name,\n        count,\n        image:\n          \"https://res.cloudinary.com/dn0br7hj0/image/upload/v1748784840/logo/icon.png\",\n      }))\n      .sort((a, b) => b.count - a.count);\n  }, []);\n\n  const filteredArtists = useMemo(() => {\n    return artists.filter((artist) =>\n      artist.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n  }, [artists, searchTerm]);\n\n  const featuredArtists = artists.slice(0, 4);\n\n  return (\n    <div className=\"artists-page\">\n      <h1 className=\"artists-title\">Nghệ sĩ</h1>\n\n      <section className=\"artists-exhibition\">\n        <h2 className=\"section-title\">Điểm nổi bật</h2>\n        <div className=\"artists-exhibition-grid\">\n          {featuredArtists.map((artist, index) => (\n            <Link\n              to={`/contents/artists/${encodeURIComponent(artist.name)}`}\n              key={index}\n              className=\"artists-exhibition-item\"\n            >\n              <div className=\"artist-image\">\n                <img src={artist.image} alt={artist.name} />\n              </div>\n              <h3 className=\"artist-name\">{artist.name}</h3>\n              <p className=\"artist-count\">{artist.count} sản phẩm</p>\n            </Link>\n          ))}\n        </div>\n      </section>\n\n      <section className=\"all-artists\">\n        <h2 className=\"section-title\">Tất cả nghệ sĩ</h2>\n        <div className=\"search-artists\">\n          <input\n            type=\"text\"\n            placeholder=\"Tìm kiếm nghệ sĩ...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </div>\n        <p className=\"artists-count\">{filteredArtists.length} nghệ sĩ</p>\n        <div className=\"artists-list\">\n          {filteredArtists.map((artist, index) => (\n            <Link\n              to={`/contents/artists/${encodeURIComponent(artist.name)}`}\n              key={index}\n              className=\"artist-list-item\"\n            >\n              <span className=\"artist-list-name\">{artist.name}</span>\n              <span className=\"artist-list-count\">{artist.count} sản phẩm</span>\n            </Link>\n          ))}\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Artists;\n",
      "start": 1750746804410,
      "end": 1750746804445,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1750746804445,
      "end": 1750746804445,
      "order": "pre"
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport React, { useMemo, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { sampleProducts } from \"../CategoryDetail/CategoryDetail\";\nimport \"./Artists.css\";\nconst Artists = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const artists = useMemo(() => {\n    const artistCounts = {};\n    Object.values(sampleProducts).forEach((products) => {\n      products.forEach((product) => {\n        artistCounts[product.artist] = (artistCounts[product.artist] || 0) + 1;\n      });\n    });\n    return Object.entries(artistCounts).map(([name, count]) => ({\n      name,\n      count,\n      image: \"https://res.cloudinary.com/dn0br7hj0/image/upload/v1748784840/logo/icon.png\"\n    })).sort((a, b) => b.count - a.count);\n  }, []);\n  const filteredArtists = useMemo(() => {\n    return artists.filter(\n      (artist) => artist.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n  }, [artists, searchTerm]);\n  const featuredArtists = artists.slice(0, 4);\n  return /* @__PURE__ */ jsxs(\"div\", { className: \"artists-page\", children: [\n    /* @__PURE__ */ jsx(\"h1\", { className: \"artists-title\", children: \"Nghệ sĩ\" }),\n    /* @__PURE__ */ jsxs(\"section\", { className: \"artists-exhibition\", children: [\n      /* @__PURE__ */ jsx(\"h2\", { className: \"section-title\", children: \"Điểm nổi bật\" }),\n      /* @__PURE__ */ jsx(\"div\", { className: \"artists-exhibition-grid\", children: featuredArtists.map((artist, index) => /* @__PURE__ */ jsxs(\n        Link,\n        {\n          to: `/contents/artists/${encodeURIComponent(artist.name)}`,\n          className: \"artists-exhibition-item\",\n          children: [\n            /* @__PURE__ */ jsx(\"div\", { className: \"artist-image\", children: /* @__PURE__ */ jsx(\"img\", { src: artist.image, alt: artist.name }) }),\n            /* @__PURE__ */ jsx(\"h3\", { className: \"artist-name\", children: artist.name }),\n            /* @__PURE__ */ jsxs(\"p\", { className: \"artist-count\", children: [\n              artist.count,\n              \" sản phẩm\"\n            ] })\n          ]\n        },\n        index\n      )) })\n    ] }),\n    /* @__PURE__ */ jsxs(\"section\", { className: \"all-artists\", children: [\n      /* @__PURE__ */ jsx(\"h2\", { className: \"section-title\", children: \"Tất cả nghệ sĩ\" }),\n      /* @__PURE__ */ jsx(\"div\", { className: \"search-artists\", children: /* @__PURE__ */ jsx(\n        \"input\",\n        {\n          type: \"text\",\n          placeholder: \"Tìm kiếm nghệ sĩ...\",\n          value: searchTerm,\n          onChange: (e) => setSearchTerm(e.target.value)\n        }\n      ) }),\n      /* @__PURE__ */ jsxs(\"p\", { className: \"artists-count\", children: [\n        filteredArtists.length,\n        \" nghệ sĩ\"\n      ] }),\n      /* @__PURE__ */ jsx(\"div\", { className: \"artists-list\", children: filteredArtists.map((artist, index) => /* @__PURE__ */ jsxs(\n        Link,\n        {\n          to: `/contents/artists/${encodeURIComponent(artist.name)}`,\n          className: \"artist-list-item\",\n          children: [\n            /* @__PURE__ */ jsx(\"span\", { className: \"artist-list-name\", children: artist.name }),\n            /* @__PURE__ */ jsxs(\"span\", { className: \"artist-list-count\", children: [\n              artist.count,\n              \" sản phẩm\"\n            ] })\n          ]\n        },\n        index\n      )) })\n    ] })\n  ] });\n};\nexport default Artists;\n",
      "start": 1750746804445,
      "end": 1750746804558,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "C:/Users/.Freelancer/ONLINE/src/pages/Artists/Artists.jsx"
        ],
        "sourcesContent": [
          "import React, { useMemo, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { sampleProducts } from \"../CategoryDetail/CategoryDetail\";\nimport \"./Artists.css\";\n\nconst Artists = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const artists = useMemo(() => {\n    // Get unique artists and count their products\n    const artistCounts = {};\n\n    // Iterate through each category and its products\n    Object.values(sampleProducts).forEach((products) => {\n      products.forEach((product) => {\n        artistCounts[product.artist] = (artistCounts[product.artist] || 0) + 1;\n      });\n    });\n\n    // Convert to array and sort by count\n    return Object.entries(artistCounts)\n      .map(([name, count]) => ({\n        name,\n        count,\n        image:\n          \"https://res.cloudinary.com/dn0br7hj0/image/upload/v1748784840/logo/icon.png\",\n      }))\n      .sort((a, b) => b.count - a.count);\n  }, []);\n\n  const filteredArtists = useMemo(() => {\n    return artists.filter((artist) =>\n      artist.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n  }, [artists, searchTerm]);\n\n  const featuredArtists = artists.slice(0, 4);\n\n  return (\n    <div className=\"artists-page\">\n      <h1 className=\"artists-title\">Nghệ sĩ</h1>\n\n      <section className=\"artists-exhibition\">\n        <h2 className=\"section-title\">Điểm nổi bật</h2>\n        <div className=\"artists-exhibition-grid\">\n          {featuredArtists.map((artist, index) => (\n            <Link\n              to={`/contents/artists/${encodeURIComponent(artist.name)}`}\n              key={index}\n              className=\"artists-exhibition-item\"\n            >\n              <div className=\"artist-image\">\n                <img src={artist.image} alt={artist.name} />\n              </div>\n              <h3 className=\"artist-name\">{artist.name}</h3>\n              <p className=\"artist-count\">{artist.count} sản phẩm</p>\n            </Link>\n          ))}\n        </div>\n      </section>\n\n      <section className=\"all-artists\">\n        <h2 className=\"section-title\">Tất cả nghệ sĩ</h2>\n        <div className=\"search-artists\">\n          <input\n            type=\"text\"\n            placeholder=\"Tìm kiếm nghệ sĩ...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </div>\n        <p className=\"artists-count\">{filteredArtists.length} nghệ sĩ</p>\n        <div className=\"artists-list\">\n          {filteredArtists.map((artist, index) => (\n            <Link\n              to={`/contents/artists/${encodeURIComponent(artist.name)}`}\n              key={index}\n              className=\"artist-list-item\"\n            >\n              <span className=\"artist-list-name\">{artist.name}</span>\n              <span className=\"artist-list-count\">{artist.count} sản phẩm</span>\n            </Link>\n          ))}\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Artists;\n"
        ],
        "mappings": "AAwCM,cAeQ,YAfR;AAxCN,OAAO,SAAS,SAAS,gBAAgB;AACzC,SAAS,YAAY;AACrB,SAAS,sBAAsB;AAC/B,OAAO;AAEP,MAAM,UAAU,MAAM;AACpB,QAAM,CAAC,YAAY,aAAa,IAAI,SAAS,EAAE;AAE/C,QAAM,UAAU,QAAQ,MAAM;AAE5B,UAAM,eAAe,CAAC;AAGtB,WAAO,OAAO,cAAc,EAAE,QAAQ,CAAC,aAAa;AAClD,eAAS,QAAQ,CAAC,YAAY;AAC5B,qBAAa,QAAQ,MAAM,KAAK,aAAa,QAAQ,MAAM,KAAK,KAAK;AAAA,MACvE,CAAC;AAAA,IACH,CAAC;AAGD,WAAO,OAAO,QAAQ,YAAY,EAC/B,IAAI,CAAC,CAAC,MAAM,KAAK,OAAO;AAAA,MACvB;AAAA,MACA;AAAA,MACA,OACE;AAAA,IACJ,EAAE,EACD,KAAK,CAAC,GAAG,MAAM,EAAE,QAAQ,EAAE,KAAK;AAAA,EACrC,GAAG,CAAC,CAAC;AAEL,QAAM,kBAAkB,QAAQ,MAAM;AACpC,WAAO,QAAQ;AAAA,MAAO,CAAC,WACrB,OAAO,KAAK,YAAY,EAAE,SAAS,WAAW,YAAY,CAAC;AAAA,IAC7D;AAAA,EACF,GAAG,CAAC,SAAS,UAAU,CAAC;AAExB,QAAM,kBAAkB,QAAQ,MAAM,GAAG,CAAC;AAE1C,SACE,qBAAC,SAAI,WAAU,gBACb;AAAA,wBAAC,QAAG,WAAU,iBAAgB,qBAAO;AAAA,IAErC,qBAAC,aAAQ,WAAU,sBACjB;AAAA,0BAAC,QAAG,WAAU,iBAAgB,0BAAY;AAAA,MAC1C,oBAAC,SAAI,WAAU,2BACZ,0BAAgB,IAAI,CAAC,QAAQ,UAC5B;AAAA,QAAC;AAAA;AAAA,UACC,IAAI,qBAAqB,mBAAmB,OAAO,IAAI,CAAC;AAAA,UAExD,WAAU;AAAA,UAEV;AAAA,gCAAC,SAAI,WAAU,gBACb,8BAAC,SAAI,KAAK,OAAO,OAAO,KAAK,OAAO,MAAM,GAC5C;AAAA,YACA,oBAAC,QAAG,WAAU,eAAe,iBAAO,MAAK;AAAA,YACzC,qBAAC,OAAE,WAAU,gBAAgB;AAAA,qBAAO;AAAA,cAAM;AAAA,eAAS;AAAA;AAAA;AAAA,QAP9C;AAAA,MAQP,CACD,GACH;AAAA,OACF;AAAA,IAEA,qBAAC,aAAQ,WAAU,eACjB;AAAA,0BAAC,QAAG,WAAU,iBAAgB,4BAAc;AAAA,MAC5C,oBAAC,SAAI,WAAU,kBACb;AAAA,QAAC;AAAA;AAAA,UACC,MAAK;AAAA,UACL,aAAY;AAAA,UACZ,OAAO;AAAA,UACP,UAAU,CAAC,MAAM,cAAc,EAAE,OAAO,KAAK;AAAA;AAAA,MAC/C,GACF;AAAA,MACA,qBAAC,OAAE,WAAU,iBAAiB;AAAA,wBAAgB;AAAA,QAAO;AAAA,SAAQ;AAAA,MAC7D,oBAAC,SAAI,WAAU,gBACZ,0BAAgB,IAAI,CAAC,QAAQ,UAC5B;AAAA,QAAC;AAAA;AAAA,UACC,IAAI,qBAAqB,mBAAmB,OAAO,IAAI,CAAC;AAAA,UAExD,WAAU;AAAA,UAEV;AAAA,gCAAC,UAAK,WAAU,oBAAoB,iBAAO,MAAK;AAAA,YAChD,qBAAC,UAAK,WAAU,qBAAqB;AAAA,qBAAO;AAAA,cAAM;AAAA,eAAS;AAAA;AAAA;AAAA,QAJtD;AAAA,MAKP,CACD,GACH;AAAA,OACF;AAAA,KACF;AAEJ;AAEA,eAAe;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750746804558,
      "end": 1750746804558,
      "order": "normal-normal"
    },
    {
      "name": "vite:define",
      "start": 1750746804558,
      "end": 1750746804558,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750746804558,
      "end": 1750746804558,
      "order": "normal-normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1750746804558,
      "end": 1750746804558,
      "order": "normal-normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1750746804558,
      "end": 1750746804558,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750746804558,
      "end": 1750746804558,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750746804558,
      "end": 1750746804558,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750746804558,
      "end": 1750746804559,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750746804559,
      "end": 1750746804559,
      "order": "normal"
    }
  ]
}
