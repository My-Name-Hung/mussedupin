{
  "resolvedId": "C:/Users/.Freelancer/TICKET/src/components/ScrollToTopButton/ScrollToTopButton.jsx",
  "transforms": [
    {
      "name": "__load__",
      "result": "import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"./ScrollToTopButton.css\";\r\n\r\nconst ScrollToTopButton = () => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [isMobile, setIsMobile] = useState(false);\r\n  const location = useLocation();\r\n\r\n  // Check if device is mobile\r\n  useEffect(() => {\r\n    const checkMobile = () => {\r\n      setIsMobile(window.innerWidth <= 768);\r\n    };\r\n\r\n    checkMobile();\r\n    window.addEventListener(\"resize\", checkMobile);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", checkMobile);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Reset visibility on page change\r\n    setVisible(false);\r\n\r\n    const setupObserver = () => {\r\n      // Try to find significant page sections by various selectors\r\n      const firstSection =\r\n        document.querySelector(\"section:first-of-type\") ||\r\n        document.querySelector(\".hero-container\") ||\r\n        document.querySelector(\".dupin-plus-header\") ||\r\n        document.querySelector(\"header:first-of-type\") ||\r\n        document.querySelector(\".main-content\") ||\r\n        document.querySelector(\"main > div:first-child\");\r\n\r\n      // Use either explicit second section or just use scroll position as fallback\r\n      const secondSection =\r\n        document.querySelector(\"section:nth-of-type(2)\") ||\r\n        document.querySelector(\".highlights-section\") ||\r\n        document.querySelector(\".collections-section\") ||\r\n        document.querySelector(\".filter-section\");\r\n\r\n      // If we can't find proper sections, fall back to scroll position\r\n      if (!firstSection || !secondSection) {\r\n        // Fallback: Use scroll position\r\n        const handleScroll = () => {\r\n          // Show button when scrolled down more than 200px on mobile, 300px on desktop\r\n          const scrollThreshold = isMobile ? 200 : 300;\r\n          const scrollTop =\r\n            window.pageYOffset || document.documentElement.scrollTop;\r\n          setVisible(scrollTop > scrollThreshold);\r\n        };\r\n\r\n        window.addEventListener(\"scroll\", handleScroll);\r\n        return () => window.removeEventListener(\"scroll\", handleScroll);\r\n      }\r\n\r\n      // Observer options\r\n      const options = {\r\n        root: null,\r\n        rootMargin: isMobile ? \"-5% 0px\" : \"-10% 0px\", // More sensitive on mobile\r\n        threshold: 0,\r\n      };\r\n\r\n      // Observer for the first section (to hide button when at top)\r\n      const firstSectionObserver = new IntersectionObserver((entries) => {\r\n        const [entry] = entries;\r\n        if (entry.isIntersecting) {\r\n          setVisible(false);\r\n        }\r\n      }, options);\r\n\r\n      // Observer for the second section (to show button when scrolled down)\r\n      const secondSectionObserver = new IntersectionObserver((entries) => {\r\n        const [entry] = entries;\r\n        if (entry.isIntersecting) {\r\n          setVisible(true);\r\n        }\r\n      }, options);\r\n\r\n      firstSectionObserver.observe(firstSection);\r\n      secondSectionObserver.observe(secondSection);\r\n\r\n      return () => {\r\n        firstSectionObserver.disconnect();\r\n        secondSectionObserver.disconnect();\r\n      };\r\n    };\r\n\r\n    // Wait for the DOM to be fully loaded before setting up observers\r\n    const timer = setTimeout(() => {\r\n      setupObserver();\r\n    }, 500);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [location.pathname, isMobile]); // Re-run when route changes or mobile status changes\r\n\r\n  const scrollToTop = () => {\r\n    // Smoother scroll on desktop, faster on mobile\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: isMobile ? \"auto\" : \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={`scroll-to-top-button fixed-mobile-element ${\r\n        visible ? \"visible\" : \"\"\r\n      }`}\r\n      onClick={scrollToTop}\r\n      aria-label=\"Scroll to top\"\r\n    >\r\n      <svg\r\n        viewBox=\"0 0 16 16\"\r\n        width=\"1em\"\r\n        height=\"1em\"\r\n        focusable=\"false\"\r\n        fill=\"currentColor\"\r\n        aria-hidden=\"true\"\r\n        className=\"SvgRWrapper\"\r\n      >\r\n        <path d=\"m3.7 6.7 3.8-3.8V15h1V2.9l3.8 3.8.7-.7-5-5-5 5z\"></path>\r\n      </svg>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ScrollToTopButton;\r\n",
      "start": 1751856127735,
      "end": 1751856127735,
      "sourcemaps": {
        "version": 3,
        "names": [
          "React",
          "useEffect",
          "useState",
          "useLocation",
          "ScrollToTopButton",
          "_s",
          "visible",
          "setVisible",
          "isMobile",
          "setIsMobile",
          "location",
          "checkMobile",
          "window",
          "innerWidth",
          "addEventListener",
          "removeEventListener",
          "setupObserver",
          "firstSection",
          "document",
          "querySelector",
          "secondSection",
          "handleScroll",
          "scrollThreshold",
          "scrollTop",
          "pageYOffset",
          "documentElement",
          "options",
          "root",
          "rootMargin",
          "threshold",
          "firstSectionObserver",
          "IntersectionObserver",
          "entries",
          "entry",
          "isIntersecting",
          "secondSectionObserver",
          "observe",
          "disconnect",
          "timer",
          "setTimeout",
          "clearTimeout",
          "pathname",
          "scrollToTop",
          "scrollTo",
          "top",
          "behavior",
          "_c",
          "$RefreshReg$"
        ],
        "sources": [
          "C:/Users/.Freelancer/TICKET/src/components/ScrollToTopButton/ScrollToTopButton.jsx"
        ],
        "sourcesContent": [
          "import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"./ScrollToTopButton.css\";\r\n\r\nconst ScrollToTopButton = () => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [isMobile, setIsMobile] = useState(false);\r\n  const location = useLocation();\r\n\r\n  // Check if device is mobile\r\n  useEffect(() => {\r\n    const checkMobile = () => {\r\n      setIsMobile(window.innerWidth <= 768);\r\n    };\r\n\r\n    checkMobile();\r\n    window.addEventListener(\"resize\", checkMobile);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", checkMobile);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Reset visibility on page change\r\n    setVisible(false);\r\n\r\n    const setupObserver = () => {\r\n      // Try to find significant page sections by various selectors\r\n      const firstSection =\r\n        document.querySelector(\"section:first-of-type\") ||\r\n        document.querySelector(\".hero-container\") ||\r\n        document.querySelector(\".dupin-plus-header\") ||\r\n        document.querySelector(\"header:first-of-type\") ||\r\n        document.querySelector(\".main-content\") ||\r\n        document.querySelector(\"main > div:first-child\");\r\n\r\n      // Use either explicit second section or just use scroll position as fallback\r\n      const secondSection =\r\n        document.querySelector(\"section:nth-of-type(2)\") ||\r\n        document.querySelector(\".highlights-section\") ||\r\n        document.querySelector(\".collections-section\") ||\r\n        document.querySelector(\".filter-section\");\r\n\r\n      // If we can't find proper sections, fall back to scroll position\r\n      if (!firstSection || !secondSection) {\r\n        // Fallback: Use scroll position\r\n        const handleScroll = () => {\r\n          // Show button when scrolled down more than 200px on mobile, 300px on desktop\r\n          const scrollThreshold = isMobile ? 200 : 300;\r\n          const scrollTop =\r\n            window.pageYOffset || document.documentElement.scrollTop;\r\n          setVisible(scrollTop > scrollThreshold);\r\n        };\r\n\r\n        window.addEventListener(\"scroll\", handleScroll);\r\n        return () => window.removeEventListener(\"scroll\", handleScroll);\r\n      }\r\n\r\n      // Observer options\r\n      const options = {\r\n        root: null,\r\n        rootMargin: isMobile ? \"-5% 0px\" : \"-10% 0px\", // More sensitive on mobile\r\n        threshold: 0,\r\n      };\r\n\r\n      // Observer for the first section (to hide button when at top)\r\n      const firstSectionObserver = new IntersectionObserver((entries) => {\r\n        const [entry] = entries;\r\n        if (entry.isIntersecting) {\r\n          setVisible(false);\r\n        }\r\n      }, options);\r\n\r\n      // Observer for the second section (to show button when scrolled down)\r\n      const secondSectionObserver = new IntersectionObserver((entries) => {\r\n        const [entry] = entries;\r\n        if (entry.isIntersecting) {\r\n          setVisible(true);\r\n        }\r\n      }, options);\r\n\r\n      firstSectionObserver.observe(firstSection);\r\n      secondSectionObserver.observe(secondSection);\r\n\r\n      return () => {\r\n        firstSectionObserver.disconnect();\r\n        secondSectionObserver.disconnect();\r\n      };\r\n    };\r\n\r\n    // Wait for the DOM to be fully loaded before setting up observers\r\n    const timer = setTimeout(() => {\r\n      setupObserver();\r\n    }, 500);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [location.pathname, isMobile]); // Re-run when route changes or mobile status changes\r\n\r\n  const scrollToTop = () => {\r\n    // Smoother scroll on desktop, faster on mobile\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: isMobile ? \"auto\" : \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={`scroll-to-top-button fixed-mobile-element ${\r\n        visible ? \"visible\" : \"\"\r\n      }`}\r\n      onClick={scrollToTop}\r\n      aria-label=\"Scroll to top\"\r\n    >\r\n      <svg\r\n        viewBox=\"0 0 16 16\"\r\n        width=\"1em\"\r\n        height=\"1em\"\r\n        focusable=\"false\"\r\n        fill=\"currentColor\"\r\n        aria-hidden=\"true\"\r\n        className=\"SvgRWrapper\"\r\n      >\r\n        <path d=\"m3.7 6.7 3.8-3.8V15h1V2.9l3.8 3.8.7-.7-5-5-5 5z\"></path>\r\n      </svg>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ScrollToTopButton;\r\n"
        ],
        "mappings": "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",
        "ignoreList": []
      }
    },
    {
      "name": "vite:react-babel",
      "result": "import * as RefreshRuntime from \"/@react-refresh\";\nconst inWebWorker = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope;\n\nlet prevRefreshReg;\nlet prevRefreshSig;\n\nif (import.meta.hot && !inWebWorker) {\n  if (!window.$RefreshReg$) {\n    throw new Error(\n      \"@vitejs/plugin-react can't detect preamble. Something is wrong.\"\n    );\n  }\n\n  prevRefreshReg = window.$RefreshReg$;\n  prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = RefreshRuntime.getRefreshReg(\"C:/Users/.Freelancer/TICKET/src/components/ScrollToTopButton/ScrollToTopButton.jsx\");\n  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;\n}\n\nvar _s = $RefreshSig$();import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./ScrollToTopButton.css\";\n\nconst ScrollToTopButton = () => {_s();\n  const [visible, setVisible] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n  const location = useLocation();\n\n  // Check if device is mobile\n  useEffect(() => {\n    const checkMobile = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n\n    checkMobile();\n    window.addEventListener(\"resize\", checkMobile);\n\n    return () => {\n      window.removeEventListener(\"resize\", checkMobile);\n    };\n  }, []);\n\n  useEffect(() => {\n    // Reset visibility on page change\n    setVisible(false);\n\n    const setupObserver = () => {\n      // Try to find significant page sections by various selectors\n      const firstSection =\n      document.querySelector(\"section:first-of-type\") ||\n      document.querySelector(\".hero-container\") ||\n      document.querySelector(\".dupin-plus-header\") ||\n      document.querySelector(\"header:first-of-type\") ||\n      document.querySelector(\".main-content\") ||\n      document.querySelector(\"main > div:first-child\");\n\n      // Use either explicit second section or just use scroll position as fallback\n      const secondSection =\n      document.querySelector(\"section:nth-of-type(2)\") ||\n      document.querySelector(\".highlights-section\") ||\n      document.querySelector(\".collections-section\") ||\n      document.querySelector(\".filter-section\");\n\n      // If we can't find proper sections, fall back to scroll position\n      if (!firstSection || !secondSection) {\n        // Fallback: Use scroll position\n        const handleScroll = () => {\n          // Show button when scrolled down more than 200px on mobile, 300px on desktop\n          const scrollThreshold = isMobile ? 200 : 300;\n          const scrollTop =\n          window.pageYOffset || document.documentElement.scrollTop;\n          setVisible(scrollTop > scrollThreshold);\n        };\n\n        window.addEventListener(\"scroll\", handleScroll);\n        return () => window.removeEventListener(\"scroll\", handleScroll);\n      }\n\n      // Observer options\n      const options = {\n        root: null,\n        rootMargin: isMobile ? \"-5% 0px\" : \"-10% 0px\", // More sensitive on mobile\n        threshold: 0\n      };\n\n      // Observer for the first section (to hide button when at top)\n      const firstSectionObserver = new IntersectionObserver((entries) => {\n        const [entry] = entries;\n        if (entry.isIntersecting) {\n          setVisible(false);\n        }\n      }, options);\n\n      // Observer for the second section (to show button when scrolled down)\n      const secondSectionObserver = new IntersectionObserver((entries) => {\n        const [entry] = entries;\n        if (entry.isIntersecting) {\n          setVisible(true);\n        }\n      }, options);\n\n      firstSectionObserver.observe(firstSection);\n      secondSectionObserver.observe(secondSection);\n\n      return () => {\n        firstSectionObserver.disconnect();\n        secondSectionObserver.disconnect();\n      };\n    };\n\n    // Wait for the DOM to be fully loaded before setting up observers\n    const timer = setTimeout(() => {\n      setupObserver();\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [location.pathname, isMobile]); // Re-run when route changes or mobile status changes\n\n  const scrollToTop = () => {\n    // Smoother scroll on desktop, faster on mobile\n    window.scrollTo({\n      top: 0,\n      behavior: isMobile ? \"auto\" : \"smooth\"\n    });\n  };\n\n  return (\n    <button\n      className={`scroll-to-top-button fixed-mobile-element ${\n      visible ? \"visible\" : \"\"}`\n      }\n      onClick={scrollToTop}\n      aria-label=\"Scroll to top\">\n      \r\n      <svg\n        viewBox=\"0 0 16 16\"\n        width=\"1em\"\n        height=\"1em\"\n        focusable=\"false\"\n        fill=\"currentColor\"\n        aria-hidden=\"true\"\n        className=\"SvgRWrapper\">\n        \r\n        <path d=\"m3.7 6.7 3.8-3.8V15h1V2.9l3.8 3.8.7-.7-5-5-5 5z\"></path>\r\n      </svg>\r\n    </button>);\n\n};_s(ScrollToTopButton, \"eJj+Y8+zwC8d5hRRPIvgdOjLYds=\", false, function () {return [useLocation];});_c = ScrollToTopButton;\n\nexport default ScrollToTopButton;var _c;$RefreshReg$(_c, \"ScrollToTopButton\");\n\nif (import.meta.hot && !inWebWorker) {\n  window.$RefreshReg$ = prevRefreshReg;\n  window.$RefreshSig$ = prevRefreshSig;\n}\n\n\nif (import.meta.hot && !inWebWorker) {\n  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {\n    RefreshRuntime.registerExportsForReactRefresh(\"C:/Users/.Freelancer/TICKET/src/components/ScrollToTopButton/ScrollToTopButton.jsx\", currentExports);\n    import.meta.hot.accept((nextExports) => {\n      if (!nextExports) return;\n      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(\"C:/Users/.Freelancer/TICKET/src/components/ScrollToTopButton/ScrollToTopButton.jsx\", currentExports, nextExports);\n      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);\n    });\n  });\n}\n",
      "start": 1751856127735,
      "end": 1751856127751,
      "order": "pre",
      "sourcemaps": {
        "version": 3,
        "names": [
          "React",
          "useEffect",
          "useState",
          "useLocation",
          "ScrollToTopButton",
          "_s",
          "visible",
          "setVisible",
          "isMobile",
          "setIsMobile",
          "location",
          "checkMobile",
          "window",
          "innerWidth",
          "addEventListener",
          "removeEventListener",
          "setupObserver",
          "firstSection",
          "document",
          "querySelector",
          "secondSection",
          "handleScroll",
          "scrollThreshold",
          "scrollTop",
          "pageYOffset",
          "documentElement",
          "options",
          "root",
          "rootMargin",
          "threshold",
          "firstSectionObserver",
          "IntersectionObserver",
          "entries",
          "entry",
          "isIntersecting",
          "secondSectionObserver",
          "observe",
          "disconnect",
          "timer",
          "setTimeout",
          "clearTimeout",
          "pathname",
          "scrollToTop",
          "scrollTo",
          "top",
          "behavior",
          "_c",
          "$RefreshReg$"
        ],
        "sources": [
          "C:/Users/.Freelancer/TICKET/src/components/ScrollToTopButton/ScrollToTopButton.jsx"
        ],
        "sourcesContent": [
          "import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"./ScrollToTopButton.css\";\r\n\r\nconst ScrollToTopButton = () => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [isMobile, setIsMobile] = useState(false);\r\n  const location = useLocation();\r\n\r\n  // Check if device is mobile\r\n  useEffect(() => {\r\n    const checkMobile = () => {\r\n      setIsMobile(window.innerWidth <= 768);\r\n    };\r\n\r\n    checkMobile();\r\n    window.addEventListener(\"resize\", checkMobile);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", checkMobile);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Reset visibility on page change\r\n    setVisible(false);\r\n\r\n    const setupObserver = () => {\r\n      // Try to find significant page sections by various selectors\r\n      const firstSection =\r\n        document.querySelector(\"section:first-of-type\") ||\r\n        document.querySelector(\".hero-container\") ||\r\n        document.querySelector(\".dupin-plus-header\") ||\r\n        document.querySelector(\"header:first-of-type\") ||\r\n        document.querySelector(\".main-content\") ||\r\n        document.querySelector(\"main > div:first-child\");\r\n\r\n      // Use either explicit second section or just use scroll position as fallback\r\n      const secondSection =\r\n        document.querySelector(\"section:nth-of-type(2)\") ||\r\n        document.querySelector(\".highlights-section\") ||\r\n        document.querySelector(\".collections-section\") ||\r\n        document.querySelector(\".filter-section\");\r\n\r\n      // If we can't find proper sections, fall back to scroll position\r\n      if (!firstSection || !secondSection) {\r\n        // Fallback: Use scroll position\r\n        const handleScroll = () => {\r\n          // Show button when scrolled down more than 200px on mobile, 300px on desktop\r\n          const scrollThreshold = isMobile ? 200 : 300;\r\n          const scrollTop =\r\n            window.pageYOffset || document.documentElement.scrollTop;\r\n          setVisible(scrollTop > scrollThreshold);\r\n        };\r\n\r\n        window.addEventListener(\"scroll\", handleScroll);\r\n        return () => window.removeEventListener(\"scroll\", handleScroll);\r\n      }\r\n\r\n      // Observer options\r\n      const options = {\r\n        root: null,\r\n        rootMargin: isMobile ? \"-5% 0px\" : \"-10% 0px\", // More sensitive on mobile\r\n        threshold: 0,\r\n      };\r\n\r\n      // Observer for the first section (to hide button when at top)\r\n      const firstSectionObserver = new IntersectionObserver((entries) => {\r\n        const [entry] = entries;\r\n        if (entry.isIntersecting) {\r\n          setVisible(false);\r\n        }\r\n      }, options);\r\n\r\n      // Observer for the second section (to show button when scrolled down)\r\n      const secondSectionObserver = new IntersectionObserver((entries) => {\r\n        const [entry] = entries;\r\n        if (entry.isIntersecting) {\r\n          setVisible(true);\r\n        }\r\n      }, options);\r\n\r\n      firstSectionObserver.observe(firstSection);\r\n      secondSectionObserver.observe(secondSection);\r\n\r\n      return () => {\r\n        firstSectionObserver.disconnect();\r\n        secondSectionObserver.disconnect();\r\n      };\r\n    };\r\n\r\n    // Wait for the DOM to be fully loaded before setting up observers\r\n    const timer = setTimeout(() => {\r\n      setupObserver();\r\n    }, 500);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [location.pathname, isMobile]); // Re-run when route changes or mobile status changes\r\n\r\n  const scrollToTop = () => {\r\n    // Smoother scroll on desktop, faster on mobile\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: isMobile ? \"auto\" : \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={`scroll-to-top-button fixed-mobile-element ${\r\n        visible ? \"visible\" : \"\"\r\n      }`}\r\n      onClick={scrollToTop}\r\n      aria-label=\"Scroll to top\"\r\n    >\r\n      <svg\r\n        viewBox=\"0 0 16 16\"\r\n        width=\"1em\"\r\n        height=\"1em\"\r\n        focusable=\"false\"\r\n        fill=\"currentColor\"\r\n        aria-hidden=\"true\"\r\n        className=\"SvgRWrapper\"\r\n      >\r\n        <path d=\"m3.7 6.7 3.8-3.8V15h1V2.9l3.8 3.8.7-.7-5-5-5 5z\"></path>\r\n      </svg>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ScrollToTopButton;\r\n"
        ],
        "mappings": "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",
        "ignoreList": []
      }
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsxDEV } from \"react/jsx-dev-runtime\";\nimport * as RefreshRuntime from \"/@react-refresh\";\nconst inWebWorker = typeof WorkerGlobalScope !== \"undefined\" && self instanceof WorkerGlobalScope;\nlet prevRefreshReg;\nlet prevRefreshSig;\nif (import.meta.hot && !inWebWorker) {\n  if (!window.$RefreshReg$) {\n    throw new Error(\n      \"@vitejs/plugin-react can't detect preamble. Something is wrong.\"\n    );\n  }\n  prevRefreshReg = window.$RefreshReg$;\n  prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = RefreshRuntime.getRefreshReg(\"C:/Users/.Freelancer/TICKET/src/components/ScrollToTopButton/ScrollToTopButton.jsx\");\n  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./ScrollToTopButton.css\";\nconst ScrollToTopButton = () => {\n  _s();\n  const [visible, setVisible] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n  const location = useLocation();\n  useEffect(() => {\n    const checkMobile = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n    checkMobile();\n    window.addEventListener(\"resize\", checkMobile);\n    return () => {\n      window.removeEventListener(\"resize\", checkMobile);\n    };\n  }, []);\n  useEffect(() => {\n    setVisible(false);\n    const setupObserver = () => {\n      const firstSection = document.querySelector(\"section:first-of-type\") || document.querySelector(\".hero-container\") || document.querySelector(\".dupin-plus-header\") || document.querySelector(\"header:first-of-type\") || document.querySelector(\".main-content\") || document.querySelector(\"main > div:first-child\");\n      const secondSection = document.querySelector(\"section:nth-of-type(2)\") || document.querySelector(\".highlights-section\") || document.querySelector(\".collections-section\") || document.querySelector(\".filter-section\");\n      if (!firstSection || !secondSection) {\n        const handleScroll = () => {\n          const scrollThreshold = isMobile ? 200 : 300;\n          const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n          setVisible(scrollTop > scrollThreshold);\n        };\n        window.addEventListener(\"scroll\", handleScroll);\n        return () => window.removeEventListener(\"scroll\", handleScroll);\n      }\n      const options = {\n        root: null,\n        rootMargin: isMobile ? \"-5% 0px\" : \"-10% 0px\",\n        // More sensitive on mobile\n        threshold: 0\n      };\n      const firstSectionObserver = new IntersectionObserver((entries) => {\n        const [entry] = entries;\n        if (entry.isIntersecting) {\n          setVisible(false);\n        }\n      }, options);\n      const secondSectionObserver = new IntersectionObserver((entries) => {\n        const [entry] = entries;\n        if (entry.isIntersecting) {\n          setVisible(true);\n        }\n      }, options);\n      firstSectionObserver.observe(firstSection);\n      secondSectionObserver.observe(secondSection);\n      return () => {\n        firstSectionObserver.disconnect();\n        secondSectionObserver.disconnect();\n      };\n    };\n    const timer = setTimeout(() => {\n      setupObserver();\n    }, 500);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [location.pathname, isMobile]);\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: isMobile ? \"auto\" : \"smooth\"\n    });\n  };\n  return /* @__PURE__ */ jsxDEV(\n    \"button\",\n    {\n      className: `scroll-to-top-button fixed-mobile-element ${visible ? \"visible\" : \"\"}`,\n      onClick: scrollToTop,\n      \"aria-label\": \"Scroll to top\",\n      children: /* @__PURE__ */ jsxDEV(\n        \"svg\",\n        {\n          viewBox: \"0 0 16 16\",\n          width: \"1em\",\n          height: \"1em\",\n          focusable: \"false\",\n          fill: \"currentColor\",\n          \"aria-hidden\": \"true\",\n          className: \"SvgRWrapper\",\n          children: /* @__PURE__ */ jsxDEV(\"path\", { d: \"m3.7 6.7 3.8-3.8V15h1V2.9l3.8 3.8.7-.7-5-5-5 5z\" }, void 0, false, {\n            fileName: \"C:/Users/.Freelancer/TICKET/src/components/ScrollToTopButton/ScrollToTopButton.jsx\",\n            lineNumber: 146,\n            columnNumber: 9\n          }, this)\n        },\n        void 0,\n        false,\n        {\n          fileName: \"C:/Users/.Freelancer/TICKET/src/components/ScrollToTopButton/ScrollToTopButton.jsx\",\n          lineNumber: 137,\n          columnNumber: 7\n        },\n        this\n      )\n    },\n    void 0,\n    false,\n    {\n      fileName: \"C:/Users/.Freelancer/TICKET/src/components/ScrollToTopButton/ScrollToTopButton.jsx\",\n      lineNumber: 130,\n      columnNumber: 5\n    },\n    this\n  );\n};\n_s(ScrollToTopButton, \"eJj+Y8+zwC8d5hRRPIvgdOjLYds=\", false, function() {\n  return [useLocation];\n});\n_c = ScrollToTopButton;\nexport default ScrollToTopButton;\nvar _c;\n$RefreshReg$(_c, \"ScrollToTopButton\");\nif (import.meta.hot && !inWebWorker) {\n  window.$RefreshReg$ = prevRefreshReg;\n  window.$RefreshSig$ = prevRefreshSig;\n}\nif (import.meta.hot && !inWebWorker) {\n  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {\n    RefreshRuntime.registerExportsForReactRefresh(\"C:/Users/.Freelancer/TICKET/src/components/ScrollToTopButton/ScrollToTopButton.jsx\", currentExports);\n    import.meta.hot.accept((nextExports) => {\n      if (!nextExports) return;\n      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(\"C:/Users/.Freelancer/TICKET/src/components/ScrollToTopButton/ScrollToTopButton.jsx\", currentExports, nextExports);\n      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);\n    });\n  });\n}\n",
      "start": 1751856127751,
      "end": 1751856128118,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "C:/Users/.Freelancer/TICKET/src/components/ScrollToTopButton/ScrollToTopButton.jsx"
        ],
        "sourcesContent": [
          "import * as RefreshRuntime from \"/@react-refresh\";\nconst inWebWorker = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope;\n\nlet prevRefreshReg;\nlet prevRefreshSig;\n\nif (import.meta.hot && !inWebWorker) {\n  if (!window.$RefreshReg$) {\n    throw new Error(\n      \"@vitejs/plugin-react can't detect preamble. Something is wrong.\"\n    );\n  }\n\n  prevRefreshReg = window.$RefreshReg$;\n  prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = RefreshRuntime.getRefreshReg(\"C:/Users/.Freelancer/TICKET/src/components/ScrollToTopButton/ScrollToTopButton.jsx\");\n  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;\n}\n\nvar _s = $RefreshSig$();import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./ScrollToTopButton.css\";\n\nconst ScrollToTopButton = () => {_s();\n  const [visible, setVisible] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n  const location = useLocation();\n\n  // Check if device is mobile\n  useEffect(() => {\n    const checkMobile = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n\n    checkMobile();\n    window.addEventListener(\"resize\", checkMobile);\n\n    return () => {\n      window.removeEventListener(\"resize\", checkMobile);\n    };\n  }, []);\n\n  useEffect(() => {\n    // Reset visibility on page change\n    setVisible(false);\n\n    const setupObserver = () => {\n      // Try to find significant page sections by various selectors\n      const firstSection =\n      document.querySelector(\"section:first-of-type\") ||\n      document.querySelector(\".hero-container\") ||\n      document.querySelector(\".dupin-plus-header\") ||\n      document.querySelector(\"header:first-of-type\") ||\n      document.querySelector(\".main-content\") ||\n      document.querySelector(\"main > div:first-child\");\n\n      // Use either explicit second section or just use scroll position as fallback\n      const secondSection =\n      document.querySelector(\"section:nth-of-type(2)\") ||\n      document.querySelector(\".highlights-section\") ||\n      document.querySelector(\".collections-section\") ||\n      document.querySelector(\".filter-section\");\n\n      // If we can't find proper sections, fall back to scroll position\n      if (!firstSection || !secondSection) {\n        // Fallback: Use scroll position\n        const handleScroll = () => {\n          // Show button when scrolled down more than 200px on mobile, 300px on desktop\n          const scrollThreshold = isMobile ? 200 : 300;\n          const scrollTop =\n          window.pageYOffset || document.documentElement.scrollTop;\n          setVisible(scrollTop > scrollThreshold);\n        };\n\n        window.addEventListener(\"scroll\", handleScroll);\n        return () => window.removeEventListener(\"scroll\", handleScroll);\n      }\n\n      // Observer options\n      const options = {\n        root: null,\n        rootMargin: isMobile ? \"-5% 0px\" : \"-10% 0px\", // More sensitive on mobile\n        threshold: 0\n      };\n\n      // Observer for the first section (to hide button when at top)\n      const firstSectionObserver = new IntersectionObserver((entries) => {\n        const [entry] = entries;\n        if (entry.isIntersecting) {\n          setVisible(false);\n        }\n      }, options);\n\n      // Observer for the second section (to show button when scrolled down)\n      const secondSectionObserver = new IntersectionObserver((entries) => {\n        const [entry] = entries;\n        if (entry.isIntersecting) {\n          setVisible(true);\n        }\n      }, options);\n\n      firstSectionObserver.observe(firstSection);\n      secondSectionObserver.observe(secondSection);\n\n      return () => {\n        firstSectionObserver.disconnect();\n        secondSectionObserver.disconnect();\n      };\n    };\n\n    // Wait for the DOM to be fully loaded before setting up observers\n    const timer = setTimeout(() => {\n      setupObserver();\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [location.pathname, isMobile]); // Re-run when route changes or mobile status changes\n\n  const scrollToTop = () => {\n    // Smoother scroll on desktop, faster on mobile\n    window.scrollTo({\n      top: 0,\n      behavior: isMobile ? \"auto\" : \"smooth\"\n    });\n  };\n\n  return (\n    <button\n      className={`scroll-to-top-button fixed-mobile-element ${\n      visible ? \"visible\" : \"\"}`\n      }\n      onClick={scrollToTop}\n      aria-label=\"Scroll to top\">\n      \r\n      <svg\n        viewBox=\"0 0 16 16\"\n        width=\"1em\"\n        height=\"1em\"\n        focusable=\"false\"\n        fill=\"currentColor\"\n        aria-hidden=\"true\"\n        className=\"SvgRWrapper\">\n        \r\n        <path d=\"m3.7 6.7 3.8-3.8V15h1V2.9l3.8 3.8.7-.7-5-5-5 5z\"></path>\r\n      </svg>\r\n    </button>);\n\n};_s(ScrollToTopButton, \"eJj+Y8+zwC8d5hRRPIvgdOjLYds=\", false, function () {return [useLocation];});_c = ScrollToTopButton;\n\nexport default ScrollToTopButton;var _c;$RefreshReg$(_c, \"ScrollToTopButton\");\n\nif (import.meta.hot && !inWebWorker) {\n  window.$RefreshReg$ = prevRefreshReg;\n  window.$RefreshSig$ = prevRefreshSig;\n}\n\n\nif (import.meta.hot && !inWebWorker) {\n  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {\n    RefreshRuntime.registerExportsForReactRefresh(\"C:/Users/.Freelancer/TICKET/src/components/ScrollToTopButton/ScrollToTopButton.jsx\", currentExports);\n    import.meta.hot.accept((nextExports) => {\n      if (!nextExports) return;\n      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(\"C:/Users/.Freelancer/TICKET/src/components/ScrollToTopButton/ScrollToTopButton.jsx\", currentExports, nextExports);\n      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);\n    });\n  });\n}\n"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1751856128118,
      "end": 1751856128118,
      "order": "normal-normal"
    },
    {
      "name": "vite:define",
      "start": 1751856128118,
      "end": 1751856128118,
      "order": "normal-normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1751856128118,
      "end": 1751856128118,
      "order": "normal-normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1751856128118,
      "end": 1751856128124,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1751856128124,
      "end": 1751856128124,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1751856128124,
      "end": 1751856128124,
      "order": "normal-normal"
    },
    {
      "name": "vite:client-inject",
      "start": 1751856128124,
      "end": 1751856128124,
      "order": "normal"
    },
    {
      "name": "vite:css-analysis",
      "start": 1751856128124,
      "end": 1751856128124,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-analysis",
      "result": "import { createHotContext as __vite__createHotContext } from \"/@vite/client\";import.meta.hot = __vite__createHotContext(\"/src/components/ScrollToTopButton/ScrollToTopButton.jsx\");import __vite__cjsImport0_react_jsxDevRuntime from \"/node_modules/.vite/deps/react_jsx-dev-runtime.js?v=a4b2f9ae\"; const jsxDEV = __vite__cjsImport0_react_jsxDevRuntime[\"jsxDEV\"];\nimport * as RefreshRuntime from \"/@react-refresh\";\nconst inWebWorker = typeof WorkerGlobalScope !== \"undefined\" && self instanceof WorkerGlobalScope;\nlet prevRefreshReg;\nlet prevRefreshSig;\nif (import.meta.hot && !inWebWorker) {\n  if (!window.$RefreshReg$) {\n    throw new Error(\n      \"@vitejs/plugin-react can't detect preamble. Something is wrong.\"\n    );\n  }\n  prevRefreshReg = window.$RefreshReg$;\n  prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = RefreshRuntime.getRefreshReg(\"C:/Users/.Freelancer/TICKET/src/components/ScrollToTopButton/ScrollToTopButton.jsx\");\n  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport __vite__cjsImport3_react from \"/node_modules/.vite/deps/react.js?v=a4b2f9ae\"; const React = __vite__cjsImport3_react.__esModule ? __vite__cjsImport3_react.default : __vite__cjsImport3_react; const useEffect = __vite__cjsImport3_react[\"useEffect\"]; const useState = __vite__cjsImport3_react[\"useState\"];\nimport { useLocation } from \"/node_modules/.vite/deps/react-router-dom.js?v=a4b2f9ae\";\nimport \"/src/components/ScrollToTopButton/ScrollToTopButton.css\";\nconst ScrollToTopButton = () => {\n  _s();\n  const [visible, setVisible] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n  const location = useLocation();\n  useEffect(() => {\n    const checkMobile = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n    checkMobile();\n    window.addEventListener(\"resize\", checkMobile);\n    return () => {\n      window.removeEventListener(\"resize\", checkMobile);\n    };\n  }, []);\n  useEffect(() => {\n    setVisible(false);\n    const setupObserver = () => {\n      const firstSection = document.querySelector(\"section:first-of-type\") || document.querySelector(\".hero-container\") || document.querySelector(\".dupin-plus-header\") || document.querySelector(\"header:first-of-type\") || document.querySelector(\".main-content\") || document.querySelector(\"main > div:first-child\");\n      const secondSection = document.querySelector(\"section:nth-of-type(2)\") || document.querySelector(\".highlights-section\") || document.querySelector(\".collections-section\") || document.querySelector(\".filter-section\");\n      if (!firstSection || !secondSection) {\n        const handleScroll = () => {\n          const scrollThreshold = isMobile ? 200 : 300;\n          const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n          setVisible(scrollTop > scrollThreshold);\n        };\n        window.addEventListener(\"scroll\", handleScroll);\n        return () => window.removeEventListener(\"scroll\", handleScroll);\n      }\n      const options = {\n        root: null,\n        rootMargin: isMobile ? \"-5% 0px\" : \"-10% 0px\",\n        // More sensitive on mobile\n        threshold: 0\n      };\n      const firstSectionObserver = new IntersectionObserver((entries) => {\n        const [entry] = entries;\n        if (entry.isIntersecting) {\n          setVisible(false);\n        }\n      }, options);\n      const secondSectionObserver = new IntersectionObserver((entries) => {\n        const [entry] = entries;\n        if (entry.isIntersecting) {\n          setVisible(true);\n        }\n      }, options);\n      firstSectionObserver.observe(firstSection);\n      secondSectionObserver.observe(secondSection);\n      return () => {\n        firstSectionObserver.disconnect();\n        secondSectionObserver.disconnect();\n      };\n    };\n    const timer = setTimeout(() => {\n      setupObserver();\n    }, 500);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [location.pathname, isMobile]);\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: isMobile ? \"auto\" : \"smooth\"\n    });\n  };\n  return /* @__PURE__ */ jsxDEV(\n    \"button\",\n    {\n      className: `scroll-to-top-button fixed-mobile-element ${visible ? \"visible\" : \"\"}`,\n      onClick: scrollToTop,\n      \"aria-label\": \"Scroll to top\",\n      children: /* @__PURE__ */ jsxDEV(\n        \"svg\",\n        {\n          viewBox: \"0 0 16 16\",\n          width: \"1em\",\n          height: \"1em\",\n          focusable: \"false\",\n          fill: \"currentColor\",\n          \"aria-hidden\": \"true\",\n          className: \"SvgRWrapper\",\n          children: /* @__PURE__ */ jsxDEV(\"path\", { d: \"m3.7 6.7 3.8-3.8V15h1V2.9l3.8 3.8.7-.7-5-5-5 5z\" }, void 0, false, {\n            fileName: \"C:/Users/.Freelancer/TICKET/src/components/ScrollToTopButton/ScrollToTopButton.jsx\",\n            lineNumber: 146,\n            columnNumber: 9\n          }, this)\n        },\n        void 0,\n        false,\n        {\n          fileName: \"C:/Users/.Freelancer/TICKET/src/components/ScrollToTopButton/ScrollToTopButton.jsx\",\n          lineNumber: 137,\n          columnNumber: 7\n        },\n        this\n      )\n    },\n    void 0,\n    false,\n    {\n      fileName: \"C:/Users/.Freelancer/TICKET/src/components/ScrollToTopButton/ScrollToTopButton.jsx\",\n      lineNumber: 130,\n      columnNumber: 5\n    },\n    this\n  );\n};\n_s(ScrollToTopButton, \"eJj+Y8+zwC8d5hRRPIvgdOjLYds=\", false, function() {\n  return [useLocation];\n});\n_c = ScrollToTopButton;\nexport default ScrollToTopButton;\nvar _c;\n$RefreshReg$(_c, \"ScrollToTopButton\");\nif (import.meta.hot && !inWebWorker) {\n  window.$RefreshReg$ = prevRefreshReg;\n  window.$RefreshSig$ = prevRefreshSig;\n}\nif (import.meta.hot && !inWebWorker) {\n  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {\n    RefreshRuntime.registerExportsForReactRefresh(\"C:/Users/.Freelancer/TICKET/src/components/ScrollToTopButton/ScrollToTopButton.jsx\", currentExports);\n    import.meta.hot.accept((nextExports) => {\n      if (!nextExports) return;\n      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(\"C:/Users/.Freelancer/TICKET/src/components/ScrollToTopButton/ScrollToTopButton.jsx\", currentExports, nextExports);\n      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);\n    });\n  });\n}\n",
      "start": 1751856128124,
      "end": 1751856128133,
      "order": "normal",
      "sourcemaps": null
    }
  ]
}
