{
  "resolvedId": "C:/Users/.Freelancer/ONLINE/node_modules/memoize-one/dist/memoize-one.esm.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var cache = null;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (cache && cache.lastThis === this && isEqual(newArgs, cache.lastArgs)) {\n            return cache.lastResult;\n        }\n        var lastResult = resultFn.apply(this, newArgs);\n        cache = {\n            lastResult: lastResult,\n            lastArgs: newArgs,\n            lastThis: this,\n        };\n        return lastResult;\n    }\n    memoized.clear = function clear() {\n        cache = null;\n    };\n    return memoized;\n}\n\nexport { memoizeOne as default };\n",
      "start": 1749894715620,
      "end": 1749894716265,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1749894716265,
      "end": 1749894716265,
      "order": "pre"
    },
    {
      "name": "vite:esbuild",
      "start": 1749894716265,
      "end": 1749894716265,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1749894716265,
      "end": 1749894716265,
      "order": "normal-normal"
    },
    {
      "name": "vite:define",
      "start": 1749894716265,
      "end": 1749894716265,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-html",
      "start": 1749894716265,
      "end": 1749894716265,
      "order": "normal-normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1749894716265,
      "end": 1749894716265,
      "order": "normal-normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1749894716265,
      "end": 1749894716265,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1749894716265,
      "end": 1749894716265,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1749894716265,
      "end": 1749894716265,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1749894716265,
      "end": 1749894716265,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1749894716265,
      "end": 1749894716265,
      "order": "normal"
    }
  ]
}
