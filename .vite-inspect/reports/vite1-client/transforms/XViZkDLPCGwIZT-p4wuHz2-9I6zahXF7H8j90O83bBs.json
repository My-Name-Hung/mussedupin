{
  "resolvedId": "C:/Users/.Freelancer/ONLINE/src/pages/CartPage/CartPage.jsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import React, { useEffect, useState } from \"react\";\nimport { FaChevronDown, FaChevronUp } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\nimport Notification from \"../../components/Notification/Notification\";\nimport \"./CartPage.css\";\n\nconst CartPage = () => {\n  const [cartItems, setCartItems] = useState([]);\n  const [savedItems, setSavedItems] = useState([]);\n  const [promoCode, setPromoCode] = useState(\"\");\n  const [discountApplied, setDiscountApplied] = useState(false);\n  const [discountRate, setDiscountRate] = useState(0);\n  const [quantities, setQuantities] = useState({});\n  const [showQuantityDropdown, setShowQuantityDropdown] = useState(null);\n  const [showNotification, setShowNotification] = useState(false);\n  const [notificationMessage, setNotificationMessage] = useState(\"\");\n  const [notificationType, setNotificationType] = useState(\"success\");\n\n  useEffect(() => {\n    loadCartItems();\n  }, []);\n\n  const loadCartItems = () => {\n    const cart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n    const saved = JSON.parse(localStorage.getItem(\"savedItems\")) || [];\n    setCartItems(cart);\n    setSavedItems(saved);\n\n    // Initialize quantities state\n    const quantityState = {};\n    cart.forEach((item) => {\n      quantityState[item.id] = item.quantity;\n    });\n    setQuantities(quantityState);\n  };\n\n  const updateQuantity = (itemId, newQuantity) => {\n    const updatedCart = cartItems.map((item) => {\n      if (item.id === itemId) {\n        return { ...item, quantity: newQuantity };\n      }\n      return item;\n    });\n\n    setCartItems(updatedCart);\n    setQuantities({ ...quantities, [itemId]: newQuantity });\n    localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\n    window.dispatchEvent(new Event(\"cartUpdated\"));\n  };\n\n  const removeFromCart = (itemId) => {\n    const updatedCart = cartItems.filter((item) => item.id !== itemId);\n    setCartItems(updatedCart);\n    localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\n    window.dispatchEvent(new Event(\"cartUpdated\"));\n  };\n\n  const saveForLater = (item) => {\n    // Remove from cart\n    removeFromCart(item.id);\n\n    // Add to saved items\n    const updatedSavedItems = [...savedItems, item];\n    setSavedItems(updatedSavedItems);\n    localStorage.setItem(\"savedItems\", JSON.stringify(updatedSavedItems));\n  };\n\n  const moveToCart = (item) => {\n    // Remove from saved items\n    const updatedSavedItems = savedItems.filter(\n      (savedItem) => savedItem.id !== item.id\n    );\n    setSavedItems(updatedSavedItems);\n    localStorage.setItem(\"savedItems\", JSON.stringify(updatedSavedItems));\n\n    // Add to cart\n    const updatedCart = [...cartItems, { ...item, quantity: 1 }];\n    setCartItems(updatedCart);\n    localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\n    window.dispatchEvent(new Event(\"cartUpdated\"));\n  };\n\n  const removeSavedItem = (itemId) => {\n    const updatedSavedItems = savedItems.filter((item) => item.id !== itemId);\n    setSavedItems(updatedSavedItems);\n    localStorage.setItem(\"savedItems\", JSON.stringify(updatedSavedItems));\n  };\n\n  const PROMO_CODES = {\n    langnghethonghat: {\n      rate: 0.5,\n      message: \"Mã giảm giá 50% đã được áp dụng thành công\",\n    },\n    baotangthong: {\n      rate: 0.25,\n      message: \"Mã giảm giá 25% đã được áp dụng thành công\",\n    },\n  };\n\n  const applyPromoCode = () => {\n    const promoInfo = PROMO_CODES[promoCode.toLowerCase()];\n\n    if (promoInfo) {\n      setDiscountApplied(true);\n      setDiscountRate(promoInfo.rate);\n      setNotificationMessage(promoInfo.message);\n      setNotificationType(\"success\");\n      setShowNotification(true);\n    } else {\n      setDiscountApplied(false);\n      setDiscountRate(0);\n      setNotificationMessage(\"Mã giảm giá không hợp lệ\");\n      setNotificationType(\"error\");\n      setShowNotification(true);\n    }\n  };\n\n  const calculateTotal = () => {\n    const subtotal = cartItems.reduce((total, item) => {\n      return total + item.price * item.quantity;\n    }, 0);\n\n    return discountApplied ? subtotal * (1 - discountRate) : subtotal;\n  };\n\n  return (\n    <div className=\"cart-page\">\n      <Notification\n        message={notificationMessage}\n        isVisible={showNotification}\n        onClose={() => setShowNotification(false)}\n        type={notificationType}\n      />\n\n      <h1 className=\"cart-title\">Giỏ hàng của tôi</h1>\n\n      <div className=\"cart-actions-top\">\n        <button className=\"checkout-button\">Đi đến thanh toán</button>\n        <Link to=\"/\" className=\"continue-shopping\">\n          Tiếp tục mua sắm\n        </Link>\n      </div>\n\n      <div className=\"cart-content\">\n        {cartItems.map((item) => (\n          <div key={item.id} className=\"cart-item\">\n            <div className=\"item-image\">\n              <img src={item.image} alt={item.name} />\n            </div>\n\n            <div className=\"item-details\">\n              <h3>{item.name}</h3>\n\n              <div className=\"quantity-selector\">\n                <div\n                  className=\"quantity-display\"\n                  onClick={() =>\n                    setShowQuantityDropdown(\n                      item.id === showQuantityDropdown ? null : item.id\n                    )\n                  }\n                >\n                  <span>{quantities[item.id]}</span>\n                  {showQuantityDropdown === item.id ? (\n                    <FaChevronUp />\n                  ) : (\n                    <FaChevronDown />\n                  )}\n                </div>\n\n                {showQuantityDropdown === item.id && (\n                  <div className=\"quantity-dropdown\">\n                    {[...Array(20)].map((_, i) => (\n                      <div\n                        key={i + 1}\n                        className=\"quantity-option\"\n                        onClick={() => {\n                          updateQuantity(item.id, i + 1);\n                          setShowQuantityDropdown(null);\n                        }}\n                      >\n                        {i + 1}\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n\n              <p className=\"item-price\">\n                {(item.price * quantities[item.id]).toLocaleString()}đ\n              </p>\n\n              <div className=\"item-actions\">\n                <button\n                  className=\"remove-item\"\n                  onClick={() => removeFromCart(item.id)}\n                >\n                  Xóa khỏi giỏ hàng\n                </button>\n                <button\n                  className=\"save-for-later\"\n                  onClick={() => saveForLater(item)}\n                >\n                  Lưu để xem sau\n                </button>\n              </div>\n\n              <div className=\"promo-code\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Nhập mã giảm giá\"\n                  value={promoCode}\n                  className=\"promo-code-input\"\n                  onChange={(e) => setPromoCode(e.target.value)}\n                />\n                <button className=\"apply-promo\" onClick={applyPromoCode}>\n                  Áp dụng\n                </button>\n              </div>\n            </div>\n          </div>\n        ))}\n\n        <div className=\"cart-total\">\n          <div className=\"total-amount\">\n            Tổng cộng: {calculateTotal().toLocaleString()}đ\n          </div>\n          <p className=\"shipping-note\">\n            Không bao gồm chi phí vận chuyển, hãy chọn tùy chọn vận chuyển\n            trước.\n          </p>\n        </div>\n\n        <div className=\"product-payment-notes\">\n          <div className=\"note-item\">\n            <span className=\"checkmark\">✓</span>\n            <p>Thanh toán an toàn bởi Verifone</p>\n          </div>\n          <div className=\"note-item\">\n            <span className=\"checkmark\">✓</span>\n            <p>\n              Hài lòng hoặc được hoàn lại tiền trong vòng 14 ngày để thay đổi\n              quyết định\n            </p>\n          </div>\n          <div className=\"note-item\">\n            <span className=\"checkmark\">✓</span>\n            <p>Giao hàng trong vòng 1 đến 2 ngày làm việc</p>\n          </div>\n        </div>\n\n        <div className=\"cart-actions-bottom\">\n          <button className=\"checkout-button\">Đi đến thanh toán</button>\n          <Link to=\"/category\" className=\"continue-shopping\">\n            Tiếp tục mua sắm\n          </Link>\n        </div>\n\n        {savedItems.length > 0 && (\n          <section className=\"related-products-payment\">\n            <h2>Các mục được lưu lại để xem sau</h2>\n            <p className=\"subtitle\">\n              Các mặt hàng này chỉ được lưu trữ trong giỏ hàng của bạn để sử\n              dụng sau.\n            </p>\n\n            <div className=\"saved-items\">\n              {savedItems.map((item) => (\n                <div key={item.id} className=\"saved-item\">\n                  <img src={item.image} alt={item.name} />\n                  <h3>{item.name}</h3>\n                  <p className=\"price\">{item.price.toLocaleString()}đ</p>\n                  <div className=\"saved-item-actions\">\n                    <button onClick={() => removeSavedItem(item.id)}>\n                      Xóa khỏi giỏ hàng\n                    </button>\n                    <button onClick={() => moveToCart(item)}>\n                      Thêm vào giỏ hàng\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CartPage;\n",
      "start": 1749792471780,
      "end": 1749792471862,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1749792471862,
      "end": 1749792471862,
      "order": "pre"
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaChevronDown, FaChevronUp } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\nimport Notification from \"../../components/Notification/Notification\";\nimport \"./CartPage.css\";\nconst CartPage = () => {\n  const [cartItems, setCartItems] = useState([]);\n  const [savedItems, setSavedItems] = useState([]);\n  const [promoCode, setPromoCode] = useState(\"\");\n  const [discountApplied, setDiscountApplied] = useState(false);\n  const [discountRate, setDiscountRate] = useState(0);\n  const [quantities, setQuantities] = useState({});\n  const [showQuantityDropdown, setShowQuantityDropdown] = useState(null);\n  const [showNotification, setShowNotification] = useState(false);\n  const [notificationMessage, setNotificationMessage] = useState(\"\");\n  const [notificationType, setNotificationType] = useState(\"success\");\n  useEffect(() => {\n    loadCartItems();\n  }, []);\n  const loadCartItems = () => {\n    const cart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n    const saved = JSON.parse(localStorage.getItem(\"savedItems\")) || [];\n    setCartItems(cart);\n    setSavedItems(saved);\n    const quantityState = {};\n    cart.forEach((item) => {\n      quantityState[item.id] = item.quantity;\n    });\n    setQuantities(quantityState);\n  };\n  const updateQuantity = (itemId, newQuantity) => {\n    const updatedCart = cartItems.map((item) => {\n      if (item.id === itemId) {\n        return { ...item, quantity: newQuantity };\n      }\n      return item;\n    });\n    setCartItems(updatedCart);\n    setQuantities({ ...quantities, [itemId]: newQuantity });\n    localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\n    window.dispatchEvent(new Event(\"cartUpdated\"));\n  };\n  const removeFromCart = (itemId) => {\n    const updatedCart = cartItems.filter((item) => item.id !== itemId);\n    setCartItems(updatedCart);\n    localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\n    window.dispatchEvent(new Event(\"cartUpdated\"));\n  };\n  const saveForLater = (item) => {\n    removeFromCart(item.id);\n    const updatedSavedItems = [...savedItems, item];\n    setSavedItems(updatedSavedItems);\n    localStorage.setItem(\"savedItems\", JSON.stringify(updatedSavedItems));\n  };\n  const moveToCart = (item) => {\n    const updatedSavedItems = savedItems.filter(\n      (savedItem) => savedItem.id !== item.id\n    );\n    setSavedItems(updatedSavedItems);\n    localStorage.setItem(\"savedItems\", JSON.stringify(updatedSavedItems));\n    const updatedCart = [...cartItems, { ...item, quantity: 1 }];\n    setCartItems(updatedCart);\n    localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\n    window.dispatchEvent(new Event(\"cartUpdated\"));\n  };\n  const removeSavedItem = (itemId) => {\n    const updatedSavedItems = savedItems.filter((item) => item.id !== itemId);\n    setSavedItems(updatedSavedItems);\n    localStorage.setItem(\"savedItems\", JSON.stringify(updatedSavedItems));\n  };\n  const PROMO_CODES = {\n    langnghethonghat: {\n      rate: 0.5,\n      message: \"Mã giảm giá 50% đã được áp dụng thành công\"\n    },\n    baotangthong: {\n      rate: 0.25,\n      message: \"Mã giảm giá 25% đã được áp dụng thành công\"\n    }\n  };\n  const applyPromoCode = () => {\n    const promoInfo = PROMO_CODES[promoCode.toLowerCase()];\n    if (promoInfo) {\n      setDiscountApplied(true);\n      setDiscountRate(promoInfo.rate);\n      setNotificationMessage(promoInfo.message);\n      setNotificationType(\"success\");\n      setShowNotification(true);\n    } else {\n      setDiscountApplied(false);\n      setDiscountRate(0);\n      setNotificationMessage(\"Mã giảm giá không hợp lệ\");\n      setNotificationType(\"error\");\n      setShowNotification(true);\n    }\n  };\n  const calculateTotal = () => {\n    const subtotal = cartItems.reduce((total, item) => {\n      return total + item.price * item.quantity;\n    }, 0);\n    return discountApplied ? subtotal * (1 - discountRate) : subtotal;\n  };\n  return /* @__PURE__ */ jsxs(\"div\", { className: \"cart-page\", children: [\n    /* @__PURE__ */ jsx(\n      Notification,\n      {\n        message: notificationMessage,\n        isVisible: showNotification,\n        onClose: () => setShowNotification(false),\n        type: notificationType\n      }\n    ),\n    /* @__PURE__ */ jsx(\"h1\", { className: \"cart-title\", children: \"Giỏ hàng của tôi\" }),\n    /* @__PURE__ */ jsxs(\"div\", { className: \"cart-actions-top\", children: [\n      /* @__PURE__ */ jsx(\"button\", { className: \"checkout-button\", children: \"Đi đến thanh toán\" }),\n      /* @__PURE__ */ jsx(Link, { to: \"/\", className: \"continue-shopping\", children: \"Tiếp tục mua sắm\" })\n    ] }),\n    /* @__PURE__ */ jsxs(\"div\", { className: \"cart-content\", children: [\n      cartItems.map((item) => /* @__PURE__ */ jsxs(\"div\", { className: \"cart-item\", children: [\n        /* @__PURE__ */ jsx(\"div\", { className: \"item-image\", children: /* @__PURE__ */ jsx(\"img\", { src: item.image, alt: item.name }) }),\n        /* @__PURE__ */ jsxs(\"div\", { className: \"item-details\", children: [\n          /* @__PURE__ */ jsx(\"h3\", { children: item.name }),\n          /* @__PURE__ */ jsxs(\"div\", { className: \"quantity-selector\", children: [\n            /* @__PURE__ */ jsxs(\n              \"div\",\n              {\n                className: \"quantity-display\",\n                onClick: () => setShowQuantityDropdown(\n                  item.id === showQuantityDropdown ? null : item.id\n                ),\n                children: [\n                  /* @__PURE__ */ jsx(\"span\", { children: quantities[item.id] }),\n                  showQuantityDropdown === item.id ? /* @__PURE__ */ jsx(FaChevronUp, {}) : /* @__PURE__ */ jsx(FaChevronDown, {})\n                ]\n              }\n            ),\n            showQuantityDropdown === item.id && /* @__PURE__ */ jsx(\"div\", { className: \"quantity-dropdown\", children: [...Array(20)].map((_, i) => /* @__PURE__ */ jsx(\n              \"div\",\n              {\n                className: \"quantity-option\",\n                onClick: () => {\n                  updateQuantity(item.id, i + 1);\n                  setShowQuantityDropdown(null);\n                },\n                children: i + 1\n              },\n              i + 1\n            )) })\n          ] }),\n          /* @__PURE__ */ jsxs(\"p\", { className: \"item-price\", children: [\n            (item.price * quantities[item.id]).toLocaleString(),\n            \"đ\"\n          ] }),\n          /* @__PURE__ */ jsxs(\"div\", { className: \"item-actions\", children: [\n            /* @__PURE__ */ jsx(\n              \"button\",\n              {\n                className: \"remove-item\",\n                onClick: () => removeFromCart(item.id),\n                children: \"Xóa khỏi giỏ hàng\"\n              }\n            ),\n            /* @__PURE__ */ jsx(\n              \"button\",\n              {\n                className: \"save-for-later\",\n                onClick: () => saveForLater(item),\n                children: \"Lưu để xem sau\"\n              }\n            )\n          ] }),\n          /* @__PURE__ */ jsxs(\"div\", { className: \"promo-code\", children: [\n            /* @__PURE__ */ jsx(\n              \"input\",\n              {\n                type: \"text\",\n                placeholder: \"Nhập mã giảm giá\",\n                value: promoCode,\n                className: \"promo-code-input\",\n                onChange: (e) => setPromoCode(e.target.value)\n              }\n            ),\n            /* @__PURE__ */ jsx(\"button\", { className: \"apply-promo\", onClick: applyPromoCode, children: \"Áp dụng\" })\n          ] })\n        ] })\n      ] }, item.id)),\n      /* @__PURE__ */ jsxs(\"div\", { className: \"cart-total\", children: [\n        /* @__PURE__ */ jsxs(\"div\", { className: \"total-amount\", children: [\n          \"Tổng cộng: \",\n          calculateTotal().toLocaleString(),\n          \"đ\"\n        ] }),\n        /* @__PURE__ */ jsx(\"p\", { className: \"shipping-note\", children: \"Không bao gồm chi phí vận chuyển, hãy chọn tùy chọn vận chuyển trước.\" })\n      ] }),\n      /* @__PURE__ */ jsxs(\"div\", { className: \"product-payment-notes\", children: [\n        /* @__PURE__ */ jsxs(\"div\", { className: \"note-item\", children: [\n          /* @__PURE__ */ jsx(\"span\", { className: \"checkmark\", children: \"✓\" }),\n          /* @__PURE__ */ jsx(\"p\", { children: \"Thanh toán an toàn bởi Verifone\" })\n        ] }),\n        /* @__PURE__ */ jsxs(\"div\", { className: \"note-item\", children: [\n          /* @__PURE__ */ jsx(\"span\", { className: \"checkmark\", children: \"✓\" }),\n          /* @__PURE__ */ jsx(\"p\", { children: \"Hài lòng hoặc được hoàn lại tiền trong vòng 14 ngày để thay đổi quyết định\" })\n        ] }),\n        /* @__PURE__ */ jsxs(\"div\", { className: \"note-item\", children: [\n          /* @__PURE__ */ jsx(\"span\", { className: \"checkmark\", children: \"✓\" }),\n          /* @__PURE__ */ jsx(\"p\", { children: \"Giao hàng trong vòng 1 đến 2 ngày làm việc\" })\n        ] })\n      ] }),\n      /* @__PURE__ */ jsxs(\"div\", { className: \"cart-actions-bottom\", children: [\n        /* @__PURE__ */ jsx(\"button\", { className: \"checkout-button\", children: \"Đi đến thanh toán\" }),\n        /* @__PURE__ */ jsx(Link, { to: \"/category\", className: \"continue-shopping\", children: \"Tiếp tục mua sắm\" })\n      ] }),\n      savedItems.length > 0 && /* @__PURE__ */ jsxs(\"section\", { className: \"related-products-payment\", children: [\n        /* @__PURE__ */ jsx(\"h2\", { children: \"Các mục được lưu lại để xem sau\" }),\n        /* @__PURE__ */ jsx(\"p\", { className: \"subtitle\", children: \"Các mặt hàng này chỉ được lưu trữ trong giỏ hàng của bạn để sử dụng sau.\" }),\n        /* @__PURE__ */ jsx(\"div\", { className: \"saved-items\", children: savedItems.map((item) => /* @__PURE__ */ jsxs(\"div\", { className: \"saved-item\", children: [\n          /* @__PURE__ */ jsx(\"img\", { src: item.image, alt: item.name }),\n          /* @__PURE__ */ jsx(\"h3\", { children: item.name }),\n          /* @__PURE__ */ jsxs(\"p\", { className: \"price\", children: [\n            item.price.toLocaleString(),\n            \"đ\"\n          ] }),\n          /* @__PURE__ */ jsxs(\"div\", { className: \"saved-item-actions\", children: [\n            /* @__PURE__ */ jsx(\"button\", { onClick: () => removeSavedItem(item.id), children: \"Xóa khỏi giỏ hàng\" }),\n            /* @__PURE__ */ jsx(\"button\", { onClick: () => moveToCart(item), children: \"Thêm vào giỏ hàng\" })\n          ] })\n        ] }, item.id)) })\n      ] })\n    ] })\n  ] });\n};\nexport default CartPage;\n",
      "start": 1749792471862,
      "end": 1749792471991,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "C:/Users/.Freelancer/ONLINE/src/pages/CartPage/CartPage.jsx"
        ],
        "sourcesContent": [
          "import React, { useEffect, useState } from \"react\";\nimport { FaChevronDown, FaChevronUp } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\nimport Notification from \"../../components/Notification/Notification\";\nimport \"./CartPage.css\";\n\nconst CartPage = () => {\n  const [cartItems, setCartItems] = useState([]);\n  const [savedItems, setSavedItems] = useState([]);\n  const [promoCode, setPromoCode] = useState(\"\");\n  const [discountApplied, setDiscountApplied] = useState(false);\n  const [discountRate, setDiscountRate] = useState(0);\n  const [quantities, setQuantities] = useState({});\n  const [showQuantityDropdown, setShowQuantityDropdown] = useState(null);\n  const [showNotification, setShowNotification] = useState(false);\n  const [notificationMessage, setNotificationMessage] = useState(\"\");\n  const [notificationType, setNotificationType] = useState(\"success\");\n\n  useEffect(() => {\n    loadCartItems();\n  }, []);\n\n  const loadCartItems = () => {\n    const cart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n    const saved = JSON.parse(localStorage.getItem(\"savedItems\")) || [];\n    setCartItems(cart);\n    setSavedItems(saved);\n\n    // Initialize quantities state\n    const quantityState = {};\n    cart.forEach((item) => {\n      quantityState[item.id] = item.quantity;\n    });\n    setQuantities(quantityState);\n  };\n\n  const updateQuantity = (itemId, newQuantity) => {\n    const updatedCart = cartItems.map((item) => {\n      if (item.id === itemId) {\n        return { ...item, quantity: newQuantity };\n      }\n      return item;\n    });\n\n    setCartItems(updatedCart);\n    setQuantities({ ...quantities, [itemId]: newQuantity });\n    localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\n    window.dispatchEvent(new Event(\"cartUpdated\"));\n  };\n\n  const removeFromCart = (itemId) => {\n    const updatedCart = cartItems.filter((item) => item.id !== itemId);\n    setCartItems(updatedCart);\n    localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\n    window.dispatchEvent(new Event(\"cartUpdated\"));\n  };\n\n  const saveForLater = (item) => {\n    // Remove from cart\n    removeFromCart(item.id);\n\n    // Add to saved items\n    const updatedSavedItems = [...savedItems, item];\n    setSavedItems(updatedSavedItems);\n    localStorage.setItem(\"savedItems\", JSON.stringify(updatedSavedItems));\n  };\n\n  const moveToCart = (item) => {\n    // Remove from saved items\n    const updatedSavedItems = savedItems.filter(\n      (savedItem) => savedItem.id !== item.id\n    );\n    setSavedItems(updatedSavedItems);\n    localStorage.setItem(\"savedItems\", JSON.stringify(updatedSavedItems));\n\n    // Add to cart\n    const updatedCart = [...cartItems, { ...item, quantity: 1 }];\n    setCartItems(updatedCart);\n    localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\n    window.dispatchEvent(new Event(\"cartUpdated\"));\n  };\n\n  const removeSavedItem = (itemId) => {\n    const updatedSavedItems = savedItems.filter((item) => item.id !== itemId);\n    setSavedItems(updatedSavedItems);\n    localStorage.setItem(\"savedItems\", JSON.stringify(updatedSavedItems));\n  };\n\n  const PROMO_CODES = {\n    langnghethonghat: {\n      rate: 0.5,\n      message: \"Mã giảm giá 50% đã được áp dụng thành công\",\n    },\n    baotangthong: {\n      rate: 0.25,\n      message: \"Mã giảm giá 25% đã được áp dụng thành công\",\n    },\n  };\n\n  const applyPromoCode = () => {\n    const promoInfo = PROMO_CODES[promoCode.toLowerCase()];\n\n    if (promoInfo) {\n      setDiscountApplied(true);\n      setDiscountRate(promoInfo.rate);\n      setNotificationMessage(promoInfo.message);\n      setNotificationType(\"success\");\n      setShowNotification(true);\n    } else {\n      setDiscountApplied(false);\n      setDiscountRate(0);\n      setNotificationMessage(\"Mã giảm giá không hợp lệ\");\n      setNotificationType(\"error\");\n      setShowNotification(true);\n    }\n  };\n\n  const calculateTotal = () => {\n    const subtotal = cartItems.reduce((total, item) => {\n      return total + item.price * item.quantity;\n    }, 0);\n\n    return discountApplied ? subtotal * (1 - discountRate) : subtotal;\n  };\n\n  return (\n    <div className=\"cart-page\">\n      <Notification\n        message={notificationMessage}\n        isVisible={showNotification}\n        onClose={() => setShowNotification(false)}\n        type={notificationType}\n      />\n\n      <h1 className=\"cart-title\">Giỏ hàng của tôi</h1>\n\n      <div className=\"cart-actions-top\">\n        <button className=\"checkout-button\">Đi đến thanh toán</button>\n        <Link to=\"/\" className=\"continue-shopping\">\n          Tiếp tục mua sắm\n        </Link>\n      </div>\n\n      <div className=\"cart-content\">\n        {cartItems.map((item) => (\n          <div key={item.id} className=\"cart-item\">\n            <div className=\"item-image\">\n              <img src={item.image} alt={item.name} />\n            </div>\n\n            <div className=\"item-details\">\n              <h3>{item.name}</h3>\n\n              <div className=\"quantity-selector\">\n                <div\n                  className=\"quantity-display\"\n                  onClick={() =>\n                    setShowQuantityDropdown(\n                      item.id === showQuantityDropdown ? null : item.id\n                    )\n                  }\n                >\n                  <span>{quantities[item.id]}</span>\n                  {showQuantityDropdown === item.id ? (\n                    <FaChevronUp />\n                  ) : (\n                    <FaChevronDown />\n                  )}\n                </div>\n\n                {showQuantityDropdown === item.id && (\n                  <div className=\"quantity-dropdown\">\n                    {[...Array(20)].map((_, i) => (\n                      <div\n                        key={i + 1}\n                        className=\"quantity-option\"\n                        onClick={() => {\n                          updateQuantity(item.id, i + 1);\n                          setShowQuantityDropdown(null);\n                        }}\n                      >\n                        {i + 1}\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n\n              <p className=\"item-price\">\n                {(item.price * quantities[item.id]).toLocaleString()}đ\n              </p>\n\n              <div className=\"item-actions\">\n                <button\n                  className=\"remove-item\"\n                  onClick={() => removeFromCart(item.id)}\n                >\n                  Xóa khỏi giỏ hàng\n                </button>\n                <button\n                  className=\"save-for-later\"\n                  onClick={() => saveForLater(item)}\n                >\n                  Lưu để xem sau\n                </button>\n              </div>\n\n              <div className=\"promo-code\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Nhập mã giảm giá\"\n                  value={promoCode}\n                  className=\"promo-code-input\"\n                  onChange={(e) => setPromoCode(e.target.value)}\n                />\n                <button className=\"apply-promo\" onClick={applyPromoCode}>\n                  Áp dụng\n                </button>\n              </div>\n            </div>\n          </div>\n        ))}\n\n        <div className=\"cart-total\">\n          <div className=\"total-amount\">\n            Tổng cộng: {calculateTotal().toLocaleString()}đ\n          </div>\n          <p className=\"shipping-note\">\n            Không bao gồm chi phí vận chuyển, hãy chọn tùy chọn vận chuyển\n            trước.\n          </p>\n        </div>\n\n        <div className=\"product-payment-notes\">\n          <div className=\"note-item\">\n            <span className=\"checkmark\">✓</span>\n            <p>Thanh toán an toàn bởi Verifone</p>\n          </div>\n          <div className=\"note-item\">\n            <span className=\"checkmark\">✓</span>\n            <p>\n              Hài lòng hoặc được hoàn lại tiền trong vòng 14 ngày để thay đổi\n              quyết định\n            </p>\n          </div>\n          <div className=\"note-item\">\n            <span className=\"checkmark\">✓</span>\n            <p>Giao hàng trong vòng 1 đến 2 ngày làm việc</p>\n          </div>\n        </div>\n\n        <div className=\"cart-actions-bottom\">\n          <button className=\"checkout-button\">Đi đến thanh toán</button>\n          <Link to=\"/category\" className=\"continue-shopping\">\n            Tiếp tục mua sắm\n          </Link>\n        </div>\n\n        {savedItems.length > 0 && (\n          <section className=\"related-products-payment\">\n            <h2>Các mục được lưu lại để xem sau</h2>\n            <p className=\"subtitle\">\n              Các mặt hàng này chỉ được lưu trữ trong giỏ hàng của bạn để sử\n              dụng sau.\n            </p>\n\n            <div className=\"saved-items\">\n              {savedItems.map((item) => (\n                <div key={item.id} className=\"saved-item\">\n                  <img src={item.image} alt={item.name} />\n                  <h3>{item.name}</h3>\n                  <p className=\"price\">{item.price.toLocaleString()}đ</p>\n                  <div className=\"saved-item-actions\">\n                    <button onClick={() => removeSavedItem(item.id)}>\n                      Xóa khỏi giỏ hàng\n                    </button>\n                    <button onClick={() => moveToCart(item)}>\n                      Thêm vào giỏ hàng\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CartPage;\n"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1749792471991,
      "end": 1749792471991,
      "order": "normal-normal"
    },
    {
      "name": "vite:define",
      "start": 1749792471991,
      "end": 1749792471991,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-html",
      "start": 1749792471991,
      "end": 1749792471991,
      "order": "normal-normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1749792471991,
      "end": 1749792471991,
      "order": "normal-normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1749792471991,
      "end": 1749792471991,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1749792471991,
      "end": 1749792471991,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1749792471991,
      "end": 1749792471991,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1749792471991,
      "end": 1749792471992,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1749792471992,
      "end": 1749792471992,
      "order": "normal"
    }
  ]
}
