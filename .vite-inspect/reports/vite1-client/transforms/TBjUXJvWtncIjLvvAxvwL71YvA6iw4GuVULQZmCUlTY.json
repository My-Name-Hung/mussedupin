{
  "resolvedId": "C:/Users/.Freelancer/baotangnghethuat/src/components/Home/DuPin/DuPin.jsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./DuPin.css\";\r\n\r\n// Sample video data - replace with your actual YouTube videos\r\nconst videoData = [\r\n  {\r\n    id: 1,\r\n    title:\r\n      \"Góc nhìn từ Bảo Tàng Thông – Một lát cắt Đà Lạt trọn vẹn trong ánh chiều tà!\",\r\n    subtitle: \"Góc nhìn từ Bảo Tàng Thông\",\r\n    youtubeId: \"aozcRuYVPKw\", // Replace with actual YouTube ID\r\n    duration: \"11s\",\r\n    thumbnail:\r\n      \"https://i.ytimg.com/vi/aozcRuYVPKw/hqdefault.jpg?sqp=-oaymwFBCNACELwBSFryq4qpAzMIARUAAIhCGAHYAQHiAQoIGBACGAY4AUAB8AEB-AG2CIAC0AWKAgwIABABGD4gQihyMA8=&rs=AOn4CLCybz6fVtK17RW4ZlrHrBfDMcmiPw\", // This will be replaced with actual thumbnails\r\n    category: \"Thiên nhiên\",\r\n  },\r\n  {\r\n    id: 2,\r\n    title:\r\n      \"Góc nhìn từ Bảo Tàng Thông – Một lát cắt Đà Lạt trọn vẹn trong ánh chiều tà!\",\r\n    subtitle: \"Góc nhìn từ Bảo Tàng Thông\",\r\n    youtubeId: \"aozcRuYVPKw\", // Replace with actual YouTube ID\r\n    duration: \"11s\",\r\n    thumbnail:\r\n      \"https://i.ytimg.com/vi/aozcRuYVPKw/hqdefault.jpg?sqp=-oaymwFBCNACELwBSFryq4qpAzMIARUAAIhCGAHYAQHiAQoIGBACGAY4AUAB8AEB-AG2CIAC0AWKAgwIABABGD4gQihyMA8=&rs=AOn4CLCybz6fVtK17RW4ZlrHrBfDMcmiPw\", // This will be replaced with actual thumbnails\r\n    category: \"Thiên nhiên\",\r\n  },\r\n  {\r\n    id: 3,\r\n    title:\r\n      \"Góc nhìn từ Bảo Tàng Thông – Một lát cắt Đà Lạt trọn vẹn trong ánh chiều tà!\",\r\n    subtitle: \"Góc nhìn từ Bảo Tàng Thông\",\r\n    youtubeId: \"aozcRuYVPKw\", // Replace with actual YouTube ID\r\n    duration: \"11s\",\r\n    thumbnail:\r\n      \"https://i.ytimg.com/vi/aozcRuYVPKw/hqdefault.jpg?sqp=-oaymwFBCNACELwBSFryq4qpAzMIARUAAIhCGAHYAQHiAQoIGBACGAY4AUAB8AEB-AG2CIAC0AWKAgwIABABGD4gQihyMA8=&rs=AOn4CLCybz6fVtK17RW4ZlrHrBfDMcmiPw\", // This will be replaced with actual thumbnails\r\n    category: \"Thiên nhiên\",\r\n  },\r\n  {\r\n    id: 4,\r\n    title:\r\n      \"Góc nhìn từ Bảo Tàng Thông – Một lát cắt Đà Lạt trọn vẹn trong ánh chiều tà!\",\r\n    subtitle: \"Góc nhìn từ Bảo Tàng Thông\",\r\n    youtubeId: \"aozcRuYVPKw\", // Replace with actual YouTube ID\r\n    duration: \"11s\",\r\n    thumbnail:\r\n      \"https://i.ytimg.com/vi/aozcRuYVPKw/hqdefault.jpg?sqp=-oaymwFBCNACELwBSFryq4qpAzMIARUAAIhCGAHYAQHiAQoIGBACGAY4AUAB8AEB-AG2CIAC0AWKAgwIABABGD4gQihyMA8=&rs=AOn4CLCybz6fVtK17RW4ZlrHrBfDMcmiPw\", // This will be replaced with actual thumbnails\r\n    category: \"Thiên nhiên\",\r\n  },\r\n];\r\n\r\nconst DuPin = () => {\r\n  const scrollContainerRef = useRef(null);\r\n  const sectionRef = useRef(null);\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const [selectedVideo, setSelectedVideo] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [isMobile, setIsMobile] = useState(false);\r\n  const animationRef = useRef(null);\r\n  const lastTimestampRef = useRef(null);\r\n  const [scrollPosition, setScrollPosition] = useState(0);\r\n  const [containerWidth, setContainerWidth] = useState(0);\r\n  const [contentWidth, setContentWidth] = useState(0);\r\n  const [isPaused, setIsPaused] = useState(false);\r\n  const [scrollProgress, setScrollProgress] = useState(0);\r\n  const [activeCardIndex, setActiveCardIndex] = useState(null);\r\n  const [touchStartX, setTouchStartX] = useState(0);\r\n  const [isUserInteracting, setIsUserInteracting] = useState(false);\r\n  const [showSwipeHint, setShowSwipeHint] = useState(true);\r\n\r\n  // Check if mobile\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setIsMobile(window.innerWidth <= 768);\r\n    };\r\n\r\n    handleResize();\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    // Ẩn gợi ý swipe sau 5 giây\r\n    if (isMobile) {\r\n      const timer = setTimeout(() => {\r\n        setShowSwipeHint(false);\r\n      }, 5000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, [isMobile]);\r\n\r\n  // Handle visibility detection with enhanced threshold\r\n  useEffect(() => {\r\n    const options = {\r\n      threshold: [0.05, 0.1, 0.2, 0.5, 0.8],\r\n      rootMargin: \"0px 0px 100px 0px\",\r\n    };\r\n\r\n    const handleVisibilityChange = (entries) => {\r\n      const entry = entries[0];\r\n      if (entry.isIntersecting) {\r\n        // Use a smoother transition based on intersection ratio\r\n        const ratio = Math.min(entry.intersectionRatio * 2, 1);\r\n        if (ratio > 0.1) {\r\n          setIsVisible(true);\r\n\r\n          // Apply parallax effect when section comes into view\r\n          if (sectionRef.current) {\r\n            sectionRef.current.style.transform = \"translateY(0)\";\r\n            sectionRef.current.style.opacity = \"1\";\r\n          }\r\n        }\r\n      } else if (entry.intersectionRatio === 0) {\r\n        setIsVisible(false);\r\n      }\r\n    };\r\n\r\n    const observer = new IntersectionObserver(handleVisibilityChange, options);\r\n\r\n    if (sectionRef.current) {\r\n      observer.observe(sectionRef.current);\r\n    }\r\n\r\n    return () => {\r\n      if (sectionRef.current) {\r\n        observer.unobserve(sectionRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Parallax scrolling effect\r\n  useEffect(() => {\r\n    const handleParallax = () => {\r\n      if (sectionRef.current) {\r\n        const rect = sectionRef.current.getBoundingClientRect();\r\n        const windowHeight = window.innerHeight;\r\n\r\n        if (rect.top < windowHeight && rect.bottom > 0) {\r\n          const scrolled =\r\n            (windowHeight - rect.top) / (windowHeight + rect.height);\r\n          setScrollProgress(Math.min(Math.max(scrolled, 0), 1));\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleParallax);\r\n    return () => window.removeEventListener(\"scroll\", handleParallax);\r\n  }, []);\r\n\r\n  // Calculate widths for scroll animation with improved precision\r\n  useEffect(() => {\r\n    if (!scrollContainerRef.current) return;\r\n\r\n    const calculateWidths = () => {\r\n      if (scrollContainerRef.current) {\r\n        const containerWidth = scrollContainerRef.current.clientWidth;\r\n        const contentWidth = scrollContainerRef.current.scrollWidth;\r\n\r\n        setContainerWidth(containerWidth);\r\n        setContentWidth(contentWidth);\r\n      }\r\n    };\r\n\r\n    if (window.ResizeObserver) {\r\n      const resizeObserver = new ResizeObserver(calculateWidths);\r\n      resizeObserver.observe(scrollContainerRef.current);\r\n\r\n      return () => {\r\n        resizeObserver.disconnect();\r\n      };\r\n    } else {\r\n      calculateWidths();\r\n\r\n      let debounceTimer;\r\n      const handleResize = () => {\r\n        clearTimeout(debounceTimer);\r\n        debounceTimer = setTimeout(calculateWidths, 100);\r\n      };\r\n\r\n      window.addEventListener(\"resize\", handleResize);\r\n\r\n      return () => {\r\n        window.removeEventListener(\"resize\", handleResize);\r\n        clearTimeout(debounceTimer);\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  // Enhanced auto-scroll animation with variable speed\r\n  useEffect(() => {\r\n    if (\r\n      !isVisible ||\r\n      contentWidth <= containerWidth ||\r\n      isPaused ||\r\n      isUserInteracting\r\n    ) {\r\n      if (animationRef.current) {\r\n        cancelAnimationFrame(animationRef.current);\r\n        animationRef.current = null;\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Dynamic speed based on screen size and content width\r\n    const baseScrollSpeed = isMobile ? 0.5 : 1;\r\n    const maxScroll = contentWidth - containerWidth;\r\n\r\n    const animate = (timestamp) => {\r\n      if (!lastTimestampRef.current) lastTimestampRef.current = timestamp;\r\n      const elapsed = timestamp - lastTimestampRef.current;\r\n\r\n      // More refined speed calculation with easing\r\n      const scrollSpeed =\r\n        baseScrollSpeed *\r\n        (Math.min(contentWidth / 3500, 1.5) + 0.3) *\r\n        (1 + Math.sin(scrollProgress * Math.PI) * 0.2);\r\n\r\n      setScrollPosition((prevPosition) => {\r\n        // Changed from subtraction to addition for left-to-right direction\r\n        const newPosition =\r\n          prevPosition +\r\n          scrollSpeed *\r\n            (elapsed / 16) *\r\n            (1 - Math.sin((prevPosition / maxScroll) * Math.PI) * 0.15);\r\n\r\n        // Loop transition for left-to-right direction\r\n        if (newPosition >= maxScroll) {\r\n          return 0;\r\n        }\r\n        return newPosition;\r\n      });\r\n\r\n      lastTimestampRef.current = timestamp;\r\n      animationRef.current = requestAnimationFrame(animate);\r\n    };\r\n\r\n    animationRef.current = requestAnimationFrame(animate);\r\n\r\n    return () => {\r\n      if (animationRef.current) {\r\n        cancelAnimationFrame(animationRef.current);\r\n        animationRef.current = null;\r\n      }\r\n      lastTimestampRef.current = null;\r\n    };\r\n  }, [\r\n    isVisible,\r\n    containerWidth,\r\n    contentWidth,\r\n    isPaused,\r\n    isMobile,\r\n    isUserInteracting,\r\n  ]);\r\n\r\n  // Update scroll position with optimized transforms\r\n  useEffect(() => {\r\n    if (scrollContainerRef.current) {\r\n      // Use hardware-accelerated transforms for better performance\r\n      if (isMobile) {\r\n        scrollContainerRef.current.style.transform = `translateX(-${scrollPosition}px)`;\r\n      } else {\r\n        scrollContainerRef.current.scrollLeft = scrollPosition;\r\n      }\r\n\r\n      // Determine which card is most visible/centered\r\n      if (scrollContainerRef.current.children[0]) {\r\n        const items = scrollContainerRef.current.children[0].children;\r\n        const containerCenter = containerWidth / 2;\r\n\r\n        // Update center calculation for left-to-right direction\r\n        const adjustedCenter = isMobile\r\n          ? containerCenter - scrollPosition\r\n          : containerCenter + scrollPosition;\r\n\r\n        let minDistance = Infinity;\r\n        let activeIndex = null;\r\n\r\n        Array.from(items).forEach((item, index) => {\r\n          const rect = item.getBoundingClientRect();\r\n          const itemCenter = rect.left + rect.width / 2;\r\n          const distance = Math.abs(itemCenter - adjustedCenter);\r\n\r\n          if (distance < minDistance) {\r\n            minDistance = distance;\r\n            activeIndex = index;\r\n          }\r\n        });\r\n\r\n        setActiveCardIndex(activeIndex);\r\n      }\r\n    }\r\n  }, [scrollPosition, isMobile, containerWidth, contentWidth]);\r\n\r\n  // Cải thiện xử lý touch event trên mobile\r\n  const handleTouchStart = (e) => {\r\n    setIsPaused(true);\r\n    setIsUserInteracting(true);\r\n    setTouchStartX(e.touches[0].clientX);\r\n    setShowSwipeHint(false); // Ẩn gợi ý khi người dùng tương tác\r\n  };\r\n\r\n  const handleTouchEnd = () => {\r\n    setIsUserInteracting(false);\r\n    // Trì hoãn trước khi tiếp tục auto-scroll\r\n    setTimeout(() => {\r\n      if (!isPaused) {\r\n        setIsPaused(false);\r\n      }\r\n    }, 1200);\r\n  };\r\n\r\n  const handleTouchMove = (e) => {\r\n    if (isUserInteracting && scrollContainerRef.current) {\r\n      const touchX = e.touches[0].clientX;\r\n      const diff = touchStartX - touchX;\r\n\r\n      // Cập nhật vị trí scroll dựa trên chuyển động của ngón tay\r\n      setScrollPosition((prev) => {\r\n        const newPosition = prev + diff * 1.2; // Độ nhạy khi vuốt\r\n        setTouchStartX(touchX);\r\n\r\n        if (newPosition < 0) return 0;\r\n        if (newPosition > contentWidth - containerWidth)\r\n          return contentWidth - containerWidth;\r\n\r\n        return newPosition;\r\n      });\r\n    }\r\n  };\r\n\r\n  // Enhanced hover/touch interaction\r\n  const handleMouseEnter = (index) => {\r\n    setIsPaused(true);\r\n    setActiveCardIndex(index);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setIsPaused(false);\r\n    setActiveCardIndex(null);\r\n  };\r\n\r\n  // Enhanced video selection and modal\r\n  const openVideoModal = (video) => {\r\n    setSelectedVideo(video);\r\n    setShowModal(true);\r\n    document.body.style.overflow = \"hidden\"; // Prevent scrolling when modal is open\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    // Add fade out animation before removing\r\n    const modal = document.querySelector(\".video-modal\");\r\n    if (modal) {\r\n      modal.classList.add(\"closing\");\r\n      setTimeout(() => {\r\n        setSelectedVideo(null);\r\n        document.body.style.overflow = \"auto\"; // Re-enable scrolling\r\n      }, 300);\r\n    } else {\r\n      setSelectedVideo(null);\r\n      document.body.style.overflow = \"auto\";\r\n    }\r\n  };\r\n\r\n  // Close modal when clicking outside the content\r\n  const handleModalBackdropClick = (e) => {\r\n    if (e.target.classList.contains(\"video-modal\")) {\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  // Calculate parallax offset for items\r\n  const getParallaxOffset = (index) => {\r\n    const baseOffset = scrollProgress * 15;\r\n    return baseOffset + (index % 3) * 5;\r\n  };\r\n\r\n  return (\r\n    <section className=\"dupin-section\" id=\"dupin\" ref={sectionRef}>\r\n      <div\r\n        className=\"dupin-background\"\r\n        style={{ opacity: 0.05 + scrollProgress * 0.1 }}\r\n      ></div>\r\n\r\n      <div\r\n        className=\"dupin-header\"\r\n        style={{ transform: `translateY(${scrollProgress * -20}px)` }}\r\n      >\r\n        <h2 className=\"dupin-title\">\r\n          MUSÉE DU PIN +\r\n        </h2>\r\n        <div className=\"dupin-subtitle\">\r\n          \r\n            Khám phá nội dung kỹ thuật số độc quyền của chúng tôi\r\n          \r\n        </div>\r\n      </div>\r\n\r\n      <div className={`dupin-gallery-container ${isVisible ? \"visible\" : \"\"}`}>\r\n        {isMobile && showSwipeHint && (\r\n          <div className=\"swipe-hint\">\r\n            <span className=\"swipe-text\">\r\n              Swipe to explore\r\n              <svg\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"none\"\r\n                height=\"18\"\r\n                width=\"18\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                  d=\"M9 5l7 7-7 7\"\r\n                ></path>\r\n              </svg>\r\n            </span>\r\n          </div>\r\n        )}\r\n\r\n        <div\r\n          className=\"dupin-gallerys\"\r\n          ref={scrollContainerRef}\r\n          onMouseLeave={handleMouseLeave}\r\n          onTouchStart={handleTouchStart}\r\n          onTouchEnd={handleTouchEnd}\r\n          onTouchMove={handleTouchMove}\r\n          style={isMobile ? { overflow: \"visible\" } : {}}\r\n        >\r\n          <div className=\"dupin-inner-container\">\r\n            {videoData.map((video, index) => (\r\n              <div\r\n                key={video.id}\r\n                className={`dupin-item ${\r\n                  activeCardIndex === index ? \"active\" : \"\"\r\n                }`}\r\n                style={{\r\n                  animationDelay: `${index * 0.15 + 0.1}s`,\r\n                  transform: `translateY(${getParallaxOffset(index)}px)`,\r\n                }}\r\n                onMouseEnter={() => handleMouseEnter(index)}\r\n              >\r\n                <div\r\n                  className=\"dupin-video-wrapper\"\r\n                  onClick={() => openVideoModal(video)}\r\n                >\r\n                  <div className=\"dupin-thumbnail-container\">\r\n                    <img\r\n                      src={video.thumbnail}\r\n                      alt={video.title}\r\n                      className=\"dupin-thumbnail\"\r\n                      loading=\"lazy\"\r\n                    />\r\n                    <span className=\"dupin-category\">{video.category}</span>\r\n                    <div className=\"dupin-gradient-overlay\"></div>\r\n                    <div className=\"play-button\">\r\n                      <svg viewBox=\"0 0 100 100\" className=\"play-icon\">\r\n                        <circle\r\n                          cx=\"50\"\r\n                          cy=\"50\"\r\n                          r=\"45\"\r\n                          className=\"play-circle\"\r\n                        />\r\n                        <polygon\r\n                          points=\"40,30 70,50 40,70\"\r\n                          className=\"play-triangle\"\r\n                        />\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"dupin-overlay\">\r\n                    <div className=\"dupin-info\">\r\n                     \r\n                      <div className=\"dupin-meta\">\r\n                        <span className=\"video-tag\">\r\n                          VIDEO\r\n                        </span>\r\n                        <span className=\"video-duration\">{video.duration}</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"scroll-indicator\">\r\n          <div className=\"scroll-track\">\r\n            <div\r\n              className=\"scroll-thumb\"\r\n              style={{\r\n                width: `${(containerWidth / contentWidth) * 100}%`,\r\n                left: `${(scrollPosition / contentWidth) * 100}%`,\r\n              }}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className=\"dupin-footer\"\r\n        style={{ transform: `translateY(${scrollProgress * -10}px)` }}\r\n      >\r\n        <Link to=\"/dupinplus\" className=\"view-all-link\">\r\n          Nội dung thêm trên Musée Du Pin+\r\n          <span className=\"arrow-icon\">→</span>\r\n        </Link>\r\n      </div>\r\n\r\n      {/* Video Modal with enhanced animation */}\r\n      {showModal && (\r\n        <div className=\"video-modal\" onClick={handleModalBackdropClick}>\r\n          <div className=\"video-modal-content\">\r\n            <button className=\"close-modal\" onClick={closeModal}>\r\n              ×\r\n            </button>\r\n            <div className=\"video-container\">\r\n              <iframe\r\n                src={`https://www.youtube.com/embed/${selectedVideo.youtubeId}?autoplay=1`}\r\n                title={selectedVideo.title}\r\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowFullScreen\r\n              ></iframe>\r\n            </div>\r\n            <div className=\"video-modal-info\">\r\n              <div className=\"video-modal-category\">\r\n                {selectedVideo.category}\r\n              </div>\r\n              <h3 className=\"video-modal-title\">{selectedVideo.title}</h3>\r\n              {selectedVideo.subtitle && (\r\n                <p className=\"video-modal-subtitle\">{selectedVideo.subtitle}</p>\r\n              )}\r\n              <p className=\"video-modal-duration\">{selectedVideo.duration}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default DuPin;\r\n",
      "start": 1749089002881,
      "end": 1749089003768,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1749089003768,
      "end": 1749089003768,
      "order": "pre"
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./DuPin.css\";\nconst videoData = [\n  {\n    id: 1,\n    title: \"Góc nhìn từ Bảo Tàng Thông – Một lát cắt Đà Lạt trọn vẹn trong ánh chiều tà!\",\n    subtitle: \"Góc nhìn từ Bảo Tàng Thông\",\n    youtubeId: \"aozcRuYVPKw\",\n    // Replace with actual YouTube ID\n    duration: \"11s\",\n    thumbnail: \"https://i.ytimg.com/vi/aozcRuYVPKw/hqdefault.jpg?sqp=-oaymwFBCNACELwBSFryq4qpAzMIARUAAIhCGAHYAQHiAQoIGBACGAY4AUAB8AEB-AG2CIAC0AWKAgwIABABGD4gQihyMA8=&rs=AOn4CLCybz6fVtK17RW4ZlrHrBfDMcmiPw\",\n    // This will be replaced with actual thumbnails\n    category: \"Thiên nhiên\"\n  },\n  {\n    id: 2,\n    title: \"Góc nhìn từ Bảo Tàng Thông – Một lát cắt Đà Lạt trọn vẹn trong ánh chiều tà!\",\n    subtitle: \"Góc nhìn từ Bảo Tàng Thông\",\n    youtubeId: \"aozcRuYVPKw\",\n    // Replace with actual YouTube ID\n    duration: \"11s\",\n    thumbnail: \"https://i.ytimg.com/vi/aozcRuYVPKw/hqdefault.jpg?sqp=-oaymwFBCNACELwBSFryq4qpAzMIARUAAIhCGAHYAQHiAQoIGBACGAY4AUAB8AEB-AG2CIAC0AWKAgwIABABGD4gQihyMA8=&rs=AOn4CLCybz6fVtK17RW4ZlrHrBfDMcmiPw\",\n    // This will be replaced with actual thumbnails\n    category: \"Thiên nhiên\"\n  },\n  {\n    id: 3,\n    title: \"Góc nhìn từ Bảo Tàng Thông – Một lát cắt Đà Lạt trọn vẹn trong ánh chiều tà!\",\n    subtitle: \"Góc nhìn từ Bảo Tàng Thông\",\n    youtubeId: \"aozcRuYVPKw\",\n    // Replace with actual YouTube ID\n    duration: \"11s\",\n    thumbnail: \"https://i.ytimg.com/vi/aozcRuYVPKw/hqdefault.jpg?sqp=-oaymwFBCNACELwBSFryq4qpAzMIARUAAIhCGAHYAQHiAQoIGBACGAY4AUAB8AEB-AG2CIAC0AWKAgwIABABGD4gQihyMA8=&rs=AOn4CLCybz6fVtK17RW4ZlrHrBfDMcmiPw\",\n    // This will be replaced with actual thumbnails\n    category: \"Thiên nhiên\"\n  },\n  {\n    id: 4,\n    title: \"Góc nhìn từ Bảo Tàng Thông – Một lát cắt Đà Lạt trọn vẹn trong ánh chiều tà!\",\n    subtitle: \"Góc nhìn từ Bảo Tàng Thông\",\n    youtubeId: \"aozcRuYVPKw\",\n    // Replace with actual YouTube ID\n    duration: \"11s\",\n    thumbnail: \"https://i.ytimg.com/vi/aozcRuYVPKw/hqdefault.jpg?sqp=-oaymwFBCNACELwBSFryq4qpAzMIARUAAIhCGAHYAQHiAQoIGBACGAY4AUAB8AEB-AG2CIAC0AWKAgwIABABGD4gQihyMA8=&rs=AOn4CLCybz6fVtK17RW4ZlrHrBfDMcmiPw\",\n    // This will be replaced with actual thumbnails\n    category: \"Thiên nhiên\"\n  }\n];\nconst DuPin = () => {\n  const scrollContainerRef = useRef(null);\n  const sectionRef = useRef(null);\n  const [isVisible, setIsVisible] = useState(false);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n  const animationRef = useRef(null);\n  const lastTimestampRef = useRef(null);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const [containerWidth, setContainerWidth] = useState(0);\n  const [contentWidth, setContentWidth] = useState(0);\n  const [isPaused, setIsPaused] = useState(false);\n  const [scrollProgress, setScrollProgress] = useState(0);\n  const [activeCardIndex, setActiveCardIndex] = useState(null);\n  const [touchStartX, setTouchStartX] = useState(0);\n  const [isUserInteracting, setIsUserInteracting] = useState(false);\n  const [showSwipeHint, setShowSwipeHint] = useState(true);\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n    if (isMobile) {\n      const timer = setTimeout(() => {\n        setShowSwipeHint(false);\n      }, 5e3);\n      return () => clearTimeout(timer);\n    }\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, [isMobile]);\n  useEffect(() => {\n    const options = {\n      threshold: [0.05, 0.1, 0.2, 0.5, 0.8],\n      rootMargin: \"0px 0px 100px 0px\"\n    };\n    const handleVisibilityChange = (entries) => {\n      const entry = entries[0];\n      if (entry.isIntersecting) {\n        const ratio = Math.min(entry.intersectionRatio * 2, 1);\n        if (ratio > 0.1) {\n          setIsVisible(true);\n          if (sectionRef.current) {\n            sectionRef.current.style.transform = \"translateY(0)\";\n            sectionRef.current.style.opacity = \"1\";\n          }\n        }\n      } else if (entry.intersectionRatio === 0) {\n        setIsVisible(false);\n      }\n    };\n    const observer = new IntersectionObserver(handleVisibilityChange, options);\n    if (sectionRef.current) {\n      observer.observe(sectionRef.current);\n    }\n    return () => {\n      if (sectionRef.current) {\n        observer.unobserve(sectionRef.current);\n      }\n    };\n  }, []);\n  useEffect(() => {\n    const handleParallax = () => {\n      if (sectionRef.current) {\n        const rect = sectionRef.current.getBoundingClientRect();\n        const windowHeight = window.innerHeight;\n        if (rect.top < windowHeight && rect.bottom > 0) {\n          const scrolled = (windowHeight - rect.top) / (windowHeight + rect.height);\n          setScrollProgress(Math.min(Math.max(scrolled, 0), 1));\n        }\n      }\n    };\n    window.addEventListener(\"scroll\", handleParallax);\n    return () => window.removeEventListener(\"scroll\", handleParallax);\n  }, []);\n  useEffect(() => {\n    if (!scrollContainerRef.current) return;\n    const calculateWidths = () => {\n      if (scrollContainerRef.current) {\n        const containerWidth2 = scrollContainerRef.current.clientWidth;\n        const contentWidth2 = scrollContainerRef.current.scrollWidth;\n        setContainerWidth(containerWidth2);\n        setContentWidth(contentWidth2);\n      }\n    };\n    if (window.ResizeObserver) {\n      const resizeObserver = new ResizeObserver(calculateWidths);\n      resizeObserver.observe(scrollContainerRef.current);\n      return () => {\n        resizeObserver.disconnect();\n      };\n    } else {\n      calculateWidths();\n      let debounceTimer;\n      const handleResize = () => {\n        clearTimeout(debounceTimer);\n        debounceTimer = setTimeout(calculateWidths, 100);\n      };\n      window.addEventListener(\"resize\", handleResize);\n      return () => {\n        window.removeEventListener(\"resize\", handleResize);\n        clearTimeout(debounceTimer);\n      };\n    }\n  }, []);\n  useEffect(() => {\n    if (!isVisible || contentWidth <= containerWidth || isPaused || isUserInteracting) {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n        animationRef.current = null;\n      }\n      return;\n    }\n    const baseScrollSpeed = isMobile ? 0.5 : 1;\n    const maxScroll = contentWidth - containerWidth;\n    const animate = (timestamp) => {\n      if (!lastTimestampRef.current) lastTimestampRef.current = timestamp;\n      const elapsed = timestamp - lastTimestampRef.current;\n      const scrollSpeed = baseScrollSpeed * (Math.min(contentWidth / 3500, 1.5) + 0.3) * (1 + Math.sin(scrollProgress * Math.PI) * 0.2);\n      setScrollPosition((prevPosition) => {\n        const newPosition = prevPosition + scrollSpeed * (elapsed / 16) * (1 - Math.sin(prevPosition / maxScroll * Math.PI) * 0.15);\n        if (newPosition >= maxScroll) {\n          return 0;\n        }\n        return newPosition;\n      });\n      lastTimestampRef.current = timestamp;\n      animationRef.current = requestAnimationFrame(animate);\n    };\n    animationRef.current = requestAnimationFrame(animate);\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n        animationRef.current = null;\n      }\n      lastTimestampRef.current = null;\n    };\n  }, [\n    isVisible,\n    containerWidth,\n    contentWidth,\n    isPaused,\n    isMobile,\n    isUserInteracting\n  ]);\n  useEffect(() => {\n    if (scrollContainerRef.current) {\n      if (isMobile) {\n        scrollContainerRef.current.style.transform = `translateX(-${scrollPosition}px)`;\n      } else {\n        scrollContainerRef.current.scrollLeft = scrollPosition;\n      }\n      if (scrollContainerRef.current.children[0]) {\n        const items = scrollContainerRef.current.children[0].children;\n        const containerCenter = containerWidth / 2;\n        const adjustedCenter = isMobile ? containerCenter - scrollPosition : containerCenter + scrollPosition;\n        let minDistance = Infinity;\n        let activeIndex = null;\n        Array.from(items).forEach((item, index) => {\n          const rect = item.getBoundingClientRect();\n          const itemCenter = rect.left + rect.width / 2;\n          const distance = Math.abs(itemCenter - adjustedCenter);\n          if (distance < minDistance) {\n            minDistance = distance;\n            activeIndex = index;\n          }\n        });\n        setActiveCardIndex(activeIndex);\n      }\n    }\n  }, [scrollPosition, isMobile, containerWidth, contentWidth]);\n  const handleTouchStart = (e) => {\n    setIsPaused(true);\n    setIsUserInteracting(true);\n    setTouchStartX(e.touches[0].clientX);\n    setShowSwipeHint(false);\n  };\n  const handleTouchEnd = () => {\n    setIsUserInteracting(false);\n    setTimeout(() => {\n      if (!isPaused) {\n        setIsPaused(false);\n      }\n    }, 1200);\n  };\n  const handleTouchMove = (e) => {\n    if (isUserInteracting && scrollContainerRef.current) {\n      const touchX = e.touches[0].clientX;\n      const diff = touchStartX - touchX;\n      setScrollPosition((prev) => {\n        const newPosition = prev + diff * 1.2;\n        setTouchStartX(touchX);\n        if (newPosition < 0) return 0;\n        if (newPosition > contentWidth - containerWidth)\n          return contentWidth - containerWidth;\n        return newPosition;\n      });\n    }\n  };\n  const handleMouseEnter = (index) => {\n    setIsPaused(true);\n    setActiveCardIndex(index);\n  };\n  const handleMouseLeave = () => {\n    setIsPaused(false);\n    setActiveCardIndex(null);\n  };\n  const openVideoModal = (video) => {\n    setSelectedVideo(video);\n    setShowModal(true);\n    document.body.style.overflow = \"hidden\";\n  };\n  const closeModal = () => {\n    setShowModal(false);\n    const modal = document.querySelector(\".video-modal\");\n    if (modal) {\n      modal.classList.add(\"closing\");\n      setTimeout(() => {\n        setSelectedVideo(null);\n        document.body.style.overflow = \"auto\";\n      }, 300);\n    } else {\n      setSelectedVideo(null);\n      document.body.style.overflow = \"auto\";\n    }\n  };\n  const handleModalBackdropClick = (e) => {\n    if (e.target.classList.contains(\"video-modal\")) {\n      closeModal();\n    }\n  };\n  const getParallaxOffset = (index) => {\n    const baseOffset = scrollProgress * 15;\n    return baseOffset + index % 3 * 5;\n  };\n  return /* @__PURE__ */ jsxs(\"section\", { className: \"dupin-section\", id: \"dupin\", ref: sectionRef, children: [\n    /* @__PURE__ */ jsx(\n      \"div\",\n      {\n        className: \"dupin-background\",\n        style: { opacity: 0.05 + scrollProgress * 0.1 }\n      }\n    ),\n    /* @__PURE__ */ jsxs(\n      \"div\",\n      {\n        className: \"dupin-header\",\n        style: { transform: `translateY(${scrollProgress * -20}px)` },\n        children: [\n          /* @__PURE__ */ jsx(\"h2\", { className: \"dupin-title\", children: \"MUSÉE DU PIN +\" }),\n          /* @__PURE__ */ jsx(\"div\", { className: \"dupin-subtitle\", children: \"Khám phá nội dung kỹ thuật số độc quyền của chúng tôi\" })\n        ]\n      }\n    ),\n    /* @__PURE__ */ jsxs(\"div\", { className: `dupin-gallery-container ${isVisible ? \"visible\" : \"\"}`, children: [\n      isMobile && showSwipeHint && /* @__PURE__ */ jsx(\"div\", { className: \"swipe-hint\", children: /* @__PURE__ */ jsxs(\"span\", { className: \"swipe-text\", children: [\n        \"Swipe to explore\",\n        /* @__PURE__ */ jsx(\n          \"svg\",\n          {\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            height: \"18\",\n            width: \"18\",\n            stroke: \"currentColor\",\n            children: /* @__PURE__ */ jsx(\n              \"path\",\n              {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: \"2\",\n                d: \"M9 5l7 7-7 7\"\n              }\n            )\n          }\n        )\n      ] }) }),\n      /* @__PURE__ */ jsx(\n        \"div\",\n        {\n          className: \"dupin-gallerys\",\n          ref: scrollContainerRef,\n          onMouseLeave: handleMouseLeave,\n          onTouchStart: handleTouchStart,\n          onTouchEnd: handleTouchEnd,\n          onTouchMove: handleTouchMove,\n          style: isMobile ? { overflow: \"visible\" } : {},\n          children: /* @__PURE__ */ jsx(\"div\", { className: \"dupin-inner-container\", children: videoData.map((video, index) => /* @__PURE__ */ jsx(\n            \"div\",\n            {\n              className: `dupin-item ${activeCardIndex === index ? \"active\" : \"\"}`,\n              style: {\n                animationDelay: `${index * 0.15 + 0.1}s`,\n                transform: `translateY(${getParallaxOffset(index)}px)`\n              },\n              onMouseEnter: () => handleMouseEnter(index),\n              children: /* @__PURE__ */ jsxs(\n                \"div\",\n                {\n                  className: \"dupin-video-wrapper\",\n                  onClick: () => openVideoModal(video),\n                  children: [\n                    /* @__PURE__ */ jsxs(\"div\", { className: \"dupin-thumbnail-container\", children: [\n                      /* @__PURE__ */ jsx(\n                        \"img\",\n                        {\n                          src: video.thumbnail,\n                          alt: video.title,\n                          className: \"dupin-thumbnail\",\n                          loading: \"lazy\"\n                        }\n                      ),\n                      /* @__PURE__ */ jsx(\"span\", { className: \"dupin-category\", children: video.category }),\n                      /* @__PURE__ */ jsx(\"div\", { className: \"dupin-gradient-overlay\" }),\n                      /* @__PURE__ */ jsx(\"div\", { className: \"play-button\", children: /* @__PURE__ */ jsxs(\"svg\", { viewBox: \"0 0 100 100\", className: \"play-icon\", children: [\n                        /* @__PURE__ */ jsx(\n                          \"circle\",\n                          {\n                            cx: \"50\",\n                            cy: \"50\",\n                            r: \"45\",\n                            className: \"play-circle\"\n                          }\n                        ),\n                        /* @__PURE__ */ jsx(\n                          \"polygon\",\n                          {\n                            points: \"40,30 70,50 40,70\",\n                            className: \"play-triangle\"\n                          }\n                        )\n                      ] }) })\n                    ] }),\n                    /* @__PURE__ */ jsx(\"div\", { className: \"dupin-overlay\", children: /* @__PURE__ */ jsx(\"div\", { className: \"dupin-info\", children: /* @__PURE__ */ jsxs(\"div\", { className: \"dupin-meta\", children: [\n                      /* @__PURE__ */ jsx(\"span\", { className: \"video-tag\", children: \"VIDEO\" }),\n                      /* @__PURE__ */ jsx(\"span\", { className: \"video-duration\", children: video.duration })\n                    ] }) }) })\n                  ]\n                }\n              )\n            },\n            video.id\n          )) })\n        }\n      ),\n      /* @__PURE__ */ jsx(\"div\", { className: \"scroll-indicator\", children: /* @__PURE__ */ jsx(\"div\", { className: \"scroll-track\", children: /* @__PURE__ */ jsx(\n        \"div\",\n        {\n          className: \"scroll-thumb\",\n          style: {\n            width: `${containerWidth / contentWidth * 100}%`,\n            left: `${scrollPosition / contentWidth * 100}%`\n          }\n        }\n      ) }) })\n    ] }),\n    /* @__PURE__ */ jsx(\n      \"div\",\n      {\n        className: \"dupin-footer\",\n        style: { transform: `translateY(${scrollProgress * -10}px)` },\n        children: /* @__PURE__ */ jsxs(Link, { to: \"/dupinplus\", className: \"view-all-link\", children: [\n          \"Nội dung thêm trên Musée Du Pin+\",\n          /* @__PURE__ */ jsx(\"span\", { className: \"arrow-icon\", children: \"→\" })\n        ] })\n      }\n    ),\n    showModal && /* @__PURE__ */ jsx(\"div\", { className: \"video-modal\", onClick: handleModalBackdropClick, children: /* @__PURE__ */ jsxs(\"div\", { className: \"video-modal-content\", children: [\n      /* @__PURE__ */ jsx(\"button\", { className: \"close-modal\", onClick: closeModal, children: \"×\" }),\n      /* @__PURE__ */ jsx(\"div\", { className: \"video-container\", children: /* @__PURE__ */ jsx(\n        \"iframe\",\n        {\n          src: `https://www.youtube.com/embed/${selectedVideo.youtubeId}?autoplay=1`,\n          title: selectedVideo.title,\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n          allowFullScreen: true\n        }\n      ) }),\n      /* @__PURE__ */ jsxs(\"div\", { className: \"video-modal-info\", children: [\n        /* @__PURE__ */ jsx(\"div\", { className: \"video-modal-category\", children: selectedVideo.category }),\n        /* @__PURE__ */ jsx(\"h3\", { className: \"video-modal-title\", children: selectedVideo.title }),\n        selectedVideo.subtitle && /* @__PURE__ */ jsx(\"p\", { className: \"video-modal-subtitle\", children: selectedVideo.subtitle }),\n        /* @__PURE__ */ jsx(\"p\", { className: \"video-modal-duration\", children: selectedVideo.duration })\n      ] })\n    ] }) })\n  ] });\n};\nexport default DuPin;\n",
      "start": 1749089003768,
      "end": 1749089004580,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "C:/Users/.Freelancer/baotangnghethuat/src/components/Home/DuPin/DuPin.jsx"
        ],
        "sourcesContent": [
          "import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./DuPin.css\";\r\n\r\n// Sample video data - replace with your actual YouTube videos\r\nconst videoData = [\r\n  {\r\n    id: 1,\r\n    title:\r\n      \"Góc nhìn từ Bảo Tàng Thông – Một lát cắt Đà Lạt trọn vẹn trong ánh chiều tà!\",\r\n    subtitle: \"Góc nhìn từ Bảo Tàng Thông\",\r\n    youtubeId: \"aozcRuYVPKw\", // Replace with actual YouTube ID\r\n    duration: \"11s\",\r\n    thumbnail:\r\n      \"https://i.ytimg.com/vi/aozcRuYVPKw/hqdefault.jpg?sqp=-oaymwFBCNACELwBSFryq4qpAzMIARUAAIhCGAHYAQHiAQoIGBACGAY4AUAB8AEB-AG2CIAC0AWKAgwIABABGD4gQihyMA8=&rs=AOn4CLCybz6fVtK17RW4ZlrHrBfDMcmiPw\", // This will be replaced with actual thumbnails\r\n    category: \"Thiên nhiên\",\r\n  },\r\n  {\r\n    id: 2,\r\n    title:\r\n      \"Góc nhìn từ Bảo Tàng Thông – Một lát cắt Đà Lạt trọn vẹn trong ánh chiều tà!\",\r\n    subtitle: \"Góc nhìn từ Bảo Tàng Thông\",\r\n    youtubeId: \"aozcRuYVPKw\", // Replace with actual YouTube ID\r\n    duration: \"11s\",\r\n    thumbnail:\r\n      \"https://i.ytimg.com/vi/aozcRuYVPKw/hqdefault.jpg?sqp=-oaymwFBCNACELwBSFryq4qpAzMIARUAAIhCGAHYAQHiAQoIGBACGAY4AUAB8AEB-AG2CIAC0AWKAgwIABABGD4gQihyMA8=&rs=AOn4CLCybz6fVtK17RW4ZlrHrBfDMcmiPw\", // This will be replaced with actual thumbnails\r\n    category: \"Thiên nhiên\",\r\n  },\r\n  {\r\n    id: 3,\r\n    title:\r\n      \"Góc nhìn từ Bảo Tàng Thông – Một lát cắt Đà Lạt trọn vẹn trong ánh chiều tà!\",\r\n    subtitle: \"Góc nhìn từ Bảo Tàng Thông\",\r\n    youtubeId: \"aozcRuYVPKw\", // Replace with actual YouTube ID\r\n    duration: \"11s\",\r\n    thumbnail:\r\n      \"https://i.ytimg.com/vi/aozcRuYVPKw/hqdefault.jpg?sqp=-oaymwFBCNACELwBSFryq4qpAzMIARUAAIhCGAHYAQHiAQoIGBACGAY4AUAB8AEB-AG2CIAC0AWKAgwIABABGD4gQihyMA8=&rs=AOn4CLCybz6fVtK17RW4ZlrHrBfDMcmiPw\", // This will be replaced with actual thumbnails\r\n    category: \"Thiên nhiên\",\r\n  },\r\n  {\r\n    id: 4,\r\n    title:\r\n      \"Góc nhìn từ Bảo Tàng Thông – Một lát cắt Đà Lạt trọn vẹn trong ánh chiều tà!\",\r\n    subtitle: \"Góc nhìn từ Bảo Tàng Thông\",\r\n    youtubeId: \"aozcRuYVPKw\", // Replace with actual YouTube ID\r\n    duration: \"11s\",\r\n    thumbnail:\r\n      \"https://i.ytimg.com/vi/aozcRuYVPKw/hqdefault.jpg?sqp=-oaymwFBCNACELwBSFryq4qpAzMIARUAAIhCGAHYAQHiAQoIGBACGAY4AUAB8AEB-AG2CIAC0AWKAgwIABABGD4gQihyMA8=&rs=AOn4CLCybz6fVtK17RW4ZlrHrBfDMcmiPw\", // This will be replaced with actual thumbnails\r\n    category: \"Thiên nhiên\",\r\n  },\r\n];\r\n\r\nconst DuPin = () => {\r\n  const scrollContainerRef = useRef(null);\r\n  const sectionRef = useRef(null);\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const [selectedVideo, setSelectedVideo] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [isMobile, setIsMobile] = useState(false);\r\n  const animationRef = useRef(null);\r\n  const lastTimestampRef = useRef(null);\r\n  const [scrollPosition, setScrollPosition] = useState(0);\r\n  const [containerWidth, setContainerWidth] = useState(0);\r\n  const [contentWidth, setContentWidth] = useState(0);\r\n  const [isPaused, setIsPaused] = useState(false);\r\n  const [scrollProgress, setScrollProgress] = useState(0);\r\n  const [activeCardIndex, setActiveCardIndex] = useState(null);\r\n  const [touchStartX, setTouchStartX] = useState(0);\r\n  const [isUserInteracting, setIsUserInteracting] = useState(false);\r\n  const [showSwipeHint, setShowSwipeHint] = useState(true);\r\n\r\n  // Check if mobile\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setIsMobile(window.innerWidth <= 768);\r\n    };\r\n\r\n    handleResize();\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    // Ẩn gợi ý swipe sau 5 giây\r\n    if (isMobile) {\r\n      const timer = setTimeout(() => {\r\n        setShowSwipeHint(false);\r\n      }, 5000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, [isMobile]);\r\n\r\n  // Handle visibility detection with enhanced threshold\r\n  useEffect(() => {\r\n    const options = {\r\n      threshold: [0.05, 0.1, 0.2, 0.5, 0.8],\r\n      rootMargin: \"0px 0px 100px 0px\",\r\n    };\r\n\r\n    const handleVisibilityChange = (entries) => {\r\n      const entry = entries[0];\r\n      if (entry.isIntersecting) {\r\n        // Use a smoother transition based on intersection ratio\r\n        const ratio = Math.min(entry.intersectionRatio * 2, 1);\r\n        if (ratio > 0.1) {\r\n          setIsVisible(true);\r\n\r\n          // Apply parallax effect when section comes into view\r\n          if (sectionRef.current) {\r\n            sectionRef.current.style.transform = \"translateY(0)\";\r\n            sectionRef.current.style.opacity = \"1\";\r\n          }\r\n        }\r\n      } else if (entry.intersectionRatio === 0) {\r\n        setIsVisible(false);\r\n      }\r\n    };\r\n\r\n    const observer = new IntersectionObserver(handleVisibilityChange, options);\r\n\r\n    if (sectionRef.current) {\r\n      observer.observe(sectionRef.current);\r\n    }\r\n\r\n    return () => {\r\n      if (sectionRef.current) {\r\n        observer.unobserve(sectionRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Parallax scrolling effect\r\n  useEffect(() => {\r\n    const handleParallax = () => {\r\n      if (sectionRef.current) {\r\n        const rect = sectionRef.current.getBoundingClientRect();\r\n        const windowHeight = window.innerHeight;\r\n\r\n        if (rect.top < windowHeight && rect.bottom > 0) {\r\n          const scrolled =\r\n            (windowHeight - rect.top) / (windowHeight + rect.height);\r\n          setScrollProgress(Math.min(Math.max(scrolled, 0), 1));\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleParallax);\r\n    return () => window.removeEventListener(\"scroll\", handleParallax);\r\n  }, []);\r\n\r\n  // Calculate widths for scroll animation with improved precision\r\n  useEffect(() => {\r\n    if (!scrollContainerRef.current) return;\r\n\r\n    const calculateWidths = () => {\r\n      if (scrollContainerRef.current) {\r\n        const containerWidth = scrollContainerRef.current.clientWidth;\r\n        const contentWidth = scrollContainerRef.current.scrollWidth;\r\n\r\n        setContainerWidth(containerWidth);\r\n        setContentWidth(contentWidth);\r\n      }\r\n    };\r\n\r\n    if (window.ResizeObserver) {\r\n      const resizeObserver = new ResizeObserver(calculateWidths);\r\n      resizeObserver.observe(scrollContainerRef.current);\r\n\r\n      return () => {\r\n        resizeObserver.disconnect();\r\n      };\r\n    } else {\r\n      calculateWidths();\r\n\r\n      let debounceTimer;\r\n      const handleResize = () => {\r\n        clearTimeout(debounceTimer);\r\n        debounceTimer = setTimeout(calculateWidths, 100);\r\n      };\r\n\r\n      window.addEventListener(\"resize\", handleResize);\r\n\r\n      return () => {\r\n        window.removeEventListener(\"resize\", handleResize);\r\n        clearTimeout(debounceTimer);\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  // Enhanced auto-scroll animation with variable speed\r\n  useEffect(() => {\r\n    if (\r\n      !isVisible ||\r\n      contentWidth <= containerWidth ||\r\n      isPaused ||\r\n      isUserInteracting\r\n    ) {\r\n      if (animationRef.current) {\r\n        cancelAnimationFrame(animationRef.current);\r\n        animationRef.current = null;\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Dynamic speed based on screen size and content width\r\n    const baseScrollSpeed = isMobile ? 0.5 : 1;\r\n    const maxScroll = contentWidth - containerWidth;\r\n\r\n    const animate = (timestamp) => {\r\n      if (!lastTimestampRef.current) lastTimestampRef.current = timestamp;\r\n      const elapsed = timestamp - lastTimestampRef.current;\r\n\r\n      // More refined speed calculation with easing\r\n      const scrollSpeed =\r\n        baseScrollSpeed *\r\n        (Math.min(contentWidth / 3500, 1.5) + 0.3) *\r\n        (1 + Math.sin(scrollProgress * Math.PI) * 0.2);\r\n\r\n      setScrollPosition((prevPosition) => {\r\n        // Changed from subtraction to addition for left-to-right direction\r\n        const newPosition =\r\n          prevPosition +\r\n          scrollSpeed *\r\n            (elapsed / 16) *\r\n            (1 - Math.sin((prevPosition / maxScroll) * Math.PI) * 0.15);\r\n\r\n        // Loop transition for left-to-right direction\r\n        if (newPosition >= maxScroll) {\r\n          return 0;\r\n        }\r\n        return newPosition;\r\n      });\r\n\r\n      lastTimestampRef.current = timestamp;\r\n      animationRef.current = requestAnimationFrame(animate);\r\n    };\r\n\r\n    animationRef.current = requestAnimationFrame(animate);\r\n\r\n    return () => {\r\n      if (animationRef.current) {\r\n        cancelAnimationFrame(animationRef.current);\r\n        animationRef.current = null;\r\n      }\r\n      lastTimestampRef.current = null;\r\n    };\r\n  }, [\r\n    isVisible,\r\n    containerWidth,\r\n    contentWidth,\r\n    isPaused,\r\n    isMobile,\r\n    isUserInteracting,\r\n  ]);\r\n\r\n  // Update scroll position with optimized transforms\r\n  useEffect(() => {\r\n    if (scrollContainerRef.current) {\r\n      // Use hardware-accelerated transforms for better performance\r\n      if (isMobile) {\r\n        scrollContainerRef.current.style.transform = `translateX(-${scrollPosition}px)`;\r\n      } else {\r\n        scrollContainerRef.current.scrollLeft = scrollPosition;\r\n      }\r\n\r\n      // Determine which card is most visible/centered\r\n      if (scrollContainerRef.current.children[0]) {\r\n        const items = scrollContainerRef.current.children[0].children;\r\n        const containerCenter = containerWidth / 2;\r\n\r\n        // Update center calculation for left-to-right direction\r\n        const adjustedCenter = isMobile\r\n          ? containerCenter - scrollPosition\r\n          : containerCenter + scrollPosition;\r\n\r\n        let minDistance = Infinity;\r\n        let activeIndex = null;\r\n\r\n        Array.from(items).forEach((item, index) => {\r\n          const rect = item.getBoundingClientRect();\r\n          const itemCenter = rect.left + rect.width / 2;\r\n          const distance = Math.abs(itemCenter - adjustedCenter);\r\n\r\n          if (distance < minDistance) {\r\n            minDistance = distance;\r\n            activeIndex = index;\r\n          }\r\n        });\r\n\r\n        setActiveCardIndex(activeIndex);\r\n      }\r\n    }\r\n  }, [scrollPosition, isMobile, containerWidth, contentWidth]);\r\n\r\n  // Cải thiện xử lý touch event trên mobile\r\n  const handleTouchStart = (e) => {\r\n    setIsPaused(true);\r\n    setIsUserInteracting(true);\r\n    setTouchStartX(e.touches[0].clientX);\r\n    setShowSwipeHint(false); // Ẩn gợi ý khi người dùng tương tác\r\n  };\r\n\r\n  const handleTouchEnd = () => {\r\n    setIsUserInteracting(false);\r\n    // Trì hoãn trước khi tiếp tục auto-scroll\r\n    setTimeout(() => {\r\n      if (!isPaused) {\r\n        setIsPaused(false);\r\n      }\r\n    }, 1200);\r\n  };\r\n\r\n  const handleTouchMove = (e) => {\r\n    if (isUserInteracting && scrollContainerRef.current) {\r\n      const touchX = e.touches[0].clientX;\r\n      const diff = touchStartX - touchX;\r\n\r\n      // Cập nhật vị trí scroll dựa trên chuyển động của ngón tay\r\n      setScrollPosition((prev) => {\r\n        const newPosition = prev + diff * 1.2; // Độ nhạy khi vuốt\r\n        setTouchStartX(touchX);\r\n\r\n        if (newPosition < 0) return 0;\r\n        if (newPosition > contentWidth - containerWidth)\r\n          return contentWidth - containerWidth;\r\n\r\n        return newPosition;\r\n      });\r\n    }\r\n  };\r\n\r\n  // Enhanced hover/touch interaction\r\n  const handleMouseEnter = (index) => {\r\n    setIsPaused(true);\r\n    setActiveCardIndex(index);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setIsPaused(false);\r\n    setActiveCardIndex(null);\r\n  };\r\n\r\n  // Enhanced video selection and modal\r\n  const openVideoModal = (video) => {\r\n    setSelectedVideo(video);\r\n    setShowModal(true);\r\n    document.body.style.overflow = \"hidden\"; // Prevent scrolling when modal is open\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    // Add fade out animation before removing\r\n    const modal = document.querySelector(\".video-modal\");\r\n    if (modal) {\r\n      modal.classList.add(\"closing\");\r\n      setTimeout(() => {\r\n        setSelectedVideo(null);\r\n        document.body.style.overflow = \"auto\"; // Re-enable scrolling\r\n      }, 300);\r\n    } else {\r\n      setSelectedVideo(null);\r\n      document.body.style.overflow = \"auto\";\r\n    }\r\n  };\r\n\r\n  // Close modal when clicking outside the content\r\n  const handleModalBackdropClick = (e) => {\r\n    if (e.target.classList.contains(\"video-modal\")) {\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  // Calculate parallax offset for items\r\n  const getParallaxOffset = (index) => {\r\n    const baseOffset = scrollProgress * 15;\r\n    return baseOffset + (index % 3) * 5;\r\n  };\r\n\r\n  return (\r\n    <section className=\"dupin-section\" id=\"dupin\" ref={sectionRef}>\r\n      <div\r\n        className=\"dupin-background\"\r\n        style={{ opacity: 0.05 + scrollProgress * 0.1 }}\r\n      ></div>\r\n\r\n      <div\r\n        className=\"dupin-header\"\r\n        style={{ transform: `translateY(${scrollProgress * -20}px)` }}\r\n      >\r\n        <h2 className=\"dupin-title\">\r\n          MUSÉE DU PIN +\r\n        </h2>\r\n        <div className=\"dupin-subtitle\">\r\n          \r\n            Khám phá nội dung kỹ thuật số độc quyền của chúng tôi\r\n          \r\n        </div>\r\n      </div>\r\n\r\n      <div className={`dupin-gallery-container ${isVisible ? \"visible\" : \"\"}`}>\r\n        {isMobile && showSwipeHint && (\r\n          <div className=\"swipe-hint\">\r\n            <span className=\"swipe-text\">\r\n              Swipe to explore\r\n              <svg\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"none\"\r\n                height=\"18\"\r\n                width=\"18\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                  d=\"M9 5l7 7-7 7\"\r\n                ></path>\r\n              </svg>\r\n            </span>\r\n          </div>\r\n        )}\r\n\r\n        <div\r\n          className=\"dupin-gallerys\"\r\n          ref={scrollContainerRef}\r\n          onMouseLeave={handleMouseLeave}\r\n          onTouchStart={handleTouchStart}\r\n          onTouchEnd={handleTouchEnd}\r\n          onTouchMove={handleTouchMove}\r\n          style={isMobile ? { overflow: \"visible\" } : {}}\r\n        >\r\n          <div className=\"dupin-inner-container\">\r\n            {videoData.map((video, index) => (\r\n              <div\r\n                key={video.id}\r\n                className={`dupin-item ${\r\n                  activeCardIndex === index ? \"active\" : \"\"\r\n                }`}\r\n                style={{\r\n                  animationDelay: `${index * 0.15 + 0.1}s`,\r\n                  transform: `translateY(${getParallaxOffset(index)}px)`,\r\n                }}\r\n                onMouseEnter={() => handleMouseEnter(index)}\r\n              >\r\n                <div\r\n                  className=\"dupin-video-wrapper\"\r\n                  onClick={() => openVideoModal(video)}\r\n                >\r\n                  <div className=\"dupin-thumbnail-container\">\r\n                    <img\r\n                      src={video.thumbnail}\r\n                      alt={video.title}\r\n                      className=\"dupin-thumbnail\"\r\n                      loading=\"lazy\"\r\n                    />\r\n                    <span className=\"dupin-category\">{video.category}</span>\r\n                    <div className=\"dupin-gradient-overlay\"></div>\r\n                    <div className=\"play-button\">\r\n                      <svg viewBox=\"0 0 100 100\" className=\"play-icon\">\r\n                        <circle\r\n                          cx=\"50\"\r\n                          cy=\"50\"\r\n                          r=\"45\"\r\n                          className=\"play-circle\"\r\n                        />\r\n                        <polygon\r\n                          points=\"40,30 70,50 40,70\"\r\n                          className=\"play-triangle\"\r\n                        />\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"dupin-overlay\">\r\n                    <div className=\"dupin-info\">\r\n                     \r\n                      <div className=\"dupin-meta\">\r\n                        <span className=\"video-tag\">\r\n                          VIDEO\r\n                        </span>\r\n                        <span className=\"video-duration\">{video.duration}</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"scroll-indicator\">\r\n          <div className=\"scroll-track\">\r\n            <div\r\n              className=\"scroll-thumb\"\r\n              style={{\r\n                width: `${(containerWidth / contentWidth) * 100}%`,\r\n                left: `${(scrollPosition / contentWidth) * 100}%`,\r\n              }}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className=\"dupin-footer\"\r\n        style={{ transform: `translateY(${scrollProgress * -10}px)` }}\r\n      >\r\n        <Link to=\"/dupinplus\" className=\"view-all-link\">\r\n          Nội dung thêm trên Musée Du Pin+\r\n          <span className=\"arrow-icon\">→</span>\r\n        </Link>\r\n      </div>\r\n\r\n      {/* Video Modal with enhanced animation */}\r\n      {showModal && (\r\n        <div className=\"video-modal\" onClick={handleModalBackdropClick}>\r\n          <div className=\"video-modal-content\">\r\n            <button className=\"close-modal\" onClick={closeModal}>\r\n              ×\r\n            </button>\r\n            <div className=\"video-container\">\r\n              <iframe\r\n                src={`https://www.youtube.com/embed/${selectedVideo.youtubeId}?autoplay=1`}\r\n                title={selectedVideo.title}\r\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowFullScreen\r\n              ></iframe>\r\n            </div>\r\n            <div className=\"video-modal-info\">\r\n              <div className=\"video-modal-category\">\r\n                {selectedVideo.category}\r\n              </div>\r\n              <h3 className=\"video-modal-title\">{selectedVideo.title}</h3>\r\n              {selectedVideo.subtitle && (\r\n                <p className=\"video-modal-subtitle\">{selectedVideo.subtitle}</p>\r\n              )}\r\n              <p className=\"video-modal-duration\">{selectedVideo.duration}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default DuPin;\r\n"
        ],
        "mappings": "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",
        "names": [
          "containerWidth",
          "contentWidth"
        ]
      }
    },
    {
      "name": "vite:worker",
      "start": 1749089004580,
      "end": 1749089004580,
      "order": "normal-normal"
    },
    {
      "name": "vite:define",
      "start": 1749089004580,
      "end": 1749089004580,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-html",
      "start": 1749089004580,
      "end": 1749089004580,
      "order": "normal-normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1749089004580,
      "end": 1749089004580,
      "order": "normal-normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1749089004580,
      "end": 1749089004580,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1749089004580,
      "end": 1749089004580,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1749089004580,
      "end": 1749089004580,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1749089004580,
      "end": 1749089004581,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1749089004581,
      "end": 1749089004581,
      "order": "normal"
    }
  ]
}
