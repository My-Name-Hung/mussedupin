{
  "resolvedId": "C:/Users/.Freelancer/ONLINE/node_modules/react-leaflet/lib/Pane.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { LeafletContext, addClassName, useLeafletContext } from '@react-leaflet/core';\nimport React, { forwardRef, useState, useEffect, useImperativeHandle, useMemo } from 'react';\nimport { createPortal } from 'react-dom';\nconst DEFAULT_PANES = [\n    'mapPane',\n    'markerPane',\n    'overlayPane',\n    'popupPane',\n    'shadowPane',\n    'tilePane',\n    'tooltipPane'\n];\nfunction omitPane(obj, pane) {\n    const { [pane]: _p, ...others } = obj;\n    return others;\n}\nfunction createPane(name, props, context) {\n    if (DEFAULT_PANES.indexOf(name) !== -1) {\n        throw new Error(`You must use a unique name for a pane that is not a default Leaflet pane: ${name}`);\n    }\n    if (context.map.getPane(name) != null) {\n        throw new Error(`A pane with this name already exists: ${name}`);\n    }\n    const parentPaneName = props.pane ?? context.pane;\n    const parentPane = parentPaneName ? context.map.getPane(parentPaneName) : undefined;\n    const element = context.map.createPane(name, parentPane);\n    if (props.className != null) {\n        addClassName(element, props.className);\n    }\n    if (props.style != null) {\n        for (const key of Object.keys(props.style)){\n            // @ts-ignore\n            element.style[key] = props.style[key];\n        }\n    }\n    return element;\n}\nfunction PaneComponent(props, forwardedRef) {\n    const [paneName] = useState(props.name);\n    const [paneElement, setPaneElement] = useState(null);\n    useImperativeHandle(forwardedRef, ()=>paneElement, [\n        paneElement\n    ]);\n    const context = useLeafletContext();\n    // biome-ignore lint/correctness/useExhaustiveDependencies: paneName is immutable\n    const newContext = useMemo(()=>({\n            ...context,\n            pane: paneName\n        }), [\n        context\n    ]);\n    // biome-ignore lint/correctness/useExhaustiveDependencies: lifecycle-only effect\n    useEffect(()=>{\n        setPaneElement(createPane(paneName, props, context));\n        return function removeCreatedPane() {\n            const pane = context.map.getPane(paneName);\n            pane?.remove?.();\n            // @ts-ignore map internals\n            if (context.map._panes != null) {\n                // @ts-ignore map internals\n                context.map._panes = omitPane(context.map._panes, paneName);\n                // @ts-ignore map internals\n                context.map._paneRenderers = omitPane(// @ts-ignore map internals\n                context.map._paneRenderers, paneName);\n            }\n        };\n    }, []);\n    return props.children != null && paneElement != null ? /*#__PURE__*/ createPortal(/*#__PURE__*/ React.createElement(LeafletContext, {\n        value: newContext\n    }, props.children), paneElement) : null;\n}\nexport const Pane = /*#__PURE__*/ forwardRef(PaneComponent);\n",
      "start": 1749894722775,
      "end": 1749894723065,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1749894723065,
      "end": 1749894723065,
      "order": "pre"
    },
    {
      "name": "vite:esbuild",
      "start": 1749894723065,
      "end": 1749894723065,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1749894723065,
      "end": 1749894723065,
      "order": "normal-normal"
    },
    {
      "name": "vite:define",
      "start": 1749894723065,
      "end": 1749894723065,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-html",
      "start": 1749894723065,
      "end": 1749894723065,
      "order": "normal-normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1749894723065,
      "end": 1749894723065,
      "order": "normal-normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1749894723065,
      "end": 1749894723065,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1749894723066,
      "end": 1749894723066,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1749894723067,
      "end": 1749894723067,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1749894723067,
      "end": 1749894723067,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1749894723067,
      "end": 1749894723067,
      "order": "normal"
    }
  ]
}
