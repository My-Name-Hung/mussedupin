{
  "resolvedId": "C:/Users/.Freelancer/baotangnghethuat/src/pages/Home/DuPinPlus/DuPinPlus.jsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import React, { useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport \"./DuPinPlus.css\";\r\n\r\n// Sample data for videos - replace with your actual content\r\nconst allVideos = [\r\n  {\r\n    id: 1,\r\n    title:\r\n      \"Góc nhìn từ Bảo Tàng Thông – Một lát cắt Đà Lạt trọn vẹn trong ánh chiều tà!\",\r\n    subtitle: \"Góc nhìn từ Bảo Tàng Thông\",\r\n    youtubeId: \"aozcRuYVPKw\", // Replace with actual YouTube ID\r\n    duration: \"11s\",\r\n    thumbnail:\r\n      \"https://i.ytimg.com/vi/aozcRuYVPKw/hqdefault.jpg?sqp=-oaymwFBCNACELwBSFryq4qpAzMIARUAAIhCGAHYAQHiAQoIGBACGAY4AUAB8AEB-AG2CIAC0AWKAgwIABABGD4gQihyMA8=&rs=AOn4CLCybz6fVtK17RW4ZlrHrBfDMcmiPw\", // This will be replaced with actual thumbnails\r\n    category: \"Thiên nhiên\",\r\n  },\r\n];\r\n\r\n// Extract unique categories for the filter\r\nconst categories = [\r\n  \"Tất cả\",\r\n  ...new Set(allVideos.map((video) => video.category)),\r\n];\r\n\r\nconst DuPinPlus = () => {\r\n  const [videos, setVideos] = useState(allVideos);\r\n  const [selectedVideo, setSelectedVideo] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [activeCategory, setActiveCategory] = useState(\"Tất cả\");\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  // Filter videos based on category and search query\r\n  useEffect(() => {\r\n    let filteredVideos = allVideos;\r\n\r\n    // Apply category filter\r\n    if (activeCategory !== \"Tất cả\") {\r\n      filteredVideos = filteredVideos.filter(\r\n        (video) => video.category === activeCategory\r\n      );\r\n    }\r\n\r\n    // Apply search filter\r\n    if (searchQuery.trim()) {\r\n      const query = searchQuery.toLowerCase();\r\n      filteredVideos = filteredVideos.filter(\r\n        (video) =>\r\n          video.title.toLowerCase().includes(query) ||\r\n          video.subtitle.toLowerCase().includes(query)\r\n      );\r\n    }\r\n\r\n    setVideos(filteredVideos);\r\n  }, [activeCategory, searchQuery]);\r\n\r\n  // Handle video selection and modal\r\n  const openVideoModal = (video) => {\r\n    setSelectedVideo(video);\r\n    setShowModal(true);\r\n    document.body.style.overflow = \"hidden\";\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    setSelectedVideo(null);\r\n    document.body.style.overflow = \"auto\";\r\n  };\r\n\r\n  // Close modal when clicking outside the content\r\n  const handleModalBackdropClick = (e) => {\r\n    if (e.target.classList.contains(\"video-modal\")) {\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dupin-plus-page\">\r\n      <Helmet>\r\n        <title>Bảo tàng Du Pin+ | Kho lưu trữ video</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Khám phá bộ sưu tập video, tour ảo và nội dung hậu trường từ bảo tàng.\"\r\n        />\r\n      </Helmet>\r\n\r\n      <header className=\"dupin-plus-header\">\r\n        <div className=\"header-content\">\r\n          <h1 className=\"page-title\">Musée Du Pin +</h1>\r\n          <p className=\"page-subtitle\">\r\n            Khám phá nội dung video độc quyền, tour ảo và các tính năng hậu\r\n            trường\r\n          </p>\r\n        </div>\r\n      </header>\r\n\r\n      <section className=\"filter-section\">\r\n        <div className=\"search-box\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Tìm kiếm video...\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n            className=\"search-input\"\r\n          />\r\n          <button className=\"search-button\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 24 24\"\r\n              width=\"24\"\r\n              height=\"24\"\r\n            >\r\n              <path\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                strokeWidth=\"2\"\r\n                d=\"M15 15l6 6m-11-4a7 7 0 110-14 7 7 0 010 14z\"\r\n              />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"category-filters\">\r\n          {categories.map((category) => (\r\n            <button\r\n              key={category}\r\n              className={`category-button ${\r\n                activeCategory === category ? \"active\" : \"\"\r\n              }`}\r\n              onClick={() => setActiveCategory(category)}\r\n            >\r\n              {category}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"videos-grid\">\r\n        {videos.length > 0 ? (\r\n          videos.map((video) => (\r\n            <div\r\n              key={video.id}\r\n              className=\"video-card\"\r\n              onClick={() => openVideoModal(video)}\r\n            >\r\n              <div className=\"video-thumbnail-container\">\r\n                <img\r\n                  src={video.thumbnail}\r\n                  alt={video.title}\r\n                  className=\"video-thumbnail\"\r\n                  loading=\"lazy\"\r\n                />\r\n                <div className=\"play-overlay\">\r\n                  <div className=\"play-button\">\r\n                    <svg viewBox=\"0 0 100 100\" className=\"play-icon\">\r\n                      <circle cx=\"50\" cy=\"50\" r=\"45\" className=\"play-circle\" />\r\n                      <polygon\r\n                        points=\"40,30 70,50 40,70\"\r\n                        className=\"play-triangle\"\r\n                      />\r\n                    </svg>\r\n                  </div>\r\n                </div>\r\n                <div className=\"video-duration\">{video.duration}</div>\r\n              </div>\r\n              <div className=\"video-info\">\r\n                <span className=\"video-category\">{video.category}</span>\r\n                <h3 className=\"video-title\">{video.title}</h3>\r\n                {video.subtitle && <span className=\"video-subtitle\"></span>}\r\n                <p className=\"video-description\">{video.description}</p>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div className=\"no-results\">\r\n            <h3>Không tìm thấy video</h3>\r\n            <p>Vui lòng điều chỉnh lại tiêu chí tìm kiếm hoặc bộ lọc</p>\r\n          </div>\r\n        )}\r\n      </section>\r\n\r\n      {/* Video Modal */}\r\n      {showModal && (\r\n        <div className=\"video-modal\" onClick={handleModalBackdropClick}>\r\n          <div className=\"video-modal-content\">\r\n            <button className=\"close-modal\" onClick={closeModal}>\r\n              ×\r\n            </button>\r\n            <div className=\"video-container\">\r\n              <iframe\r\n                src={`https://www.youtube.com/embed/${selectedVideo.youtubeId}?autoplay=1`}\r\n                title={selectedVideo.title}\r\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowFullScreen\r\n              ></iframe>\r\n            </div>\r\n            <div className=\"video-modal-info\">\r\n              <div className=\"video-modal-header\">\r\n                <h3 className=\"video-modal-title\">{selectedVideo.title}</h3>\r\n                {selectedVideo.subtitle && (\r\n                  <p className=\"video-modal-subtitle\">\r\n                    {selectedVideo.subtitle}\r\n                  </p>\r\n                )}\r\n                <span className=\"video-modal-category\">\r\n                  {selectedVideo.category}\r\n                </span>\r\n                <span className=\"video-modal-duration\">\r\n                  {selectedVideo.duration}\r\n                </span>\r\n              </div>\r\n              <p className=\"video-modal-description\">\r\n                {selectedVideo.description}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DuPinPlus;\r\n",
      "start": 1749089001556,
      "end": 1749089002119,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1749089002120,
      "end": 1749089002120,
      "order": "pre"
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport React, { useEffect, useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport \"./DuPinPlus.css\";\nconst allVideos = [\n  {\n    id: 1,\n    title: \"Góc nhìn từ Bảo Tàng Thông – Một lát cắt Đà Lạt trọn vẹn trong ánh chiều tà!\",\n    subtitle: \"Góc nhìn từ Bảo Tàng Thông\",\n    youtubeId: \"aozcRuYVPKw\",\n    // Replace with actual YouTube ID\n    duration: \"11s\",\n    thumbnail: \"https://i.ytimg.com/vi/aozcRuYVPKw/hqdefault.jpg?sqp=-oaymwFBCNACELwBSFryq4qpAzMIARUAAIhCGAHYAQHiAQoIGBACGAY4AUAB8AEB-AG2CIAC0AWKAgwIABABGD4gQihyMA8=&rs=AOn4CLCybz6fVtK17RW4ZlrHrBfDMcmiPw\",\n    // This will be replaced with actual thumbnails\n    category: \"Thiên nhiên\"\n  }\n];\nconst categories = [\n  \"Tất cả\",\n  ...new Set(allVideos.map((video) => video.category))\n];\nconst DuPinPlus = () => {\n  const [videos, setVideos] = useState(allVideos);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [activeCategory, setActiveCategory] = useState(\"Tất cả\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  useEffect(() => {\n    let filteredVideos = allVideos;\n    if (activeCategory !== \"Tất cả\") {\n      filteredVideos = filteredVideos.filter(\n        (video) => video.category === activeCategory\n      );\n    }\n    if (searchQuery.trim()) {\n      const query = searchQuery.toLowerCase();\n      filteredVideos = filteredVideos.filter(\n        (video) => video.title.toLowerCase().includes(query) || video.subtitle.toLowerCase().includes(query)\n      );\n    }\n    setVideos(filteredVideos);\n  }, [activeCategory, searchQuery]);\n  const openVideoModal = (video) => {\n    setSelectedVideo(video);\n    setShowModal(true);\n    document.body.style.overflow = \"hidden\";\n  };\n  const closeModal = () => {\n    setShowModal(false);\n    setSelectedVideo(null);\n    document.body.style.overflow = \"auto\";\n  };\n  const handleModalBackdropClick = (e) => {\n    if (e.target.classList.contains(\"video-modal\")) {\n      closeModal();\n    }\n  };\n  return /* @__PURE__ */ jsxs(\"div\", { className: \"dupin-plus-page\", children: [\n    /* @__PURE__ */ jsxs(Helmet, { children: [\n      /* @__PURE__ */ jsx(\"title\", { children: \"Bảo tàng Du Pin+ | Kho lưu trữ video\" }),\n      /* @__PURE__ */ jsx(\n        \"meta\",\n        {\n          name: \"description\",\n          content: \"Khám phá bộ sưu tập video, tour ảo và nội dung hậu trường từ bảo tàng.\"\n        }\n      )\n    ] }),\n    /* @__PURE__ */ jsx(\"header\", { className: \"dupin-plus-header\", children: /* @__PURE__ */ jsxs(\"div\", { className: \"header-content\", children: [\n      /* @__PURE__ */ jsx(\"h1\", { className: \"page-title\", children: \"Musée Du Pin +\" }),\n      /* @__PURE__ */ jsx(\"p\", { className: \"page-subtitle\", children: \"Khám phá nội dung video độc quyền, tour ảo và các tính năng hậu trường\" })\n    ] }) }),\n    /* @__PURE__ */ jsxs(\"section\", { className: \"filter-section\", children: [\n      /* @__PURE__ */ jsxs(\"div\", { className: \"search-box\", children: [\n        /* @__PURE__ */ jsx(\n          \"input\",\n          {\n            type: \"text\",\n            placeholder: \"Tìm kiếm video...\",\n            value: searchQuery,\n            onChange: (e) => setSearchQuery(e.target.value),\n            className: \"search-input\"\n          }\n        ),\n        /* @__PURE__ */ jsx(\"button\", { className: \"search-button\", children: /* @__PURE__ */ jsx(\n          \"svg\",\n          {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            viewBox: \"0 0 24 24\",\n            width: \"24\",\n            height: \"24\",\n            children: /* @__PURE__ */ jsx(\n              \"path\",\n              {\n                fill: \"none\",\n                stroke: \"currentColor\",\n                strokeWidth: \"2\",\n                d: \"M15 15l6 6m-11-4a7 7 0 110-14 7 7 0 010 14z\"\n              }\n            )\n          }\n        ) })\n      ] }),\n      /* @__PURE__ */ jsx(\"div\", { className: \"category-filters\", children: categories.map((category) => /* @__PURE__ */ jsx(\n        \"button\",\n        {\n          className: `category-button ${activeCategory === category ? \"active\" : \"\"}`,\n          onClick: () => setActiveCategory(category),\n          children: category\n        },\n        category\n      )) })\n    ] }),\n    /* @__PURE__ */ jsx(\"section\", { className: \"videos-grid\", children: videos.length > 0 ? videos.map((video) => /* @__PURE__ */ jsxs(\n      \"div\",\n      {\n        className: \"video-card\",\n        onClick: () => openVideoModal(video),\n        children: [\n          /* @__PURE__ */ jsxs(\"div\", { className: \"video-thumbnail-container\", children: [\n            /* @__PURE__ */ jsx(\n              \"img\",\n              {\n                src: video.thumbnail,\n                alt: video.title,\n                className: \"video-thumbnail\",\n                loading: \"lazy\"\n              }\n            ),\n            /* @__PURE__ */ jsx(\"div\", { className: \"play-overlay\", children: /* @__PURE__ */ jsx(\"div\", { className: \"play-button\", children: /* @__PURE__ */ jsxs(\"svg\", { viewBox: \"0 0 100 100\", className: \"play-icon\", children: [\n              /* @__PURE__ */ jsx(\"circle\", { cx: \"50\", cy: \"50\", r: \"45\", className: \"play-circle\" }),\n              /* @__PURE__ */ jsx(\n                \"polygon\",\n                {\n                  points: \"40,30 70,50 40,70\",\n                  className: \"play-triangle\"\n                }\n              )\n            ] }) }) }),\n            /* @__PURE__ */ jsx(\"div\", { className: \"video-duration\", children: video.duration })\n          ] }),\n          /* @__PURE__ */ jsxs(\"div\", { className: \"video-info\", children: [\n            /* @__PURE__ */ jsx(\"span\", { className: \"video-category\", children: video.category }),\n            /* @__PURE__ */ jsx(\"h3\", { className: \"video-title\", children: video.title }),\n            video.subtitle && /* @__PURE__ */ jsx(\"span\", { className: \"video-subtitle\" }),\n            /* @__PURE__ */ jsx(\"p\", { className: \"video-description\", children: video.description })\n          ] })\n        ]\n      },\n      video.id\n    )) : /* @__PURE__ */ jsxs(\"div\", { className: \"no-results\", children: [\n      /* @__PURE__ */ jsx(\"h3\", { children: \"Không tìm thấy video\" }),\n      /* @__PURE__ */ jsx(\"p\", { children: \"Vui lòng điều chỉnh lại tiêu chí tìm kiếm hoặc bộ lọc\" })\n    ] }) }),\n    showModal && /* @__PURE__ */ jsx(\"div\", { className: \"video-modal\", onClick: handleModalBackdropClick, children: /* @__PURE__ */ jsxs(\"div\", { className: \"video-modal-content\", children: [\n      /* @__PURE__ */ jsx(\"button\", { className: \"close-modal\", onClick: closeModal, children: \"×\" }),\n      /* @__PURE__ */ jsx(\"div\", { className: \"video-container\", children: /* @__PURE__ */ jsx(\n        \"iframe\",\n        {\n          src: `https://www.youtube.com/embed/${selectedVideo.youtubeId}?autoplay=1`,\n          title: selectedVideo.title,\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n          allowFullScreen: true\n        }\n      ) }),\n      /* @__PURE__ */ jsxs(\"div\", { className: \"video-modal-info\", children: [\n        /* @__PURE__ */ jsxs(\"div\", { className: \"video-modal-header\", children: [\n          /* @__PURE__ */ jsx(\"h3\", { className: \"video-modal-title\", children: selectedVideo.title }),\n          selectedVideo.subtitle && /* @__PURE__ */ jsx(\"p\", { className: \"video-modal-subtitle\", children: selectedVideo.subtitle }),\n          /* @__PURE__ */ jsx(\"span\", { className: \"video-modal-category\", children: selectedVideo.category }),\n          /* @__PURE__ */ jsx(\"span\", { className: \"video-modal-duration\", children: selectedVideo.duration })\n        ] }),\n        /* @__PURE__ */ jsx(\"p\", { className: \"video-modal-description\", children: selectedVideo.description })\n      ] })\n    ] }) })\n  ] });\n};\nexport default DuPinPlus;\n",
      "start": 1749089002120,
      "end": 1749089003072,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "C:/Users/.Freelancer/baotangnghethuat/src/pages/Home/DuPinPlus/DuPinPlus.jsx"
        ],
        "sourcesContent": [
          "import React, { useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport \"./DuPinPlus.css\";\r\n\r\n// Sample data for videos - replace with your actual content\r\nconst allVideos = [\r\n  {\r\n    id: 1,\r\n    title:\r\n      \"Góc nhìn từ Bảo Tàng Thông – Một lát cắt Đà Lạt trọn vẹn trong ánh chiều tà!\",\r\n    subtitle: \"Góc nhìn từ Bảo Tàng Thông\",\r\n    youtubeId: \"aozcRuYVPKw\", // Replace with actual YouTube ID\r\n    duration: \"11s\",\r\n    thumbnail:\r\n      \"https://i.ytimg.com/vi/aozcRuYVPKw/hqdefault.jpg?sqp=-oaymwFBCNACELwBSFryq4qpAzMIARUAAIhCGAHYAQHiAQoIGBACGAY4AUAB8AEB-AG2CIAC0AWKAgwIABABGD4gQihyMA8=&rs=AOn4CLCybz6fVtK17RW4ZlrHrBfDMcmiPw\", // This will be replaced with actual thumbnails\r\n    category: \"Thiên nhiên\",\r\n  },\r\n];\r\n\r\n// Extract unique categories for the filter\r\nconst categories = [\r\n  \"Tất cả\",\r\n  ...new Set(allVideos.map((video) => video.category)),\r\n];\r\n\r\nconst DuPinPlus = () => {\r\n  const [videos, setVideos] = useState(allVideos);\r\n  const [selectedVideo, setSelectedVideo] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [activeCategory, setActiveCategory] = useState(\"Tất cả\");\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  // Filter videos based on category and search query\r\n  useEffect(() => {\r\n    let filteredVideos = allVideos;\r\n\r\n    // Apply category filter\r\n    if (activeCategory !== \"Tất cả\") {\r\n      filteredVideos = filteredVideos.filter(\r\n        (video) => video.category === activeCategory\r\n      );\r\n    }\r\n\r\n    // Apply search filter\r\n    if (searchQuery.trim()) {\r\n      const query = searchQuery.toLowerCase();\r\n      filteredVideos = filteredVideos.filter(\r\n        (video) =>\r\n          video.title.toLowerCase().includes(query) ||\r\n          video.subtitle.toLowerCase().includes(query)\r\n      );\r\n    }\r\n\r\n    setVideos(filteredVideos);\r\n  }, [activeCategory, searchQuery]);\r\n\r\n  // Handle video selection and modal\r\n  const openVideoModal = (video) => {\r\n    setSelectedVideo(video);\r\n    setShowModal(true);\r\n    document.body.style.overflow = \"hidden\";\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    setSelectedVideo(null);\r\n    document.body.style.overflow = \"auto\";\r\n  };\r\n\r\n  // Close modal when clicking outside the content\r\n  const handleModalBackdropClick = (e) => {\r\n    if (e.target.classList.contains(\"video-modal\")) {\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dupin-plus-page\">\r\n      <Helmet>\r\n        <title>Bảo tàng Du Pin+ | Kho lưu trữ video</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Khám phá bộ sưu tập video, tour ảo và nội dung hậu trường từ bảo tàng.\"\r\n        />\r\n      </Helmet>\r\n\r\n      <header className=\"dupin-plus-header\">\r\n        <div className=\"header-content\">\r\n          <h1 className=\"page-title\">Musée Du Pin +</h1>\r\n          <p className=\"page-subtitle\">\r\n            Khám phá nội dung video độc quyền, tour ảo và các tính năng hậu\r\n            trường\r\n          </p>\r\n        </div>\r\n      </header>\r\n\r\n      <section className=\"filter-section\">\r\n        <div className=\"search-box\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Tìm kiếm video...\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n            className=\"search-input\"\r\n          />\r\n          <button className=\"search-button\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 24 24\"\r\n              width=\"24\"\r\n              height=\"24\"\r\n            >\r\n              <path\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                strokeWidth=\"2\"\r\n                d=\"M15 15l6 6m-11-4a7 7 0 110-14 7 7 0 010 14z\"\r\n              />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"category-filters\">\r\n          {categories.map((category) => (\r\n            <button\r\n              key={category}\r\n              className={`category-button ${\r\n                activeCategory === category ? \"active\" : \"\"\r\n              }`}\r\n              onClick={() => setActiveCategory(category)}\r\n            >\r\n              {category}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"videos-grid\">\r\n        {videos.length > 0 ? (\r\n          videos.map((video) => (\r\n            <div\r\n              key={video.id}\r\n              className=\"video-card\"\r\n              onClick={() => openVideoModal(video)}\r\n            >\r\n              <div className=\"video-thumbnail-container\">\r\n                <img\r\n                  src={video.thumbnail}\r\n                  alt={video.title}\r\n                  className=\"video-thumbnail\"\r\n                  loading=\"lazy\"\r\n                />\r\n                <div className=\"play-overlay\">\r\n                  <div className=\"play-button\">\r\n                    <svg viewBox=\"0 0 100 100\" className=\"play-icon\">\r\n                      <circle cx=\"50\" cy=\"50\" r=\"45\" className=\"play-circle\" />\r\n                      <polygon\r\n                        points=\"40,30 70,50 40,70\"\r\n                        className=\"play-triangle\"\r\n                      />\r\n                    </svg>\r\n                  </div>\r\n                </div>\r\n                <div className=\"video-duration\">{video.duration}</div>\r\n              </div>\r\n              <div className=\"video-info\">\r\n                <span className=\"video-category\">{video.category}</span>\r\n                <h3 className=\"video-title\">{video.title}</h3>\r\n                {video.subtitle && <span className=\"video-subtitle\"></span>}\r\n                <p className=\"video-description\">{video.description}</p>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div className=\"no-results\">\r\n            <h3>Không tìm thấy video</h3>\r\n            <p>Vui lòng điều chỉnh lại tiêu chí tìm kiếm hoặc bộ lọc</p>\r\n          </div>\r\n        )}\r\n      </section>\r\n\r\n      {/* Video Modal */}\r\n      {showModal && (\r\n        <div className=\"video-modal\" onClick={handleModalBackdropClick}>\r\n          <div className=\"video-modal-content\">\r\n            <button className=\"close-modal\" onClick={closeModal}>\r\n              ×\r\n            </button>\r\n            <div className=\"video-container\">\r\n              <iframe\r\n                src={`https://www.youtube.com/embed/${selectedVideo.youtubeId}?autoplay=1`}\r\n                title={selectedVideo.title}\r\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowFullScreen\r\n              ></iframe>\r\n            </div>\r\n            <div className=\"video-modal-info\">\r\n              <div className=\"video-modal-header\">\r\n                <h3 className=\"video-modal-title\">{selectedVideo.title}</h3>\r\n                {selectedVideo.subtitle && (\r\n                  <p className=\"video-modal-subtitle\">\r\n                    {selectedVideo.subtitle}\r\n                  </p>\r\n                )}\r\n                <span className=\"video-modal-category\">\r\n                  {selectedVideo.category}\r\n                </span>\r\n                <span className=\"video-modal-duration\">\r\n                  {selectedVideo.duration}\r\n                </span>\r\n              </div>\r\n              <p className=\"video-modal-description\">\r\n                {selectedVideo.description}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DuPinPlus;\r\n"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1749089003072,
      "end": 1749089003072,
      "order": "normal-normal"
    },
    {
      "name": "vite:define",
      "start": 1749089003073,
      "end": 1749089003073,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-html",
      "start": 1749089003073,
      "end": 1749089003073,
      "order": "normal-normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1749089003073,
      "end": 1749089003073,
      "order": "normal-normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1749089003073,
      "end": 1749089003073,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1749089003073,
      "end": 1749089003073,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1749089003073,
      "end": 1749089003073,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1749089003073,
      "end": 1749089003073,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1749089003073,
      "end": 1749089003073,
      "order": "normal"
    }
  ]
}
