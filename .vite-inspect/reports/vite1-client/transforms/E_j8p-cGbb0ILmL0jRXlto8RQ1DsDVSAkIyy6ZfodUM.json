{
  "resolvedId": "C:/Users/.Freelancer/TICKET/node_modules/react-calendar/dist/MonthView/WeekNumber.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar className = 'react-calendar__tile';\nexport default function WeekNumber(props) {\n    var onClickWeekNumber = props.onClickWeekNumber, weekNumber = props.weekNumber;\n    var children = _jsx(\"span\", { children: weekNumber });\n    if (onClickWeekNumber) {\n        var date_1 = props.date, onClickWeekNumber_1 = props.onClickWeekNumber, weekNumber_1 = props.weekNumber, otherProps = __rest(props, [\"date\", \"onClickWeekNumber\", \"weekNumber\"]);\n        return (_jsx(\"button\", __assign({}, otherProps, { className: className, onClick: function (event) { return onClickWeekNumber_1(weekNumber_1, date_1, event); }, type: \"button\", children: children })));\n        // biome-ignore lint/style/noUselessElse: TypeScript is unhappy if we remove this else\n    }\n    else {\n        var date = props.date, onClickWeekNumber_2 = props.onClickWeekNumber, weekNumber_2 = props.weekNumber, otherProps = __rest(props, [\"date\", \"onClickWeekNumber\", \"weekNumber\"]);\n        return (_jsx(\"div\", __assign({}, otherProps, { className: className, children: children })));\n    }\n}\n",
      "start": 1751267824937,
      "end": 1751267825293,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1751267825293,
      "end": 1751267825293,
      "order": "pre"
    },
    {
      "name": "vite:esbuild",
      "start": 1751267825293,
      "end": 1751267825293,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1751267825293,
      "end": 1751267825293,
      "order": "normal-normal"
    },
    {
      "name": "vite:define",
      "start": 1751267825293,
      "end": 1751267825293,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-html",
      "start": 1751267825293,
      "end": 1751267825293,
      "order": "normal-normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1751267825293,
      "end": 1751267825293,
      "order": "normal-normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1751267825293,
      "end": 1751267825293,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1751267825298,
      "end": 1751267825298,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1751267825298,
      "end": 1751267825298,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1751267825298,
      "end": 1751267825298,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1751267825298,
      "end": 1751267825298,
      "order": "normal"
    }
  ]
}
