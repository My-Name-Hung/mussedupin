{
  "resolvedId": "C:/Users/.Freelancer/MUSSEEDUPIN/src/pages/Visit/VisitorTrailsPage.jsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import React, { useCallback, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getImageUrl } from \"../../utils/cloudinary\";\nimport \"./VisitorTrailsPage.css\";\n\n// SVG icons\nconst ClockIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    className=\"vt-clock-icon\"\n  >\n    <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n    <polyline points=\"12 6 12 12 16 14\"></polyline>\n  </svg>\n);\n\nconst AudioIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"20\"\n    height=\"20\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M11 5L6 9H2v6h4l5 4V5z\"></path>\n    <path d=\"M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7.07\"></path>\n  </svg>\n);\n\nconst ArrowRightIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"20\"\n    height=\"20\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n    <polyline points=\"12 5 19 12 12 19\"></polyline>\n  </svg>\n);\n\nconst ScrollDownIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M12 5v14\"></path>\n    <path d=\"M19 12l-7 7-7-7\"></path>\n  </svg>\n);\n\n// Trail data\nconst trailsData = [\n  {\n    id: 1,\n    title: \"DỤNG CỤ ÂM NHẠC TÂY NGUYÊN\",\n    description:\n      \"Khám phá âm nhạc truyền thống của người Tây Nguyên qua các nhạc cụ độc đáo như cồng chiêng - biểu tượng văn hóa và tín ngưỡng thiêng liêng.\",\n    image: \"Cồng Chiên.webp\",\n    duration: \"1H30\",\n    audioGuide: true,\n  },\n  {\n    id: 2,\n    title: \"Hơi thở đại ngàn\",\n    description:\n      \"Khám phá các công cụ và phương thức chăn nuôi truyền thống của người K'ho, từ lồng đa đa đến các vật dụng chăn nuôi khác.\",\n    image: \"Lồng Đa Đa.webp\",\n    duration: \"1H30\",\n    audioGuide: true,\n  },\n  {\n    id: 3,\n    title: \"Lửa thiêng đêm núi\",\n    description:\n      \"Tìm hiểu về các lễ hội truyền thống và nghi thức văn hóa của người K'ho thông qua các hiện vật như Ché Ghò Sành.\",\n    image: \"36 (2).webp\",\n    duration: \"1H\",\n    audioGuide: true,\n  },\n  {\n    id: 4,\n    title: \"Hình hài bản sắc\",\n    description:\n      \"Chiêm ngưỡng nghệ thuật điêu khắc truyền thống của người K'ho qua các tác phẩm tượng và điêu khắc tinh xảo.\",\n    image: \"Điêu Khắc.webp\",\n    duration: \"1H30P\",\n    audioGuide: true,\n  },\n  {\n    id: 5,\n    title: \"Những mùa no ấm\",\n    description:\n      \"Khám phá các công cụ săn bắn, hái lượm và canh tác truyền thống của người K'ho.\",\n    image: \"Chiếc Gùi.webp\",\n    duration: \"1H\",\n    audioGuide: true,\n  },\n  {\n    id: 6,\n    title: \"Hơi ấm buôn làng\",\n    description:\n      \"Tìm hiểu về đời sống hàng ngày của người K'ho qua các vật dụng sinh hoạt như nồi đất, bầu hồ lô.\",\n    image: \"Nồi Đất.webp\",\n    duration: \"1H30\",\n    audioGuide: true,\n  },\n  {\n    id: 7,\n    title: \"PHỨC TẦNG\",\n    description: \"Tham quan trải nghiệm thiên nhiên của đồi thông.\",\n    image: \"Thông 2.webp\",\n    duration: \"1H\",\n    audioGuide: true,\n  },\n  {\n    id: 8,\n    title: \"VẬT LIỆU\",\n    description: \"Tham quan vật liệu của người Tây Nguyên.\",\n    image: \"Hoa Ban Trắng.webp\",\n    duration: \"30P\",\n    audioGuide: true,\n  },\n  {\n    id: 9,\n    title: \"Redpine Art Studio\",\n    description: \"Không gian lưu trú nghệ thuật giữa rừng thông Đà Lạt.\",\n    image: \"luutrunghethuat.jpg\",\n    duration: \"45P\",\n    audioGuide: true,\n  },\n  {\n    id: 10,\n    title: \"Bề mặt ký ức\",\n    description: \"Bộ sưu tập về ký ức và hoài niệm\",\n    image: \"Lửa.webp\",\n    duration: \"45P\",\n    audioGuide: true,\n  },\n  {\n    id: 11,\n    title: \"Thiên nhiên Đà Lạt\",\n    description: \"Không gian lưu trú nghệ thuật giữa rừng thông Đà Lạt\",\n    image: \"Gió.webp\",\n    duration: \"45P\",\n    audioGuide: true,\n  },\n  {\n    id: 12,\n    title: \"Sắc màu Tây nguyên\",\n    description: \"Bộ sưu tập về sắc màu Tây nguyên\",\n    image: \"Đông.webp\",\n    duration: \"45P\",\n    audioGuide: true,\n  },\n];\n\nconst VisitorTrailsPage = () => {\n  const [animatedSections, setAnimatedSections] = useState({});\n  const [loadedImages, setLoadedImages] = useState({});\n\n  // Optimize intersection observer by using useCallback\n  const observerCallback = useCallback((entries) => {\n    entries.forEach((entry) => {\n      if (entry.isIntersecting) {\n        setAnimatedSections((prev) => ({\n          ...prev,\n          [entry.target.id]: true,\n        }));\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    document.title = \"Lộ trình tham quan | Musée Du Pin\";\n\n    // Preload hero image\n    const heroImg = new Image();\n    heroImg.src = getImageUrl(\"louvre-sunset.webp\");\n\n    // Optimize observer options\n    const observer = new IntersectionObserver(observerCallback, {\n      threshold: 0.1, // Reduce threshold for earlier loading\n      rootMargin: \"50px\", // Load images before they enter viewport\n    });\n\n    // Observe sections with debounced handler\n    const sections = document.querySelectorAll(\".animate-section\");\n    sections.forEach((section) => observer.observe(section));\n\n    return () => {\n      sections.forEach((section) => observer.unobserve(section));\n    };\n  }, [observerCallback]);\n\n  // Lazy load trail images\n  const handleImageLoad = useCallback((trailId) => {\n    setLoadedImages((prev) => ({\n      ...prev,\n      [trailId]: true,\n    }));\n  }, []);\n\n  return (\n    <div className=\"visitor-trails-page\">\n      {/* Hero Section - Optimize background image loading */}\n      <div className=\"vt-hero\">\n        <div\n          className=\"vt-hero-image\"\n          style={{\n            backgroundImage: `url(${getImageUrl(\"louvre-sunset.webp\")})`,\n            willChange: \"transform\",\n            transform: \"translateZ(0)\",\n          }}\n        >\n          <div className=\"vt-hero-overlay\"></div>\n        </div>\n        <div className=\"vt-hero-content\">\n          <h1 className=\"vt-hero-title\">LỘ TRÌNH THAM QUAN</h1>\n          <p className=\"vt-hero-subtitle\">\n            Những gợi ý hữu ích trước hoặc trong chuyến thăm của bạn\n          </p>\n        </div>\n        <div className=\"vt-hero-scroll-indicator\">\n          <div className=\"vt-hero-scroll-mouse\">\n            <div className=\"vt-hero-scroll-wheel\"></div>\n          </div>\n          <span>CUỘN XUỐNG</span>\n        </div>\n      </div>\n\n      {/* Description Section */}\n      <section\n        id=\"description-section\"\n        className={`vt-description-section animate-section ${\n          animatedSections[\"description-section\"] ? \"visible\" : \"\"\n        }`}\n      >\n        <div className=\"vt-description-container\">\n          <div className=\"vt-description-text\">\n            <p>\n              Không biết bắt đầu từ đâu? Hãy tự làm hướng dẫn viên cho mình với\n              những lộ trình được thiết kế dựa trên thời gian bạn dự định dành\n              cho bảo tàng và sở thích của bạn.\n            </p>\n            <p>\n              Để chuẩn bị cho chuyến thăm, hãy nhớ kiểm tra tình trạng mở cửa\n              của các phòng. Một số tác phẩm có thể không được trưng bày do\n              triển lãm đặc biệt, cho mượn, bảo trì, v.v. Nếu gặp trường hợp\n              này, hãy chuyển sang điểm dừng tiếp theo, vì điều này sẽ không làm\n              thay đổi lộ trình tham quan của bạn.\n            </p>\n          </div>\n\n          <Link to=\"/museum-map\" className=\"vt-map-link\">\n            Xem bản đồ bảo tàng <ArrowRightIcon />\n          </Link>\n        </div>\n      </section>\n\n      {/* Trails Section - Optimize image loading */}\n      <section\n        id=\"trails-section\"\n        className={`vt-trails-section animate-section ${\n          animatedSections[\"trails-section\"] ? \"visible\" : \"\"\n        }`}\n      >\n        <div className=\"vt-section-header\">\n          <h2 className=\"vt-section-title\">Khám phá lộ trình tham quan</h2>\n          <div className=\"vt-section-divider\"></div>\n        </div>\n\n        <div className=\"vt-trails-grid\">\n          {trailsData.map((trail) => (\n            <div\n              key={trail.id}\n              className={`vt-trail-item ${\n                loadedImages[trail.id] ? \"loaded\" : \"\"\n              }`}\n            >\n              <Link to={`/visitor-trails/${trail.id}`}>\n                <div className=\"vt-trail-image-container\">\n                  <img\n                    src={getImageUrl(trail.image)}\n                    alt={trail.title}\n                    className=\"vt-trail-image\"\n                    loading=\"lazy\"\n                    onLoad={() => handleImageLoad(trail.id)}\n                    style={{\n                      willChange: \"transform\",\n                      transform: \"translateZ(0)\",\n                    }}\n                  />\n                  <div className=\"vt-trail-duration\">\n                    <ClockIcon /> {trail.duration}\n                  </div>\n                </div>\n                <div className=\"vt-trail-content\">\n                  <h3 className=\"vt-trail-title\">{trail.title}</h3>\n                  <p className=\"vt-trail-description\">{trail.description}</p>\n                </div>\n              </Link>\n            </div>\n          ))}\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default React.memo(VisitorTrailsPage); // Prevent unnecessary re-renders\n",
      "start": 1751301164055,
      "end": 1751301164366,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1751301164366,
      "end": 1751301164366,
      "order": "pre"
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getImageUrl } from \"../../utils/cloudinary\";\nimport \"./VisitorTrailsPage.css\";\nconst ClockIcon = () => /* @__PURE__ */ jsxs(\n  \"svg\",\n  {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"16\",\n    height: \"16\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    className: \"vt-clock-icon\",\n    children: [\n      /* @__PURE__ */ jsx(\"circle\", { cx: \"12\", cy: \"12\", r: \"10\" }),\n      /* @__PURE__ */ jsx(\"polyline\", { points: \"12 6 12 12 16 14\" })\n    ]\n  }\n);\nconst AudioIcon = () => /* @__PURE__ */ jsxs(\n  \"svg\",\n  {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"20\",\n    height: \"20\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    children: [\n      /* @__PURE__ */ jsx(\"path\", { d: \"M11 5L6 9H2v6h4l5 4V5z\" }),\n      /* @__PURE__ */ jsx(\"path\", { d: \"M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7.07\" })\n    ]\n  }\n);\nconst ArrowRightIcon = () => /* @__PURE__ */ jsxs(\n  \"svg\",\n  {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"20\",\n    height: \"20\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    children: [\n      /* @__PURE__ */ jsx(\"line\", { x1: \"5\", y1: \"12\", x2: \"19\", y2: \"12\" }),\n      /* @__PURE__ */ jsx(\"polyline\", { points: \"12 5 19 12 12 19\" })\n    ]\n  }\n);\nconst ScrollDownIcon = () => /* @__PURE__ */ jsxs(\n  \"svg\",\n  {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"24\",\n    height: \"24\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    children: [\n      /* @__PURE__ */ jsx(\"path\", { d: \"M12 5v14\" }),\n      /* @__PURE__ */ jsx(\"path\", { d: \"M19 12l-7 7-7-7\" })\n    ]\n  }\n);\nconst trailsData = [\n  {\n    id: 1,\n    title: \"DỤNG CỤ ÂM NHẠC TÂY NGUYÊN\",\n    description: \"Khám phá âm nhạc truyền thống của người Tây Nguyên qua các nhạc cụ độc đáo như cồng chiêng - biểu tượng văn hóa và tín ngưỡng thiêng liêng.\",\n    image: \"Cồng Chiên.webp\",\n    duration: \"1H30\",\n    audioGuide: true\n  },\n  {\n    id: 2,\n    title: \"Hơi thở đại ngàn\",\n    description: \"Khám phá các công cụ và phương thức chăn nuôi truyền thống của người K'ho, từ lồng đa đa đến các vật dụng chăn nuôi khác.\",\n    image: \"Lồng Đa Đa.webp\",\n    duration: \"1H30\",\n    audioGuide: true\n  },\n  {\n    id: 3,\n    title: \"Lửa thiêng đêm núi\",\n    description: \"Tìm hiểu về các lễ hội truyền thống và nghi thức văn hóa của người K'ho thông qua các hiện vật như Ché Ghò Sành.\",\n    image: \"36 (2).webp\",\n    duration: \"1H\",\n    audioGuide: true\n  },\n  {\n    id: 4,\n    title: \"Hình hài bản sắc\",\n    description: \"Chiêm ngưỡng nghệ thuật điêu khắc truyền thống của người K'ho qua các tác phẩm tượng và điêu khắc tinh xảo.\",\n    image: \"Điêu Khắc.webp\",\n    duration: \"1H30P\",\n    audioGuide: true\n  },\n  {\n    id: 5,\n    title: \"Những mùa no ấm\",\n    description: \"Khám phá các công cụ săn bắn, hái lượm và canh tác truyền thống của người K'ho.\",\n    image: \"Chiếc Gùi.webp\",\n    duration: \"1H\",\n    audioGuide: true\n  },\n  {\n    id: 6,\n    title: \"Hơi ấm buôn làng\",\n    description: \"Tìm hiểu về đời sống hàng ngày của người K'ho qua các vật dụng sinh hoạt như nồi đất, bầu hồ lô.\",\n    image: \"Nồi Đất.webp\",\n    duration: \"1H30\",\n    audioGuide: true\n  },\n  {\n    id: 7,\n    title: \"PHỨC TẦNG\",\n    description: \"Tham quan trải nghiệm thiên nhiên của đồi thông.\",\n    image: \"Thông 2.webp\",\n    duration: \"1H\",\n    audioGuide: true\n  },\n  {\n    id: 8,\n    title: \"VẬT LIỆU\",\n    description: \"Tham quan vật liệu của người Tây Nguyên.\",\n    image: \"Hoa Ban Trắng.webp\",\n    duration: \"30P\",\n    audioGuide: true\n  },\n  {\n    id: 9,\n    title: \"Redpine Art Studio\",\n    description: \"Không gian lưu trú nghệ thuật giữa rừng thông Đà Lạt.\",\n    image: \"luutrunghethuat.jpg\",\n    duration: \"45P\",\n    audioGuide: true\n  },\n  {\n    id: 10,\n    title: \"Bề mặt ký ức\",\n    description: \"Bộ sưu tập về ký ức và hoài niệm\",\n    image: \"Lửa.webp\",\n    duration: \"45P\",\n    audioGuide: true\n  },\n  {\n    id: 11,\n    title: \"Thiên nhiên Đà Lạt\",\n    description: \"Không gian lưu trú nghệ thuật giữa rừng thông Đà Lạt\",\n    image: \"Gió.webp\",\n    duration: \"45P\",\n    audioGuide: true\n  },\n  {\n    id: 12,\n    title: \"Sắc màu Tây nguyên\",\n    description: \"Bộ sưu tập về sắc màu Tây nguyên\",\n    image: \"Đông.webp\",\n    duration: \"45P\",\n    audioGuide: true\n  }\n];\nconst VisitorTrailsPage = () => {\n  const [animatedSections, setAnimatedSections] = useState({});\n  const [loadedImages, setLoadedImages] = useState({});\n  const observerCallback = useCallback((entries) => {\n    entries.forEach((entry) => {\n      if (entry.isIntersecting) {\n        setAnimatedSections((prev) => ({\n          ...prev,\n          [entry.target.id]: true\n        }));\n      }\n    });\n  }, []);\n  useEffect(() => {\n    document.title = \"Lộ trình tham quan | Musée Du Pin\";\n    const heroImg = new Image();\n    heroImg.src = getImageUrl(\"louvre-sunset.webp\");\n    const observer = new IntersectionObserver(observerCallback, {\n      threshold: 0.1,\n      // Reduce threshold for earlier loading\n      rootMargin: \"50px\"\n      // Load images before they enter viewport\n    });\n    const sections = document.querySelectorAll(\".animate-section\");\n    sections.forEach((section) => observer.observe(section));\n    return () => {\n      sections.forEach((section) => observer.unobserve(section));\n    };\n  }, [observerCallback]);\n  const handleImageLoad = useCallback((trailId) => {\n    setLoadedImages((prev) => ({\n      ...prev,\n      [trailId]: true\n    }));\n  }, []);\n  return /* @__PURE__ */ jsxs(\"div\", { className: \"visitor-trails-page\", children: [\n    /* @__PURE__ */ jsxs(\"div\", { className: \"vt-hero\", children: [\n      /* @__PURE__ */ jsx(\n        \"div\",\n        {\n          className: \"vt-hero-image\",\n          style: {\n            backgroundImage: `url(${getImageUrl(\"louvre-sunset.webp\")})`,\n            willChange: \"transform\",\n            transform: \"translateZ(0)\"\n          },\n          children: /* @__PURE__ */ jsx(\"div\", { className: \"vt-hero-overlay\" })\n        }\n      ),\n      /* @__PURE__ */ jsxs(\"div\", { className: \"vt-hero-content\", children: [\n        /* @__PURE__ */ jsx(\"h1\", { className: \"vt-hero-title\", children: \"LỘ TRÌNH THAM QUAN\" }),\n        /* @__PURE__ */ jsx(\"p\", { className: \"vt-hero-subtitle\", children: \"Những gợi ý hữu ích trước hoặc trong chuyến thăm của bạn\" })\n      ] }),\n      /* @__PURE__ */ jsxs(\"div\", { className: \"vt-hero-scroll-indicator\", children: [\n        /* @__PURE__ */ jsx(\"div\", { className: \"vt-hero-scroll-mouse\", children: /* @__PURE__ */ jsx(\"div\", { className: \"vt-hero-scroll-wheel\" }) }),\n        /* @__PURE__ */ jsx(\"span\", { children: \"CUỘN XUỐNG\" })\n      ] })\n    ] }),\n    /* @__PURE__ */ jsx(\n      \"section\",\n      {\n        id: \"description-section\",\n        className: `vt-description-section animate-section ${animatedSections[\"description-section\"] ? \"visible\" : \"\"}`,\n        children: /* @__PURE__ */ jsxs(\"div\", { className: \"vt-description-container\", children: [\n          /* @__PURE__ */ jsxs(\"div\", { className: \"vt-description-text\", children: [\n            /* @__PURE__ */ jsx(\"p\", { children: \"Không biết bắt đầu từ đâu? Hãy tự làm hướng dẫn viên cho mình với những lộ trình được thiết kế dựa trên thời gian bạn dự định dành cho bảo tàng và sở thích của bạn.\" }),\n            /* @__PURE__ */ jsx(\"p\", { children: \"Để chuẩn bị cho chuyến thăm, hãy nhớ kiểm tra tình trạng mở cửa của các phòng. Một số tác phẩm có thể không được trưng bày do triển lãm đặc biệt, cho mượn, bảo trì, v.v. Nếu gặp trường hợp này, hãy chuyển sang điểm dừng tiếp theo, vì điều này sẽ không làm thay đổi lộ trình tham quan của bạn.\" })\n          ] }),\n          /* @__PURE__ */ jsxs(Link, { to: \"/museum-map\", className: \"vt-map-link\", children: [\n            \"Xem bản đồ bảo tàng \",\n            /* @__PURE__ */ jsx(ArrowRightIcon, {})\n          ] })\n        ] })\n      }\n    ),\n    /* @__PURE__ */ jsxs(\n      \"section\",\n      {\n        id: \"trails-section\",\n        className: `vt-trails-section animate-section ${animatedSections[\"trails-section\"] ? \"visible\" : \"\"}`,\n        children: [\n          /* @__PURE__ */ jsxs(\"div\", { className: \"vt-section-header\", children: [\n            /* @__PURE__ */ jsx(\"h2\", { className: \"vt-section-title\", children: \"Khám phá lộ trình tham quan\" }),\n            /* @__PURE__ */ jsx(\"div\", { className: \"vt-section-divider\" })\n          ] }),\n          /* @__PURE__ */ jsx(\"div\", { className: \"vt-trails-grid\", children: trailsData.map((trail) => /* @__PURE__ */ jsx(\n            \"div\",\n            {\n              className: `vt-trail-item ${loadedImages[trail.id] ? \"loaded\" : \"\"}`,\n              children: /* @__PURE__ */ jsxs(Link, { to: `/visitor-trails/${trail.id}`, children: [\n                /* @__PURE__ */ jsxs(\"div\", { className: \"vt-trail-image-container\", children: [\n                  /* @__PURE__ */ jsx(\n                    \"img\",\n                    {\n                      src: getImageUrl(trail.image),\n                      alt: trail.title,\n                      className: \"vt-trail-image\",\n                      loading: \"lazy\",\n                      onLoad: () => handleImageLoad(trail.id),\n                      style: {\n                        willChange: \"transform\",\n                        transform: \"translateZ(0)\"\n                      }\n                    }\n                  ),\n                  /* @__PURE__ */ jsxs(\"div\", { className: \"vt-trail-duration\", children: [\n                    /* @__PURE__ */ jsx(ClockIcon, {}),\n                    \" \",\n                    trail.duration\n                  ] })\n                ] }),\n                /* @__PURE__ */ jsxs(\"div\", { className: \"vt-trail-content\", children: [\n                  /* @__PURE__ */ jsx(\"h3\", { className: \"vt-trail-title\", children: trail.title }),\n                  /* @__PURE__ */ jsx(\"p\", { className: \"vt-trail-description\", children: trail.description })\n                ] })\n              ] })\n            },\n            trail.id\n          )) })\n        ]\n      }\n    )\n  ] });\n};\nexport default React.memo(VisitorTrailsPage);\n",
      "start": 1751301164366,
      "end": 1751301166073,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "C:/Users/.Freelancer/MUSSEEDUPIN/src/pages/Visit/VisitorTrailsPage.jsx"
        ],
        "sourcesContent": [
          "import React, { useCallback, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getImageUrl } from \"../../utils/cloudinary\";\nimport \"./VisitorTrailsPage.css\";\n\n// SVG icons\nconst ClockIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    className=\"vt-clock-icon\"\n  >\n    <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n    <polyline points=\"12 6 12 12 16 14\"></polyline>\n  </svg>\n);\n\nconst AudioIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"20\"\n    height=\"20\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M11 5L6 9H2v6h4l5 4V5z\"></path>\n    <path d=\"M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7.07\"></path>\n  </svg>\n);\n\nconst ArrowRightIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"20\"\n    height=\"20\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n    <polyline points=\"12 5 19 12 12 19\"></polyline>\n  </svg>\n);\n\nconst ScrollDownIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M12 5v14\"></path>\n    <path d=\"M19 12l-7 7-7-7\"></path>\n  </svg>\n);\n\n// Trail data\nconst trailsData = [\n  {\n    id: 1,\n    title: \"DỤNG CỤ ÂM NHẠC TÂY NGUYÊN\",\n    description:\n      \"Khám phá âm nhạc truyền thống của người Tây Nguyên qua các nhạc cụ độc đáo như cồng chiêng - biểu tượng văn hóa và tín ngưỡng thiêng liêng.\",\n    image: \"Cồng Chiên.webp\",\n    duration: \"1H30\",\n    audioGuide: true,\n  },\n  {\n    id: 2,\n    title: \"Hơi thở đại ngàn\",\n    description:\n      \"Khám phá các công cụ và phương thức chăn nuôi truyền thống của người K'ho, từ lồng đa đa đến các vật dụng chăn nuôi khác.\",\n    image: \"Lồng Đa Đa.webp\",\n    duration: \"1H30\",\n    audioGuide: true,\n  },\n  {\n    id: 3,\n    title: \"Lửa thiêng đêm núi\",\n    description:\n      \"Tìm hiểu về các lễ hội truyền thống và nghi thức văn hóa của người K'ho thông qua các hiện vật như Ché Ghò Sành.\",\n    image: \"36 (2).webp\",\n    duration: \"1H\",\n    audioGuide: true,\n  },\n  {\n    id: 4,\n    title: \"Hình hài bản sắc\",\n    description:\n      \"Chiêm ngưỡng nghệ thuật điêu khắc truyền thống của người K'ho qua các tác phẩm tượng và điêu khắc tinh xảo.\",\n    image: \"Điêu Khắc.webp\",\n    duration: \"1H30P\",\n    audioGuide: true,\n  },\n  {\n    id: 5,\n    title: \"Những mùa no ấm\",\n    description:\n      \"Khám phá các công cụ săn bắn, hái lượm và canh tác truyền thống của người K'ho.\",\n    image: \"Chiếc Gùi.webp\",\n    duration: \"1H\",\n    audioGuide: true,\n  },\n  {\n    id: 6,\n    title: \"Hơi ấm buôn làng\",\n    description:\n      \"Tìm hiểu về đời sống hàng ngày của người K'ho qua các vật dụng sinh hoạt như nồi đất, bầu hồ lô.\",\n    image: \"Nồi Đất.webp\",\n    duration: \"1H30\",\n    audioGuide: true,\n  },\n  {\n    id: 7,\n    title: \"PHỨC TẦNG\",\n    description: \"Tham quan trải nghiệm thiên nhiên của đồi thông.\",\n    image: \"Thông 2.webp\",\n    duration: \"1H\",\n    audioGuide: true,\n  },\n  {\n    id: 8,\n    title: \"VẬT LIỆU\",\n    description: \"Tham quan vật liệu của người Tây Nguyên.\",\n    image: \"Hoa Ban Trắng.webp\",\n    duration: \"30P\",\n    audioGuide: true,\n  },\n  {\n    id: 9,\n    title: \"Redpine Art Studio\",\n    description: \"Không gian lưu trú nghệ thuật giữa rừng thông Đà Lạt.\",\n    image: \"luutrunghethuat.jpg\",\n    duration: \"45P\",\n    audioGuide: true,\n  },\n  {\n    id: 10,\n    title: \"Bề mặt ký ức\",\n    description: \"Bộ sưu tập về ký ức và hoài niệm\",\n    image: \"Lửa.webp\",\n    duration: \"45P\",\n    audioGuide: true,\n  },\n  {\n    id: 11,\n    title: \"Thiên nhiên Đà Lạt\",\n    description: \"Không gian lưu trú nghệ thuật giữa rừng thông Đà Lạt\",\n    image: \"Gió.webp\",\n    duration: \"45P\",\n    audioGuide: true,\n  },\n  {\n    id: 12,\n    title: \"Sắc màu Tây nguyên\",\n    description: \"Bộ sưu tập về sắc màu Tây nguyên\",\n    image: \"Đông.webp\",\n    duration: \"45P\",\n    audioGuide: true,\n  },\n];\n\nconst VisitorTrailsPage = () => {\n  const [animatedSections, setAnimatedSections] = useState({});\n  const [loadedImages, setLoadedImages] = useState({});\n\n  // Optimize intersection observer by using useCallback\n  const observerCallback = useCallback((entries) => {\n    entries.forEach((entry) => {\n      if (entry.isIntersecting) {\n        setAnimatedSections((prev) => ({\n          ...prev,\n          [entry.target.id]: true,\n        }));\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    document.title = \"Lộ trình tham quan | Musée Du Pin\";\n\n    // Preload hero image\n    const heroImg = new Image();\n    heroImg.src = getImageUrl(\"louvre-sunset.webp\");\n\n    // Optimize observer options\n    const observer = new IntersectionObserver(observerCallback, {\n      threshold: 0.1, // Reduce threshold for earlier loading\n      rootMargin: \"50px\", // Load images before they enter viewport\n    });\n\n    // Observe sections with debounced handler\n    const sections = document.querySelectorAll(\".animate-section\");\n    sections.forEach((section) => observer.observe(section));\n\n    return () => {\n      sections.forEach((section) => observer.unobserve(section));\n    };\n  }, [observerCallback]);\n\n  // Lazy load trail images\n  const handleImageLoad = useCallback((trailId) => {\n    setLoadedImages((prev) => ({\n      ...prev,\n      [trailId]: true,\n    }));\n  }, []);\n\n  return (\n    <div className=\"visitor-trails-page\">\n      {/* Hero Section - Optimize background image loading */}\n      <div className=\"vt-hero\">\n        <div\n          className=\"vt-hero-image\"\n          style={{\n            backgroundImage: `url(${getImageUrl(\"louvre-sunset.webp\")})`,\n            willChange: \"transform\",\n            transform: \"translateZ(0)\",\n          }}\n        >\n          <div className=\"vt-hero-overlay\"></div>\n        </div>\n        <div className=\"vt-hero-content\">\n          <h1 className=\"vt-hero-title\">LỘ TRÌNH THAM QUAN</h1>\n          <p className=\"vt-hero-subtitle\">\n            Những gợi ý hữu ích trước hoặc trong chuyến thăm của bạn\n          </p>\n        </div>\n        <div className=\"vt-hero-scroll-indicator\">\n          <div className=\"vt-hero-scroll-mouse\">\n            <div className=\"vt-hero-scroll-wheel\"></div>\n          </div>\n          <span>CUỘN XUỐNG</span>\n        </div>\n      </div>\n\n      {/* Description Section */}\n      <section\n        id=\"description-section\"\n        className={`vt-description-section animate-section ${\n          animatedSections[\"description-section\"] ? \"visible\" : \"\"\n        }`}\n      >\n        <div className=\"vt-description-container\">\n          <div className=\"vt-description-text\">\n            <p>\n              Không biết bắt đầu từ đâu? Hãy tự làm hướng dẫn viên cho mình với\n              những lộ trình được thiết kế dựa trên thời gian bạn dự định dành\n              cho bảo tàng và sở thích của bạn.\n            </p>\n            <p>\n              Để chuẩn bị cho chuyến thăm, hãy nhớ kiểm tra tình trạng mở cửa\n              của các phòng. Một số tác phẩm có thể không được trưng bày do\n              triển lãm đặc biệt, cho mượn, bảo trì, v.v. Nếu gặp trường hợp\n              này, hãy chuyển sang điểm dừng tiếp theo, vì điều này sẽ không làm\n              thay đổi lộ trình tham quan của bạn.\n            </p>\n          </div>\n\n          <Link to=\"/museum-map\" className=\"vt-map-link\">\n            Xem bản đồ bảo tàng <ArrowRightIcon />\n          </Link>\n        </div>\n      </section>\n\n      {/* Trails Section - Optimize image loading */}\n      <section\n        id=\"trails-section\"\n        className={`vt-trails-section animate-section ${\n          animatedSections[\"trails-section\"] ? \"visible\" : \"\"\n        }`}\n      >\n        <div className=\"vt-section-header\">\n          <h2 className=\"vt-section-title\">Khám phá lộ trình tham quan</h2>\n          <div className=\"vt-section-divider\"></div>\n        </div>\n\n        <div className=\"vt-trails-grid\">\n          {trailsData.map((trail) => (\n            <div\n              key={trail.id}\n              className={`vt-trail-item ${\n                loadedImages[trail.id] ? \"loaded\" : \"\"\n              }`}\n            >\n              <Link to={`/visitor-trails/${trail.id}`}>\n                <div className=\"vt-trail-image-container\">\n                  <img\n                    src={getImageUrl(trail.image)}\n                    alt={trail.title}\n                    className=\"vt-trail-image\"\n                    loading=\"lazy\"\n                    onLoad={() => handleImageLoad(trail.id)}\n                    style={{\n                      willChange: \"transform\",\n                      transform: \"translateZ(0)\",\n                    }}\n                  />\n                  <div className=\"vt-trail-duration\">\n                    <ClockIcon /> {trail.duration}\n                  </div>\n                </div>\n                <div className=\"vt-trail-content\">\n                  <h3 className=\"vt-trail-title\">{trail.title}</h3>\n                  <p className=\"vt-trail-description\">{trail.description}</p>\n                </div>\n              </Link>\n            </div>\n          ))}\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default React.memo(VisitorTrailsPage); // Prevent unnecessary re-renders\n"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1751301166073,
      "end": 1751301166073,
      "order": "normal-normal"
    },
    {
      "name": "vite:define",
      "start": 1751301166073,
      "end": 1751301166073,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-html",
      "start": 1751301166073,
      "end": 1751301166073,
      "order": "normal-normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1751301166073,
      "end": 1751301166073,
      "order": "normal-normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1751301166073,
      "end": 1751301166073,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1751301166073,
      "end": 1751301166073,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1751301166073,
      "end": 1751301166074,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1751301166074,
      "end": 1751301166076,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1751301166076,
      "end": 1751301166076,
      "order": "normal"
    }
  ]
}
